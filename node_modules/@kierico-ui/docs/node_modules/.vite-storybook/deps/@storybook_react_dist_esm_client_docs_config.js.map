{
  "version": 3,
  "sources": ["../../../../../node_modules/@storybook/react/dist/esm/client/docs/extractProps.js", "../../../../../node_modules/@storybook/react/dist/esm/client/docs/propTypes/createType.js", "../../../../../node_modules/@storybook/react/dist/esm/client/docs/propTypes/generateFuncSignature.js", "../../../../../node_modules/@storybook/react/dist/esm/client/docs/lib/captions.js", "../../../../../node_modules/@storybook/react/dist/esm/client/docs/lib/isHtmlTag.js", "../../../../../node_modules/@storybook/react/dist/esm/client/docs/lib/generateCode.js", "../../../../../node_modules/@storybook/react/dist/esm/client/docs/lib/componentTypes.js", "../../../../../node_modules/@storybook/react/dist/esm/client/docs/lib/inspection/types.js", "../../../../../node_modules/@storybook/react/dist/esm/client/docs/lib/inspection/acornParser.js", "../../../../../node_modules/@storybook/react/dist/esm/client/docs/lib/inspection/inspectValue.js", "../../../../../node_modules/@storybook/react/dist/esm/client/docs/lib/defaultValues/generateObject.js", "../../../../../node_modules/@storybook/react/dist/esm/client/docs/lib/defaultValues/generateArray.js", "../../../../../node_modules/@storybook/react/dist/esm/client/docs/lib/defaultValues/prettyIdentifier.js", "../../../../../node_modules/@storybook/react/dist/esm/client/docs/lib/defaultValues/createDefaultValue.js", "../../../../../node_modules/@storybook/react/dist/esm/client/docs/lib/defaultValues/createFromRawDefaultProp.js", "../../../../../node_modules/react-element-to-jsx-string/node_modules/is-plain-object/dist/is-plain-object.mjs", "../../../../../node_modules/react-element-to-jsx-string/src/formatter/spacer.js", "../../../../../node_modules/react-element-to-jsx-string/src/formatter/sortObject.js", "../../../../../node_modules/react-element-to-jsx-string/src/tree.js", "../../../../../node_modules/react-element-to-jsx-string/src/parser/parseReactElement.js", "../../../../../node_modules/react-element-to-jsx-string/src/formatter/formatFunction.js", "../../../../../node_modules/react-element-to-jsx-string/src/formatter/formatComplexDataStructure.js", "../../../../../node_modules/react-element-to-jsx-string/src/formatter/formatPropValue.js", "../../../../../node_modules/react-element-to-jsx-string/src/formatter/formatProp.js", "../../../../../node_modules/react-element-to-jsx-string/src/formatter/mergeSiblingPlainStringChildrenReducer.js", "../../../../../node_modules/react-element-to-jsx-string/src/formatter/sortPropsByNames.js", "../../../../../node_modules/react-element-to-jsx-string/src/formatter/createPropFilter.js", "../../../../../node_modules/react-element-to-jsx-string/src/formatter/formatReactElementNode.js", "../../../../../node_modules/react-element-to-jsx-string/src/formatter/formatReactFragmentNode.js", "../../../../../node_modules/react-element-to-jsx-string/src/formatter/formatTreeNode.js", "../../../../../node_modules/react-element-to-jsx-string/src/formatter/formatTree.js", "../../../../../node_modules/react-element-to-jsx-string/src/index.js", "../../../../../node_modules/@storybook/react/dist/esm/client/docs/propTypes/sortProps.js", "../../../../../node_modules/@storybook/react/dist/esm/client/docs/propTypes/rawDefaultPropResolvers.js", "../../../../../node_modules/@storybook/react/dist/esm/client/docs/propTypes/handleProp.js", "../../../../../node_modules/@storybook/react/dist/esm/client/docs/typeScript/handleProp.js", "../../../../../node_modules/@storybook/react/dist/esm/client/docs/extractArgTypes.js", "../../../../../node_modules/@storybook/react/dist/esm/client/docs/jsxDecorator.js", "../../../../../node_modules/@storybook/react/dist/esm/client/docs/config.js"],
  "sourcesContent": ["import \"core-js/modules/es.array.iterator.js\";\r\nimport \"core-js/modules/es.map.js\";\r\nimport \"core-js/modules/es.object.to-string.js\";\r\nimport \"core-js/modules/es.string.iterator.js\";\r\nimport \"core-js/modules/web.dom-collections.iterator.js\";\r\nimport \"core-js/modules/web.dom-collections.for-each.js\";\r\nimport \"core-js/modules/es.object.keys.js\";\r\nimport \"core-js/modules/es.array.map.js\";\r\nimport PropTypes from 'prop-types';\r\nimport { hasDocgen, extractComponentProps, TypeSystem } from '@storybook/docs-tools';\r\nimport { enhancePropTypesProps } from './propTypes/handleProp';\r\nimport { enhanceTypeScriptProps } from './typeScript/handleProp';\r\nimport { isMemo } from './lib'; // FIXME\r\n\r\nvar propTypesMap = new Map();\r\nObject.keys(PropTypes).forEach(function (typeName) {\r\n  // @ts-ignore\r\n  var type = PropTypes[typeName];\r\n  propTypesMap.set(type, typeName);\r\n  propTypesMap.set(type.isRequired, typeName);\r\n});\r\n\r\nfunction getPropDefs(component, section) {\r\n  var processedComponent = component; // eslint-disable-next-line react/forbid-foreign-prop-types\r\n\r\n  if (!hasDocgen(component) && !component.propTypes && isMemo(component)) {\r\n    processedComponent = component.type;\r\n  }\r\n\r\n  var extractedProps = extractComponentProps(processedComponent, section);\r\n\r\n  if (extractedProps.length === 0) {\r\n    return [];\r\n  }\r\n\r\n  switch (extractedProps[0].typeSystem) {\r\n    case TypeSystem.JAVASCRIPT:\r\n      return enhancePropTypesProps(extractedProps, component);\r\n\r\n    case TypeSystem.TYPESCRIPT:\r\n      return enhanceTypeScriptProps(extractedProps);\r\n\r\n    default:\r\n      return extractedProps.map(function (x) {\r\n        return x.propDef;\r\n      });\r\n  }\r\n}\r\n\r\nexport var extractProps = function extractProps(component) {\r\n  return {\r\n    rows: getPropDefs(component, 'props')\r\n  };\r\n};", "import \"core-js/modules/es.function.name.js\";\r\nimport \"core-js/modules/es.regexp.exec.js\";\r\nimport \"core-js/modules/es.string.replace.js\";\r\nimport \"core-js/modules/es.string.split.js\";\r\nimport \"core-js/modules/es.array.join.js\";\r\nimport \"core-js/modules/es.array.map.js\";\r\nimport \"core-js/modules/es.object.keys.js\";\r\nimport \"core-js/modules/es.array.concat.js\";\r\nimport \"core-js/modules/es.object.to-string.js\";\r\nimport { createSummaryValue, isTooLongForTypeSummary } from '@storybook/docs-tools';\r\nimport { generateFuncSignature, generateShortFuncSignature, toMultilineSignature } from './generateFuncSignature';\r\nimport { OBJECT_CAPTION, ARRAY_CAPTION, CLASS_CAPTION, FUNCTION_CAPTION, ELEMENT_CAPTION, CUSTOM_CAPTION, isHtmlTag, generateObjectCode, generateCode } from '../lib';\r\nimport { InspectionType, inspectValue } from '../lib/inspection';\r\nvar MAX_FUNC_LENGTH = 150;\r\nvar PropTypesType;\r\n\r\n(function (PropTypesType) {\r\n  PropTypesType[\"CUSTOM\"] = \"custom\";\r\n  PropTypesType[\"ANY\"] = \"any\";\r\n  PropTypesType[\"FUNC\"] = \"func\";\r\n  PropTypesType[\"SHAPE\"] = \"shape\";\r\n  PropTypesType[\"OBJECT\"] = \"object\";\r\n  PropTypesType[\"INSTANCEOF\"] = \"instanceOf\";\r\n  PropTypesType[\"OBJECTOF\"] = \"objectOf\";\r\n  PropTypesType[\"UNION\"] = \"union\";\r\n  PropTypesType[\"ENUM\"] = \"enum\";\r\n  PropTypesType[\"ARRAYOF\"] = \"arrayOf\";\r\n  PropTypesType[\"ELEMENT\"] = \"element\";\r\n  PropTypesType[\"ELEMENTTYPE\"] = \"elementType\";\r\n  PropTypesType[\"NODE\"] = \"node\";\r\n})(PropTypesType || (PropTypesType = {}));\r\n\r\nfunction createTypeDef(_ref) {\r\n  var name = _ref.name,\r\n      short = _ref.short,\r\n      compact = _ref.compact,\r\n      full = _ref.full,\r\n      inferredType = _ref.inferredType;\r\n  return {\r\n    name: name,\r\n    short: short,\r\n    compact: compact,\r\n    full: full != null ? full : short,\r\n    inferredType: inferredType\r\n  };\r\n}\r\n\r\nfunction cleanPropTypes(value) {\r\n  return value.replace(/PropTypes./g, '').replace(/.isRequired/g, '');\r\n}\r\n\r\nfunction splitIntoLines(value) {\r\n  return value.split(/\\r?\\n/);\r\n}\r\n\r\nfunction prettyObject(ast) {\r\n  var compact = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n  return cleanPropTypes(generateObjectCode(ast, compact));\r\n}\r\n\r\nfunction prettyArray(ast) {\r\n  var compact = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n  return cleanPropTypes(generateCode(ast, compact));\r\n}\r\n\r\nfunction getCaptionForInspectionType(type) {\r\n  switch (type) {\r\n    case InspectionType.OBJECT:\r\n      return OBJECT_CAPTION;\r\n\r\n    case InspectionType.ARRAY:\r\n      return ARRAY_CAPTION;\r\n\r\n    case InspectionType.CLASS:\r\n      return CLASS_CAPTION;\r\n\r\n    case InspectionType.FUNCTION:\r\n      return FUNCTION_CAPTION;\r\n\r\n    case InspectionType.ELEMENT:\r\n      return ELEMENT_CAPTION;\r\n\r\n    default:\r\n      return CUSTOM_CAPTION;\r\n  }\r\n}\r\n\r\nfunction generateTypeFromString(value, originalTypeName) {\r\n  var _inspectValue = inspectValue(value),\r\n      inferredType = _inspectValue.inferredType,\r\n      ast = _inspectValue.ast;\r\n\r\n  var type = inferredType.type;\r\n  var short;\r\n  var compact;\r\n  var full;\r\n\r\n  switch (type) {\r\n    case InspectionType.IDENTIFIER:\r\n    case InspectionType.LITERAL:\r\n      short = value;\r\n      compact = value;\r\n      break;\r\n\r\n    case InspectionType.OBJECT:\r\n      {\r\n        var _ref2 = inferredType,\r\n            depth = _ref2.depth;\r\n        short = OBJECT_CAPTION;\r\n        compact = depth === 1 ? prettyObject(ast, true) : null;\r\n        full = prettyObject(ast);\r\n        break;\r\n      }\r\n\r\n    case InspectionType.ELEMENT:\r\n      {\r\n        var _ref3 = inferredType,\r\n            identifier = _ref3.identifier;\r\n        short = identifier != null && !isHtmlTag(identifier) ? identifier : ELEMENT_CAPTION;\r\n        compact = splitIntoLines(value).length === 1 ? value : null;\r\n        full = value;\r\n        break;\r\n      }\r\n\r\n    case InspectionType.ARRAY:\r\n      {\r\n        var _ref4 = inferredType,\r\n            _depth = _ref4.depth;\r\n        short = ARRAY_CAPTION;\r\n        compact = _depth <= 2 ? prettyArray(ast, true) : null;\r\n        full = prettyArray(ast);\r\n        break;\r\n      }\r\n\r\n    default:\r\n      short = getCaptionForInspectionType(type);\r\n      compact = splitIntoLines(value).length === 1 ? value : null;\r\n      full = value;\r\n      break;\r\n  }\r\n\r\n  return createTypeDef({\r\n    name: originalTypeName,\r\n    short: short,\r\n    compact: compact,\r\n    full: full,\r\n    inferredType: type\r\n  });\r\n}\r\n\r\nfunction generateCustom(_ref5) {\r\n  var raw = _ref5.raw;\r\n\r\n  if (raw != null) {\r\n    return generateTypeFromString(raw, PropTypesType.CUSTOM);\r\n  }\r\n\r\n  return createTypeDef({\r\n    name: PropTypesType.CUSTOM,\r\n    short: CUSTOM_CAPTION,\r\n    compact: CUSTOM_CAPTION\r\n  });\r\n}\r\n\r\nfunction generateFunc(extractedProp) {\r\n  var jsDocTags = extractedProp.jsDocTags;\r\n\r\n  if (jsDocTags != null) {\r\n    if (jsDocTags.params != null || jsDocTags.returns != null) {\r\n      return createTypeDef({\r\n        name: PropTypesType.FUNC,\r\n        short: generateShortFuncSignature(jsDocTags.params, jsDocTags.returns),\r\n        compact: null,\r\n        full: generateFuncSignature(jsDocTags.params, jsDocTags.returns)\r\n      });\r\n    }\r\n  }\r\n\r\n  return createTypeDef({\r\n    name: PropTypesType.FUNC,\r\n    short: FUNCTION_CAPTION,\r\n    compact: FUNCTION_CAPTION\r\n  });\r\n}\r\n\r\nfunction generateShape(type, extractedProp) {\r\n  var fields = Object.keys(type.value).map(function (key) {\r\n    return \"\".concat(key, \": \").concat(generateType(type.value[key], extractedProp).full);\r\n  }).join(', ');\r\n\r\n  var _inspectValue2 = inspectValue(\"{ \".concat(fields, \" }\")),\r\n      inferredType = _inspectValue2.inferredType,\r\n      ast = _inspectValue2.ast;\r\n\r\n  var _ref6 = inferredType,\r\n      depth = _ref6.depth;\r\n  return createTypeDef({\r\n    name: PropTypesType.SHAPE,\r\n    short: OBJECT_CAPTION,\r\n    compact: depth === 1 && ast ? prettyObject(ast, true) : null,\r\n    full: ast ? prettyObject(ast) : null\r\n  });\r\n}\r\n\r\nfunction objectOf(of) {\r\n  return \"objectOf(\".concat(of, \")\");\r\n}\r\n\r\nfunction generateObjectOf(type, extractedProp) {\r\n  var _generateType = generateType(type.value, extractedProp),\r\n      short = _generateType.short,\r\n      compact = _generateType.compact,\r\n      full = _generateType.full;\r\n\r\n  return createTypeDef({\r\n    name: PropTypesType.OBJECTOF,\r\n    short: objectOf(short),\r\n    compact: compact != null ? objectOf(compact) : null,\r\n    full: objectOf(full)\r\n  });\r\n}\r\n\r\nfunction generateUnion(type, extractedProp) {\r\n  if (Array.isArray(type.value)) {\r\n    var values = type.value.reduce(function (acc, v) {\r\n      var _generateType2 = generateType(v, extractedProp),\r\n          short = _generateType2.short,\r\n          compact = _generateType2.compact,\r\n          full = _generateType2.full;\r\n\r\n      acc.short.push(short);\r\n      acc.compact.push(compact);\r\n      acc.full.push(full);\r\n      return acc;\r\n    }, {\r\n      short: [],\r\n      compact: [],\r\n      full: []\r\n    });\r\n    return createTypeDef({\r\n      name: PropTypesType.UNION,\r\n      short: values.short.join(' | '),\r\n      compact: values.compact.every(function (x) {\r\n        return x != null;\r\n      }) ? values.compact.join(' | ') : null,\r\n      full: values.full.join(' | ')\r\n    });\r\n  }\r\n\r\n  return createTypeDef({\r\n    name: PropTypesType.UNION,\r\n    short: type.value,\r\n    compact: null\r\n  });\r\n}\r\n\r\nfunction generateEnumValue(_ref7) {\r\n  var value = _ref7.value,\r\n      computed = _ref7.computed;\r\n  return computed ? generateTypeFromString(value, 'enumvalue') : createTypeDef({\r\n    name: 'enumvalue',\r\n    short: value,\r\n    compact: value\r\n  });\r\n}\r\n\r\nfunction generateEnum(type) {\r\n  if (Array.isArray(type.value)) {\r\n    var values = type.value.reduce(function (acc, v) {\r\n      var _generateEnumValue = generateEnumValue(v),\r\n          short = _generateEnumValue.short,\r\n          compact = _generateEnumValue.compact,\r\n          full = _generateEnumValue.full;\r\n\r\n      acc.short.push(short);\r\n      acc.compact.push(compact);\r\n      acc.full.push(full);\r\n      return acc;\r\n    }, {\r\n      short: [],\r\n      compact: [],\r\n      full: []\r\n    });\r\n    return createTypeDef({\r\n      name: PropTypesType.ENUM,\r\n      short: values.short.join(' | '),\r\n      compact: values.compact.every(function (x) {\r\n        return x != null;\r\n      }) ? values.compact.join(' | ') : null,\r\n      full: values.full.join(' | ')\r\n    });\r\n  }\r\n\r\n  return createTypeDef({\r\n    name: PropTypesType.ENUM,\r\n    short: type.value,\r\n    compact: type.value\r\n  });\r\n}\r\n\r\nfunction braceAfter(of) {\r\n  return \"\".concat(of, \"[]\");\r\n}\r\n\r\nfunction braceAround(of) {\r\n  return \"[\".concat(of, \"]\");\r\n}\r\n\r\nfunction createArrayOfObjectTypeDef(short, compact, full) {\r\n  return createTypeDef({\r\n    name: PropTypesType.ARRAYOF,\r\n    short: braceAfter(short),\r\n    compact: compact != null ? braceAround(compact) : null,\r\n    full: braceAround(full)\r\n  });\r\n}\r\n\r\nfunction generateArray(type, extractedProp) {\r\n  var _generateType3 = generateType(type.value, extractedProp),\r\n      name = _generateType3.name,\r\n      short = _generateType3.short,\r\n      compact = _generateType3.compact,\r\n      full = _generateType3.full,\r\n      inferredType = _generateType3.inferredType;\r\n\r\n  if (name === PropTypesType.CUSTOM) {\r\n    if (inferredType === InspectionType.OBJECT) {\r\n      return createArrayOfObjectTypeDef(short, compact, full);\r\n    }\r\n  } else if (name === PropTypesType.SHAPE) {\r\n    return createArrayOfObjectTypeDef(short, compact, full);\r\n  }\r\n\r\n  return createTypeDef({\r\n    name: PropTypesType.ARRAYOF,\r\n    short: braceAfter(short),\r\n    compact: braceAfter(short)\r\n  });\r\n}\r\n\r\nfunction generateType(type, extractedProp) {\r\n  try {\r\n    switch (type.name) {\r\n      case PropTypesType.CUSTOM:\r\n        return generateCustom(type);\r\n\r\n      case PropTypesType.FUNC:\r\n        return generateFunc(extractedProp);\r\n\r\n      case PropTypesType.SHAPE:\r\n        return generateShape(type, extractedProp);\r\n\r\n      case PropTypesType.INSTANCEOF:\r\n        return createTypeDef({\r\n          name: PropTypesType.INSTANCEOF,\r\n          short: type.value,\r\n          compact: type.value\r\n        });\r\n\r\n      case PropTypesType.OBJECTOF:\r\n        return generateObjectOf(type, extractedProp);\r\n\r\n      case PropTypesType.UNION:\r\n        return generateUnion(type, extractedProp);\r\n\r\n      case PropTypesType.ENUM:\r\n        return generateEnum(type);\r\n\r\n      case PropTypesType.ARRAYOF:\r\n        return generateArray(type, extractedProp);\r\n\r\n      default:\r\n        return createTypeDef({\r\n          name: type.name,\r\n          short: type.name,\r\n          compact: type.name\r\n        });\r\n    }\r\n  } catch (e) {\r\n    // eslint-disable-next-line no-console\r\n    console.error(e);\r\n  }\r\n\r\n  return createTypeDef({\r\n    name: 'unknown',\r\n    short: 'unknown',\r\n    compact: 'unknown'\r\n  });\r\n}\r\n\r\nexport function createType(extractedProp) {\r\n  var type = extractedProp.docgenInfo.type; // A type could be null if a defaultProp has been provided without a type definition.\r\n\r\n  if (type == null) {\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    switch (type.name) {\r\n      case PropTypesType.CUSTOM:\r\n      case PropTypesType.SHAPE:\r\n      case PropTypesType.INSTANCEOF:\r\n      case PropTypesType.OBJECTOF:\r\n      case PropTypesType.UNION:\r\n      case PropTypesType.ENUM:\r\n      case PropTypesType.ARRAYOF:\r\n        {\r\n          var _generateType4 = generateType(type, extractedProp),\r\n              short = _generateType4.short,\r\n              compact = _generateType4.compact,\r\n              full = _generateType4.full;\r\n\r\n          if (compact != null) {\r\n            if (!isTooLongForTypeSummary(compact)) {\r\n              return createSummaryValue(compact);\r\n            }\r\n          }\r\n\r\n          return createSummaryValue(short, full);\r\n        }\r\n\r\n      case PropTypesType.FUNC:\r\n        {\r\n          var _generateType5 = generateType(type, extractedProp),\r\n              _short = _generateType5.short,\r\n              _full = _generateType5.full;\r\n\r\n          var summary = _short;\r\n          var detail;\r\n\r\n          if (_full.length < MAX_FUNC_LENGTH) {\r\n            summary = _full;\r\n          } else {\r\n            detail = toMultilineSignature(_full);\r\n          }\r\n\r\n          return createSummaryValue(summary, detail);\r\n        }\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  } catch (e) {\r\n    // eslint-disable-next-line no-console\r\n    console.error(e);\r\n  }\r\n\r\n  return null;\r\n}", "import \"core-js/modules/es.array.map.js\";\r\nimport \"core-js/modules/es.array.concat.js\";\r\nimport \"core-js/modules/es.array.join.js\";\r\nimport \"core-js/modules/es.regexp.exec.js\";\r\nimport \"core-js/modules/es.string.replace.js\";\r\nexport function generateFuncSignature(params, returns) {\r\n  var hasParams = params != null;\r\n  var hasReturns = returns != null;\r\n\r\n  if (!hasParams && !hasReturns) {\r\n    return '';\r\n  }\r\n\r\n  var funcParts = [];\r\n\r\n  if (hasParams) {\r\n    var funcParams = params.map(function (x) {\r\n      var prettyName = x.getPrettyName();\r\n      var typeName = x.getTypeName();\r\n\r\n      if (typeName != null) {\r\n        return \"\".concat(prettyName, \": \").concat(typeName);\r\n      }\r\n\r\n      return prettyName;\r\n    });\r\n    funcParts.push(\"(\".concat(funcParams.join(', '), \")\"));\r\n  } else {\r\n    funcParts.push('()');\r\n  }\r\n\r\n  if (hasReturns) {\r\n    funcParts.push(\"=> \".concat(returns.getTypeName()));\r\n  }\r\n\r\n  return funcParts.join(' ');\r\n}\r\nexport function generateShortFuncSignature(params, returns) {\r\n  var hasParams = params != null;\r\n  var hasReturns = returns != null;\r\n\r\n  if (!hasParams && !hasReturns) {\r\n    return '';\r\n  }\r\n\r\n  var funcParts = [];\r\n\r\n  if (hasParams) {\r\n    funcParts.push('( ... )');\r\n  } else {\r\n    funcParts.push('()');\r\n  }\r\n\r\n  if (hasReturns) {\r\n    funcParts.push(\"=> \".concat(returns.getTypeName()));\r\n  }\r\n\r\n  return funcParts.join(' ');\r\n}\r\nexport function toMultilineSignature(signature) {\r\n  return signature.replace(/,/g, ',\\r\\n');\r\n}", "export var CUSTOM_CAPTION = 'custom';\r\nexport var OBJECT_CAPTION = 'object';\r\nexport var ARRAY_CAPTION = 'array';\r\nexport var CLASS_CAPTION = 'class';\r\nexport var FUNCTION_CAPTION = 'func';\r\nexport var ELEMENT_CAPTION = 'element';", "import \"core-js/modules/es.array.includes.js\";\r\nimport \"core-js/modules/es.string.includes.js\";\r\nimport htmlTags from 'html-tags';\r\nexport function isHtmlTag(tagName) {\r\n  return htmlTags.includes(tagName.toLowerCase());\r\n}", "import \"core-js/modules/es.object.assign.js\";\r\nimport \"core-js/modules/es.string.ends-with.js\";\r\nimport \"core-js/modules/es.array.slice.js\";\r\nimport \"core-js/modules/es.string.starts-with.js\";\r\nimport \"core-js/modules/es.regexp.exec.js\";\r\nimport \"core-js/modules/es.string.replace.js\";\r\nimport { generate } from 'escodegen';\r\nimport dedent from 'ts-dedent';\r\nvar BASIC_OPTIONS = {\r\n  format: {\r\n    indent: {\r\n      style: '  '\r\n    },\r\n    semicolons: false\r\n  }\r\n};\r\nvar COMPACT_OPTIONS = Object.assign({}, BASIC_OPTIONS, {\r\n  format: {\r\n    newline: ''\r\n  }\r\n});\r\nvar PRETTY_OPTIONS = Object.assign({}, BASIC_OPTIONS);\r\nexport function generateCode(ast) {\r\n  var compact = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n  return generate(ast, compact ? COMPACT_OPTIONS : PRETTY_OPTIONS);\r\n}\r\nexport function generateObjectCode(ast) {\r\n  var compact = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n  return !compact ? generateCode(ast) : generateCompactObjectCode(ast);\r\n}\r\n\r\nfunction generateCompactObjectCode(ast) {\r\n  var result = generateCode(ast, true); // Cannot get escodegen to add a space before the last } with the compact mode settings.\r\n  // Fix it until a better solution is found.\r\n\r\n  if (!result.endsWith(' }')) {\r\n    result = \"\".concat(result.slice(0, -1), \" }\");\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function generateArrayCode(ast) {\r\n  var compact = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n  return !compact ? generateMultilineArrayCode(ast) : generateCompactArrayCode(ast);\r\n}\r\n\r\nfunction generateMultilineArrayCode(ast) {\r\n  var result = generateCode(ast); // escodegen add extra spacing before the closing bracket of a multiple line array with a nested object.\r\n  // Fix it until a better solution is found.\r\n\r\n  if (result.endsWith('  }]')) {\r\n    result = dedent(result);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction generateCompactArrayCode(ast) {\r\n  var result = generateCode(ast, true); // escodegen add extra an extra before the opening bracket of a compact array that contains primitive values.\r\n  // Fix it until a better solution is found.\r\n\r\n  if (result.startsWith('[    ')) {\r\n    result = result.replace('[    ', '[');\r\n  }\r\n\r\n  return result;\r\n}", "import \"core-js/modules/es.symbol.js\";\r\nimport \"core-js/modules/es.symbol.description.js\";\r\nimport \"core-js/modules/es.object.to-string.js\";\r\nexport var isMemo = function isMemo(component) {\r\n  return component.$$typeof === Symbol.for('react.memo');\r\n};\r\nexport var isForwardRef = function isForwardRef(component) {\r\n  return component.$$typeof === Symbol.for('react.forward_ref');\r\n};", "export var InspectionType;\r\n\r\n(function (InspectionType) {\r\n  InspectionType[\"IDENTIFIER\"] = \"Identifier\";\r\n  InspectionType[\"LITERAL\"] = \"Literal\";\r\n  InspectionType[\"OBJECT\"] = \"Object\";\r\n  InspectionType[\"ARRAY\"] = \"Array\";\r\n  InspectionType[\"FUNCTION\"] = \"Function\";\r\n  InspectionType[\"CLASS\"] = \"Class\";\r\n  InspectionType[\"ELEMENT\"] = \"Element\";\r\n  InspectionType[\"UNKNOWN\"] = \"Unknown\";\r\n})(InspectionType || (InspectionType = {}));", "import \"core-js/modules/es.object.assign.js\";\r\nimport \"core-js/modules/es.function.name.js\";\r\nimport \"core-js/modules/es.array.filter.js\";\r\nimport \"core-js/modules/es.object.to-string.js\";\r\nimport { Parser } from 'acorn';\r\nimport jsx from 'acorn-jsx';\r\nimport * as acornWalk from 'acorn-walk';\r\nimport { InspectionType } from './types';\r\nvar ACORN_WALK_VISITORS = Object.assign({}, acornWalk.base, {\r\n  JSXElement: function JSXElement() {}\r\n});\r\nvar acornParser = Parser.extend(jsx()); // Cannot use \"estree.Identifier\" type because this function also support \"JSXIdentifier\".\r\n\r\nfunction extractIdentifierName(identifierNode) {\r\n  return identifierNode != null ? identifierNode.name : null;\r\n}\r\n\r\nfunction filterAncestors(ancestors) {\r\n  return ancestors.filter(function (x) {\r\n    return x.type === 'ObjectExpression' || x.type === 'ArrayExpression';\r\n  });\r\n}\r\n\r\nfunction calculateNodeDepth(node) {\r\n  var depths = [];\r\n  acornWalk.ancestor( // @ts-ignore\r\n  node, {\r\n    ObjectExpression: function ObjectExpression(_, ancestors) {\r\n      depths.push(filterAncestors(ancestors).length);\r\n    },\r\n    ArrayExpression: function ArrayExpression(_, ancestors) {\r\n      depths.push(filterAncestors(ancestors).length);\r\n    }\r\n  }, ACORN_WALK_VISITORS);\r\n  return Math.max.apply(Math, depths);\r\n}\r\n\r\nfunction parseIdentifier(identifierNode) {\r\n  return {\r\n    inferredType: {\r\n      type: InspectionType.IDENTIFIER,\r\n      identifier: extractIdentifierName(identifierNode)\r\n    },\r\n    ast: identifierNode\r\n  };\r\n}\r\n\r\nfunction parseLiteral(literalNode) {\r\n  return {\r\n    inferredType: {\r\n      type: InspectionType.LITERAL\r\n    },\r\n    ast: literalNode\r\n  };\r\n}\r\n\r\nfunction parseFunction(funcNode) {\r\n  var innerJsxElementNode; // If there is at least a JSXElement in the body of the function, then it's a React component.\r\n\r\n  acornWalk.simple( // @ts-ignore\r\n  funcNode.body, {\r\n    JSXElement: function JSXElement(node) {\r\n      innerJsxElementNode = node;\r\n    }\r\n  }, ACORN_WALK_VISITORS);\r\n  var isJsx = innerJsxElementNode != null;\r\n  var inferredType = {\r\n    type: isJsx ? InspectionType.ELEMENT : InspectionType.FUNCTION,\r\n    params: funcNode.params,\r\n    hasParams: funcNode.params.length !== 0\r\n  };\r\n  var identifierName = extractIdentifierName(funcNode.id);\r\n\r\n  if (identifierName != null) {\r\n    inferredType.identifier = identifierName;\r\n  }\r\n\r\n  return {\r\n    inferredType: inferredType,\r\n    ast: funcNode\r\n  };\r\n}\r\n\r\nfunction parseClass(classNode) {\r\n  var innerJsxElementNode; // If there is at least a JSXElement in the body of the class, then it's a React component.\r\n\r\n  acornWalk.simple( // @ts-ignore\r\n  classNode.body, {\r\n    JSXElement: function JSXElement(node) {\r\n      innerJsxElementNode = node;\r\n    }\r\n  }, ACORN_WALK_VISITORS);\r\n  var inferredType = {\r\n    type: innerJsxElementNode != null ? InspectionType.ELEMENT : InspectionType.CLASS,\r\n    identifier: extractIdentifierName(classNode.id)\r\n  };\r\n  return {\r\n    inferredType: inferredType,\r\n    ast: classNode\r\n  };\r\n}\r\n\r\nfunction parseJsxElement(jsxElementNode) {\r\n  var inferredType = {\r\n    type: InspectionType.ELEMENT\r\n  };\r\n  var identifierName = extractIdentifierName(jsxElementNode.openingElement.name);\r\n\r\n  if (identifierName != null) {\r\n    inferredType.identifier = identifierName;\r\n  }\r\n\r\n  return {\r\n    inferredType: inferredType,\r\n    ast: jsxElementNode\r\n  };\r\n}\r\n\r\nfunction parseCall(callNode) {\r\n  var identifierNode = callNode.callee.type === 'MemberExpression' ? callNode.callee.property : callNode.callee;\r\n  var identifierName = extractIdentifierName(identifierNode);\r\n\r\n  if (identifierName === 'shape') {\r\n    return parseObject(callNode.arguments[0]);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction parseObject(objectNode) {\r\n  return {\r\n    inferredType: {\r\n      type: InspectionType.OBJECT,\r\n      depth: calculateNodeDepth(objectNode)\r\n    },\r\n    ast: objectNode\r\n  };\r\n}\r\n\r\nfunction parseArray(arrayNode) {\r\n  return {\r\n    inferredType: {\r\n      type: InspectionType.ARRAY,\r\n      depth: calculateNodeDepth(arrayNode)\r\n    },\r\n    ast: arrayNode\r\n  };\r\n} // Cannot set \"expression\" type to \"estree.Expression\" because the type doesn't include JSX.\r\n\r\n\r\nfunction parseExpression(expression) {\r\n  switch (expression.type) {\r\n    case 'Identifier':\r\n      return parseIdentifier(expression);\r\n\r\n    case 'Literal':\r\n      return parseLiteral(expression);\r\n\r\n    case 'FunctionExpression':\r\n    case 'ArrowFunctionExpression':\r\n      return parseFunction(expression);\r\n\r\n    case 'ClassExpression':\r\n      return parseClass(expression);\r\n\r\n    case 'JSXElement':\r\n      return parseJsxElement(expression);\r\n\r\n    case 'CallExpression':\r\n      return parseCall(expression);\r\n\r\n    case 'ObjectExpression':\r\n      return parseObject(expression);\r\n\r\n    case 'ArrayExpression':\r\n      return parseArray(expression);\r\n\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nexport function parse(value) {\r\n  var ast = acornParser.parse(\"(\".concat(value, \")\"));\r\n  var parsingResult = {\r\n    inferredType: {\r\n      type: InspectionType.UNKNOWN\r\n    },\r\n    ast: ast\r\n  };\r\n\r\n  if (ast.body[0] != null) {\r\n    var rootNode = ast.body[0];\r\n\r\n    switch (rootNode.type) {\r\n      case 'ExpressionStatement':\r\n        {\r\n          var expressionResult = parseExpression(rootNode.expression);\r\n\r\n          if (expressionResult != null) {\r\n            parsingResult = expressionResult;\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return parsingResult;\r\n}", "import \"core-js/modules/es.object.assign.js\";\r\nimport { parse } from './acornParser';\r\nimport { InspectionType } from './types';\r\nexport function inspectValue(value) {\r\n  try {\r\n    var parsingResult = parse(value);\r\n    return Object.assign({}, parsingResult);\r\n  } catch (e) {// do nothing.\r\n  }\r\n\r\n  return {\r\n    inferredType: {\r\n      type: InspectionType.UNKNOWN\r\n    }\r\n  };\r\n}", "import { createSummaryValue, isTooLongForDefaultValueSummary } from '@storybook/docs-tools';\r\nimport { OBJECT_CAPTION } from '../captions';\r\nimport { generateObjectCode } from '../generateCode';\r\nexport function generateObject(_ref) {\r\n  var inferredType = _ref.inferredType,\r\n      ast = _ref.ast;\r\n  var _ref2 = inferredType,\r\n      depth = _ref2.depth;\r\n\r\n  if (depth === 1) {\r\n    var compactObject = generateObjectCode(ast, true);\r\n\r\n    if (!isTooLongForDefaultValueSummary(compactObject)) {\r\n      return createSummaryValue(compactObject);\r\n    }\r\n  }\r\n\r\n  return createSummaryValue(OBJECT_CAPTION, generateObjectCode(ast));\r\n}", "import { createSummaryValue, isTooLongForDefaultValueSummary } from '@storybook/docs-tools';\r\nimport { ARRAY_CAPTION } from '../captions';\r\nimport { generateArrayCode } from '../generateCode';\r\nexport function generateArray(_ref) {\r\n  var inferredType = _ref.inferredType,\r\n      ast = _ref.ast;\r\n  var _ref2 = inferredType,\r\n      depth = _ref2.depth;\r\n\r\n  if (depth <= 2) {\r\n    var compactArray = generateArrayCode(ast, true);\r\n\r\n    if (!isTooLongForDefaultValueSummary(compactArray)) {\r\n      return createSummaryValue(compactArray);\r\n    }\r\n  }\r\n\r\n  return createSummaryValue(ARRAY_CAPTION, generateArrayCode(ast));\r\n}", "import { InspectionType } from '../inspection';\r\nexport function getPrettyIdentifier(inferredType) {\r\n  var type = inferredType.type,\r\n      identifier = inferredType.identifier;\r\n\r\n  switch (type) {\r\n    case InspectionType.FUNCTION:\r\n      return getPrettyFuncIdentifier(identifier, inferredType.hasParams);\r\n\r\n    case InspectionType.ELEMENT:\r\n      return getPrettyElementIdentifier(identifier);\r\n\r\n    default:\r\n      return identifier;\r\n  }\r\n}\r\nexport function getPrettyFuncIdentifier(identifier, hasArguments) {\r\n  return hasArguments ? \"\".concat(identifier, \"( ... )\") : \"\".concat(identifier, \"()\");\r\n}\r\nexport function getPrettyElementIdentifier(identifier) {\r\n  return \"<\".concat(identifier, \" />\");\r\n}", "import { createSummaryValue, isTooLongForDefaultValueSummary } from '@storybook/docs-tools';\r\nimport { FUNCTION_CAPTION, ELEMENT_CAPTION } from '../captions';\r\nimport { InspectionType, inspectValue } from '../inspection';\r\nimport { isHtmlTag } from '../isHtmlTag';\r\nimport { generateCode } from '../generateCode';\r\nimport { generateObject } from './generateObject';\r\nimport { generateArray } from './generateArray';\r\nimport { getPrettyIdentifier } from './prettyIdentifier';\r\n\r\nfunction generateFunc(_ref) {\r\n  var inferredType = _ref.inferredType,\r\n      ast = _ref.ast;\r\n  var _ref2 = inferredType,\r\n      identifier = _ref2.identifier;\r\n\r\n  if (identifier != null) {\r\n    return createSummaryValue(getPrettyIdentifier(inferredType), generateCode(ast));\r\n  }\r\n\r\n  var prettyCaption = generateCode(ast, true);\r\n  return !isTooLongForDefaultValueSummary(prettyCaption) ? createSummaryValue(prettyCaption) : createSummaryValue(FUNCTION_CAPTION, generateCode(ast));\r\n} // All elements are JSX elements.\r\n// JSX elements are not supported by escodegen.\r\n\r\n\r\nfunction generateElement(defaultValue, inspectionResult) {\r\n  var inferredType = inspectionResult.inferredType;\r\n  var _ref3 = inferredType,\r\n      identifier = _ref3.identifier;\r\n\r\n  if (identifier != null) {\r\n    if (!isHtmlTag(identifier)) {\r\n      var prettyIdentifier = getPrettyIdentifier(inferredType);\r\n      return createSummaryValue(prettyIdentifier, defaultValue);\r\n    }\r\n  }\r\n\r\n  return !isTooLongForDefaultValueSummary(defaultValue) ? createSummaryValue(defaultValue) : createSummaryValue(ELEMENT_CAPTION, defaultValue);\r\n}\r\n\r\nexport function createDefaultValue(defaultValue) {\r\n  try {\r\n    var inspectionResult = inspectValue(defaultValue);\r\n\r\n    switch (inspectionResult.inferredType.type) {\r\n      case InspectionType.OBJECT:\r\n        return generateObject(inspectionResult);\r\n\r\n      case InspectionType.FUNCTION:\r\n        return generateFunc(inspectionResult);\r\n\r\n      case InspectionType.ELEMENT:\r\n        return generateElement(defaultValue, inspectionResult);\r\n\r\n      case InspectionType.ARRAY:\r\n        return generateArray(inspectionResult);\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  } catch (e) {\r\n    // eslint-disable-next-line no-console\r\n    console.error(e);\r\n  }\r\n\r\n  return null;\r\n}", "function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\r\n\r\nimport \"core-js/modules/es.function.name.js\";\r\nimport \"core-js/modules/es.regexp.exec.js\";\r\nimport \"core-js/modules/es.string.replace.js\";\r\nimport \"core-js/modules/es.object.to-string.js\";\r\nimport \"core-js/modules/es.regexp.to-string.js\";\r\nimport \"core-js/modules/es.object.assign.js\";\r\nimport \"core-js/modules/es.symbol.js\";\r\nimport \"core-js/modules/es.symbol.description.js\";\r\nimport \"core-js/modules/es.symbol.iterator.js\";\r\nimport \"core-js/modules/es.array.iterator.js\";\r\nimport \"core-js/modules/es.string.iterator.js\";\r\nimport \"core-js/modules/web.dom-collections.iterator.js\";\r\nimport isPlainObject from 'lodash/isPlainObject';\r\nimport isFunction from 'lodash/isFunction';\r\nimport isString from 'lodash/isString'; // @ts-ignore\r\n\r\nimport reactElementToJSXString from 'react-element-to-jsx-string';\r\nimport { createSummaryValue, isTooLongForDefaultValueSummary } from '@storybook/docs-tools';\r\nimport { inspectValue } from '../inspection';\r\nimport { generateObject } from './generateObject';\r\nimport { generateArray } from './generateArray';\r\nimport { getPrettyElementIdentifier, getPrettyFuncIdentifier } from './prettyIdentifier';\r\nimport { OBJECT_CAPTION, FUNCTION_CAPTION, ELEMENT_CAPTION } from '../captions';\r\nimport { isHtmlTag } from '../isHtmlTag';\r\n\r\nfunction isReactElement(element) {\r\n  return element.$$typeof != null;\r\n}\r\n\r\nexport function extractFunctionName(func, propName) {\r\n  var name = func.name; // Comparison with the prop name is to discard inferred function names.\r\n\r\n  if (name !== '' && name !== 'anonymous' && name !== propName) {\r\n    return name;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nvar stringResolver = function stringResolver(rawDefaultProp) {\r\n  return createSummaryValue(JSON.stringify(rawDefaultProp));\r\n};\r\n\r\nfunction generateReactObject(rawDefaultProp) {\r\n  var type = rawDefaultProp.type;\r\n  var displayName = type.displayName;\r\n  var jsx = reactElementToJSXString(rawDefaultProp, {});\r\n\r\n  if (displayName != null) {\r\n    var prettyIdentifier = getPrettyElementIdentifier(displayName);\r\n    return createSummaryValue(prettyIdentifier, jsx);\r\n  }\r\n\r\n  if (isString(type)) {\r\n    // This is an HTML element.\r\n    if (isHtmlTag(type)) {\r\n      var jsxCompact = reactElementToJSXString(rawDefaultProp, {\r\n        tabStop: 0\r\n      });\r\n      var jsxSummary = jsxCompact.replace(/\\r?\\n|\\r/g, '');\r\n\r\n      if (!isTooLongForDefaultValueSummary(jsxSummary)) {\r\n        return createSummaryValue(jsxSummary);\r\n      }\r\n    }\r\n  }\r\n\r\n  return createSummaryValue(ELEMENT_CAPTION, jsx);\r\n}\r\n\r\nvar objectResolver = function objectResolver(rawDefaultProp) {\r\n  if (isReactElement(rawDefaultProp) && rawDefaultProp.type != null) {\r\n    return generateReactObject(rawDefaultProp);\r\n  }\r\n\r\n  if (isPlainObject(rawDefaultProp)) {\r\n    var inspectionResult = inspectValue(JSON.stringify(rawDefaultProp));\r\n    return generateObject(inspectionResult);\r\n  }\r\n\r\n  if (Array.isArray(rawDefaultProp)) {\r\n    var _inspectionResult = inspectValue(JSON.stringify(rawDefaultProp));\r\n\r\n    return generateArray(_inspectionResult);\r\n  }\r\n\r\n  return createSummaryValue(OBJECT_CAPTION);\r\n};\r\n\r\nvar functionResolver = function functionResolver(rawDefaultProp, propDef) {\r\n  var isElement = false;\r\n  var inspectionResult; // Try to display the name of the component. The body of the component is omitted since the code has been transpiled.\r\n\r\n  if (isFunction(rawDefaultProp.render)) {\r\n    isElement = true;\r\n  } else if (rawDefaultProp.prototype != null && isFunction(rawDefaultProp.prototype.render)) {\r\n    isElement = true;\r\n  } else {\r\n    var innerElement;\r\n\r\n    try {\r\n      inspectionResult = inspectValue(rawDefaultProp.toString());\r\n      var _ref = inspectionResult.inferredType,\r\n          hasParams = _ref.hasParams,\r\n          params = _ref.params;\r\n\r\n      if (hasParams) {\r\n        // It might be a functional component accepting props.\r\n        if (params.length === 1 && params[0].type === 'ObjectPattern') {\r\n          innerElement = rawDefaultProp({});\r\n        }\r\n      } else {\r\n        innerElement = rawDefaultProp();\r\n      }\r\n\r\n      if (innerElement != null) {\r\n        if (isReactElement(innerElement)) {\r\n          isElement = true;\r\n        }\r\n      }\r\n    } catch (e) {// do nothing.\r\n    }\r\n  }\r\n\r\n  var funcName = extractFunctionName(rawDefaultProp, propDef.name);\r\n\r\n  if (funcName != null) {\r\n    if (isElement) {\r\n      return createSummaryValue(getPrettyElementIdentifier(funcName));\r\n    }\r\n\r\n    if (inspectionResult != null) {\r\n      inspectionResult = inspectValue(rawDefaultProp.toString());\r\n    }\r\n\r\n    var _ref2 = inspectionResult.inferredType,\r\n        _hasParams = _ref2.hasParams;\r\n    return createSummaryValue(getPrettyFuncIdentifier(funcName, _hasParams));\r\n  }\r\n\r\n  return createSummaryValue(isElement ? ELEMENT_CAPTION : FUNCTION_CAPTION);\r\n};\r\n\r\nvar defaultResolver = function defaultResolver(rawDefaultProp) {\r\n  return createSummaryValue(rawDefaultProp.toString());\r\n};\r\n\r\nvar DEFAULT_TYPE_RESOLVERS = {\r\n  string: stringResolver,\r\n  object: objectResolver,\r\n  function: functionResolver,\r\n  default: defaultResolver\r\n};\r\nexport function createTypeResolvers() {\r\n  var customResolvers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n  return Object.assign({}, DEFAULT_TYPE_RESOLVERS, customResolvers);\r\n} // When react-docgen cannot provide a defaultValue we take it from the raw defaultProp.\r\n// It works fine for types that are not transpiled. For the types that are transpiled, we can only provide partial support.\r\n// This means that:\r\n//   - The detail might not be available.\r\n//   - Identifiers might not be \"prettified\" for all the types.\r\n\r\nexport function createDefaultValueFromRawDefaultProp(rawDefaultProp, propDef) {\r\n  var typeResolvers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_TYPE_RESOLVERS;\r\n\r\n  try {\r\n    // Keep the extra () otherwise it will fail for functions.\r\n    switch (_typeof(rawDefaultProp)) {\r\n      case 'string':\r\n        return typeResolvers.string(rawDefaultProp, propDef);\r\n\r\n      case 'object':\r\n        return typeResolvers.object(rawDefaultProp, propDef);\r\n\r\n      case 'function':\r\n        {\r\n          return typeResolvers.function(rawDefaultProp, propDef);\r\n        }\r\n\r\n      default:\r\n        return typeResolvers.default(rawDefaultProp, propDef);\r\n    }\r\n  } catch (e) {\r\n    // eslint-disable-next-line no-console\r\n    console.error(e);\r\n  }\r\n\r\n  return null;\r\n}", "/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObject(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (ctor === undefined) return true;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\n\nexport { isPlainObject };\n", "/* @flow */\n\nexport default (times: number, tabStop: number): string => {\n  if (times === 0) {\n    return '';\n  }\n\n  return new Array(times * tabStop).fill(' ').join('');\n};\n", "/* @flow */\nimport * as React from 'react';\n\nfunction safeSortObject(value: any, seen: WeakSet<any>): any {\n  // return non-object value as is\n  if (value === null || typeof value !== 'object') {\n    return value;\n  }\n\n  // return date, regexp and react element values as is\n  if (\n    value instanceof Date ||\n    value instanceof RegExp ||\n    React.isValidElement(value)\n  ) {\n    return value;\n  }\n\n  seen.add(value);\n\n  // make a copy of array with each item passed through the sorting algorithm\n  if (Array.isArray(value)) {\n    return value.map(v => safeSortObject(v, seen));\n  }\n\n  // make a copy of object with key sorted\n  return Object.keys(value)\n    .sort()\n    .reduce((result, key) => {\n      if (key === '_owner') {\n        return result;\n      }\n      if (key === 'current' || seen.has(value[key])) {\n        // eslint-disable-next-line no-param-reassign\n        result[key] = '[Circular]';\n      } else {\n        // eslint-disable-next-line no-param-reassign\n        result[key] = safeSortObject(value[key], seen);\n      }\n      return result;\n    }, {});\n}\n\nexport default function sortObject(value: any): any {\n  return safeSortObject(value, new WeakSet());\n}\n", "/* @flow */\n/* eslint-disable no-use-before-define */\n\nimport type { Key } from 'react';\n\ntype PropsType = { [key: string]: any };\ntype DefaultPropsType = { [key: string]: any };\n\nexport type StringTreeNode = {|\n  type: 'string',\n  value: string,\n|};\n\nexport type NumberTreeNode = {|\n  type: 'number',\n  value: number,\n|};\n\nexport type ReactElementTreeNode = {|\n  type: 'ReactElement',\n  displayName: string,\n  props: PropsType,\n  defaultProps: DefaultPropsType,\n  childrens: TreeNode[],\n|};\n\nexport type ReactFragmentTreeNode = {|\n  type: 'ReactFragment',\n  key: ?Key,\n  childrens: TreeNode[],\n|};\n\nexport type TreeNode =\n  | StringTreeNode\n  | NumberTreeNode\n  | ReactElementTreeNode\n  | ReactFragmentTreeNode;\n\nexport const createStringTreeNode = (value: string): StringTreeNode => ({\n  type: 'string',\n  value,\n});\n\nexport const createNumberTreeNode = (value: number): NumberTreeNode => ({\n  type: 'number',\n  value,\n});\n\nexport const createReactElementTreeNode = (\n  displayName: string,\n  props: PropsType,\n  defaultProps: DefaultPropsType,\n  childrens: TreeNode[]\n): ReactElementTreeNode => ({\n  type: 'ReactElement',\n  displayName,\n  props,\n  defaultProps,\n  childrens,\n});\n\nexport const createReactFragmentTreeNode = (\n  key: ?Key,\n  childrens: TreeNode[]\n): ReactFragmentTreeNode => ({\n  type: 'ReactFragment',\n  key,\n  childrens,\n});\n", "/* @flow */\n\nimport React, { type Element as ReactElement, Fragment } from 'react';\nimport {\n  ForwardRef,\n  isContextConsumer,\n  isContextProvider,\n  isForwardRef,\n  isLazy,\n  isMemo,\n  isProfiler,\n  isStrictMode,\n  isSuspense,\n  Memo,\n} from 'react-is';\nimport type { Options } from './../options';\nimport {\n  createStringTreeNode,\n  createNumberTreeNode,\n  createReactElementTreeNode,\n  createReactFragmentTreeNode,\n} from './../tree';\nimport type { TreeNode } from './../tree';\n\nconst supportFragment = Boolean(Fragment);\n\nconst getFunctionTypeName = (functionType): string => {\n  if (!functionType.name || functionType.name === '_default') {\n    return 'No Display Name';\n  }\n  return functionType.name;\n};\n\nconst getWrappedComponentDisplayName = (Component: *): string => {\n  switch (true) {\n    case Boolean(Component.displayName):\n      return Component.displayName;\n    case Component.$$typeof === Memo:\n      return getWrappedComponentDisplayName(Component.type);\n    case Component.$$typeof === ForwardRef:\n      return getWrappedComponentDisplayName(Component.render);\n    default:\n      return getFunctionTypeName(Component);\n  }\n};\n\n// heavily inspired by:\n// https://github.com/facebook/react/blob/3746eaf985dd92f8aa5f5658941d07b6b855e9d9/packages/react-devtools-shared/src/backend/renderer.js#L399-L496\nconst getReactElementDisplayName = (element: ReactElement<*>): string => {\n  switch (true) {\n    case typeof element.type === 'string':\n      return element.type;\n    case typeof element.type === 'function':\n      if (element.type.displayName) {\n        return element.type.displayName;\n      }\n      return getFunctionTypeName(element.type);\n    case isForwardRef(element):\n    case isMemo(element):\n      return getWrappedComponentDisplayName(element.type);\n    case isContextConsumer(element):\n      return `${element.type._context.displayName || 'Context'}.Consumer`;\n    case isContextProvider(element):\n      return `${element.type._context.displayName || 'Context'}.Provider`;\n    case isLazy(element):\n      return 'Lazy';\n    case isProfiler(element):\n      return 'Profiler';\n    case isStrictMode(element):\n      return 'StrictMode';\n    case isSuspense(element):\n      return 'Suspense';\n    default:\n      return 'UnknownElementType';\n  }\n};\n\nconst noChildren = (propsValue, propName) => propName !== 'children';\n\nconst onlyMeaningfulChildren = (children): boolean =>\n  children !== true &&\n  children !== false &&\n  children !== null &&\n  children !== '';\n\nconst filterProps = (originalProps: {}, cb: (any, string) => boolean) => {\n  const filteredProps = {};\n\n  Object.keys(originalProps)\n    .filter(key => cb(originalProps[key], key))\n    .forEach(key => (filteredProps[key] = originalProps[key]));\n\n  return filteredProps;\n};\n\nconst parseReactElement = (\n  element: ReactElement<*> | string | number,\n  options: Options\n): TreeNode => {\n  const { displayName: displayNameFn = getReactElementDisplayName } = options;\n\n  if (typeof element === 'string') {\n    return createStringTreeNode(element);\n  } else if (typeof element === 'number') {\n    return createNumberTreeNode(element);\n  } else if (!React.isValidElement(element)) {\n    throw new Error(\n      `react-element-to-jsx-string: Expected a React.Element, got \\`${typeof element}\\``\n    );\n  }\n\n  const displayName = displayNameFn(element);\n\n  const props = filterProps(element.props, noChildren);\n  if (element.ref !== null) {\n    props.ref = element.ref;\n  }\n\n  const key = element.key;\n  if (typeof key === 'string' && key.search(/^\\./)) {\n    // React automatically add key=\".X\" when there are some children\n    props.key = key;\n  }\n\n  const defaultProps = filterProps(element.type.defaultProps || {}, noChildren);\n  const childrens = React.Children.toArray(element.props.children)\n    .filter(onlyMeaningfulChildren)\n    .map(child => parseReactElement(child, options));\n\n  if (supportFragment && element.type === Fragment) {\n    return createReactFragmentTreeNode(key, childrens);\n  }\n\n  return createReactElementTreeNode(\n    displayName,\n    props,\n    defaultProps,\n    childrens\n  );\n};\n\nexport default parseReactElement;\n", "import type { Options } from './../options';\n\nfunction noRefCheck() {}\n\nexport const inlineFunction = (fn: any): string =>\n  fn\n    .toString()\n    .split('\\n')\n    .map(line => line.trim())\n    .join('');\n\nexport const preserveFunctionLineBreak = (fn: any): string => fn.toString();\n\nconst defaultFunctionValue = inlineFunction;\n\nexport default (fn: Function, options: Options): string => {\n  const { functionValue = defaultFunctionValue, showFunctions } = options;\n  if (!showFunctions && functionValue === defaultFunctionValue) {\n    return functionValue(noRefCheck);\n  }\n\n  return functionValue(fn);\n};\n", "/* @flow */\n\nimport { isValidElement } from 'react';\nimport { prettyPrint } from '@base2/pretty-print-object';\nimport sortObject from './sortObject';\nimport parseReactElement from './../parser/parseReactElement';\nimport formatTreeNode from './formatTreeNode';\nimport formatFunction from './formatFunction';\nimport spacer from './spacer';\nimport type { Options } from './../options';\n\nexport default (\n  value: Object | Array<any>,\n  inline: boolean,\n  lvl: number,\n  options: Options\n): string => {\n  const normalizedValue = sortObject(value);\n\n  const stringifiedValue = prettyPrint(normalizedValue, {\n    transform: (currentObj, prop, originalResult) => {\n      const currentValue = currentObj[prop];\n\n      if (currentValue && isValidElement(currentValue)) {\n        return formatTreeNode(\n          parseReactElement(currentValue, options),\n          true,\n          lvl,\n          options\n        );\n      }\n\n      if (typeof currentValue === 'function') {\n        return formatFunction(currentValue, options);\n      }\n\n      return originalResult;\n    },\n  });\n\n  if (inline) {\n    return stringifiedValue\n      .replace(/\\s+/g, ' ')\n      .replace(/{ /g, '{')\n      .replace(/ }/g, '}')\n      .replace(/\\[ /g, '[')\n      .replace(/ ]/g, ']');\n  }\n\n  // Replace tabs with spaces, and add necessary indentation in front of each new line\n  return stringifiedValue\n    .replace(/\\t/g, spacer(1, options.tabStop))\n    .replace(/\\n([^$])/g, `\\n${spacer(lvl + 1, options.tabStop)}$1`);\n};\n", "/* @flow */\n\nimport { isPlainObject } from 'is-plain-object';\nimport { isValidElement } from 'react';\nimport formatComplexDataStructure from './formatComplexDataStructure';\nimport formatFunction from './formatFunction';\nimport formatTreeNode from './formatTreeNode';\nimport type { Options } from './../options';\nimport parseReactElement from './../parser/parseReactElement';\n\nconst escape = (s: string): string => s.replace(/\"/g, '&quot;');\n\nconst formatPropValue = (\n  propValue: any,\n  inline: boolean,\n  lvl: number,\n  options: Options\n): string => {\n  if (typeof propValue === 'number') {\n    return `{${String(propValue)}}`;\n  }\n\n  if (typeof propValue === 'string') {\n    return `\"${escape(propValue)}\"`;\n  }\n\n  // > \"Symbols (new in ECMAScript 2015, not yet supported in Flow)\"\n  // @see: https://flow.org/en/docs/types/primitives/\n  // $FlowFixMe: Flow does not support Symbol\n  if (typeof propValue === 'symbol') {\n    const symbolDescription = propValue\n      .valueOf()\n      .toString()\n      .replace(/Symbol\\((.*)\\)/, '$1');\n\n    if (!symbolDescription) {\n      return `{Symbol()}`;\n    }\n\n    return `{Symbol('${symbolDescription}')}`;\n  }\n\n  if (typeof propValue === 'function') {\n    return `{${formatFunction(propValue, options)}}`;\n  }\n\n  if (isValidElement(propValue)) {\n    return `{${formatTreeNode(\n      parseReactElement(propValue, options),\n      true,\n      lvl,\n      options\n    )}}`;\n  }\n\n  if (propValue instanceof Date) {\n    if (isNaN(propValue.valueOf())) {\n      return `{new Date(NaN)}`;\n    }\n    return `{new Date(\"${propValue.toISOString()}\")}`;\n  }\n\n  if (isPlainObject(propValue) || Array.isArray(propValue)) {\n    return `{${formatComplexDataStructure(propValue, inline, lvl, options)}}`;\n  }\n\n  return `{${String(propValue)}}`;\n};\n\nexport default formatPropValue;\n", "/* @flow */\n\nimport spacer from './spacer';\nimport formatPropValue from './formatPropValue';\nimport type { Options } from './../options';\n\nexport default (\n  name: string,\n  hasValue: boolean,\n  value: any,\n  hasDefaultValue: boolean,\n  defaultValue: any,\n  inline: boolean,\n  lvl: number,\n  options: Options\n): {\n  attributeFormattedInline: string,\n  attributeFormattedMultiline: string,\n  isMultilineAttribute: boolean,\n} => {\n  if (!hasValue && !hasDefaultValue) {\n    throw new Error(\n      `The prop \"${name}\" has no value and no default: could not be formatted`\n    );\n  }\n\n  const usedValue = hasValue ? value : defaultValue;\n\n  const { useBooleanShorthandSyntax, tabStop } = options;\n\n  const formattedPropValue = formatPropValue(usedValue, inline, lvl, options);\n\n  let attributeFormattedInline = ' ';\n  let attributeFormattedMultiline = `\\n${spacer(lvl + 1, tabStop)}`;\n  const isMultilineAttribute = formattedPropValue.includes('\\n');\n\n  if (\n    useBooleanShorthandSyntax &&\n    formattedPropValue === '{false}' &&\n    !hasDefaultValue\n  ) {\n    // If a boolean is false and not different from it's default, we do not render the attribute\n    attributeFormattedInline = '';\n    attributeFormattedMultiline = '';\n  } else if (useBooleanShorthandSyntax && formattedPropValue === '{true}') {\n    attributeFormattedInline += `${name}`;\n    attributeFormattedMultiline += `${name}`;\n  } else {\n    attributeFormattedInline += `${name}=${formattedPropValue}`;\n    attributeFormattedMultiline += `${name}=${formattedPropValue}`;\n  }\n\n  return {\n    attributeFormattedInline,\n    attributeFormattedMultiline,\n    isMultilineAttribute,\n  };\n};\n", "/* @flow */\n\nimport { createStringTreeNode } from './../tree';\nimport type { TreeNode } from './../tree';\n\nexport default (\n  previousNodes: TreeNode[],\n  currentNode: TreeNode\n): TreeNode[] => {\n  const nodes = previousNodes.slice(\n    0,\n    previousNodes.length > 0 ? previousNodes.length - 1 : 0\n  );\n  const previousNode = previousNodes[previousNodes.length - 1];\n\n  if (\n    previousNode &&\n    (currentNode.type === 'string' || currentNode.type === 'number') &&\n    (previousNode.type === 'string' || previousNode.type === 'number')\n  ) {\n    nodes.push(\n      createStringTreeNode(\n        String(previousNode.value) + String(currentNode.value)\n      )\n    );\n  } else {\n    if (previousNode) {\n      nodes.push(previousNode);\n    }\n\n    nodes.push(currentNode);\n  }\n\n  return nodes;\n};\n", "/* @flow */\n\nconst isKeyOrRefProps = (propName: string) => ['key', 'ref'].includes(propName);\n\nexport default (shouldSortUserProps: boolean) => (\n  props: string[]\n): string[] => {\n  const haveKeyProp = props.includes('key');\n  const haveRefProp = props.includes('ref');\n\n  const userPropsOnly = props.filter(oneProp => !isKeyOrRefProps(oneProp));\n\n  const sortedProps = shouldSortUserProps\n    ? [...userPropsOnly.sort()] // We use basic lexical order\n    : [...userPropsOnly];\n\n  if (haveRefProp) {\n    sortedProps.unshift('ref');\n  }\n\n  if (haveKeyProp) {\n    sortedProps.unshift('key');\n  }\n\n  return sortedProps;\n};\n", "/* @flow */\n\nexport default function createPropFilter(\n  props: {},\n  filter: string[] | ((any, string) => boolean)\n) {\n  if (Array.isArray(filter)) {\n    return (key: string) => filter.indexOf(key) === -1;\n  } else {\n    return (key: string) => filter(props[key], key);\n  }\n}\n", "/* @flow */\n\nimport spacer from './spacer';\nimport formatTreeNode from './formatTreeNode';\nimport formatProp from './formatProp';\nimport mergeSiblingPlainStringChildrenReducer from './mergeSiblingPlainStringChildrenReducer';\nimport sortPropsByNames from './sortPropsByNames';\nimport createPropFilter from './createPropFilter';\nimport type { Options } from './../options';\nimport type { ReactElementTreeNode } from './../tree';\n\nconst compensateMultilineStringElementIndentation = (\n  element,\n  formattedElement: string,\n  inline: boolean,\n  lvl: number,\n  options: Options\n) => {\n  const { tabStop } = options;\n\n  if (element.type === 'string') {\n    return formattedElement\n      .split('\\n')\n      .map((line, offset) => {\n        if (offset === 0) {\n          return line;\n        }\n\n        return `${spacer(lvl, tabStop)}${line}`;\n      })\n      .join('\\n');\n  }\n\n  return formattedElement;\n};\n\nconst formatOneChildren = (\n  inline: boolean,\n  lvl: number,\n  options: Options\n) => element =>\n  compensateMultilineStringElementIndentation(\n    element,\n    formatTreeNode(element, inline, lvl, options),\n    inline,\n    lvl,\n    options\n  );\n\nconst onlyPropsWithOriginalValue = (defaultProps, props) => propName => {\n  const haveDefaultValue = Object.keys(defaultProps).includes(propName);\n  return (\n    !haveDefaultValue ||\n    (haveDefaultValue && defaultProps[propName] !== props[propName])\n  );\n};\n\nconst isInlineAttributeTooLong = (\n  attributes: string[],\n  inlineAttributeString: string,\n  lvl: number,\n  tabStop: number,\n  maxInlineAttributesLineLength: ?number\n): boolean => {\n  if (!maxInlineAttributesLineLength) {\n    return attributes.length > 1;\n  }\n\n  return (\n    spacer(lvl, tabStop).length + inlineAttributeString.length >\n    maxInlineAttributesLineLength\n  );\n};\n\nconst shouldRenderMultilineAttr = (\n  attributes: string[],\n  inlineAttributeString: string,\n  containsMultilineAttr: boolean,\n  inline: boolean,\n  lvl: number,\n  tabStop: number,\n  maxInlineAttributesLineLength: ?number\n): boolean =>\n  (isInlineAttributeTooLong(\n    attributes,\n    inlineAttributeString,\n    lvl,\n    tabStop,\n    maxInlineAttributesLineLength\n  ) ||\n    containsMultilineAttr) &&\n  !inline;\n\nexport default (\n  node: ReactElementTreeNode,\n  inline: boolean,\n  lvl: number,\n  options: Options\n): string => {\n  const {\n    type,\n    displayName = '',\n    childrens,\n    props = {},\n    defaultProps = {},\n  } = node;\n\n  if (type !== 'ReactElement') {\n    throw new Error(\n      `The \"formatReactElementNode\" function could only format node of type \"ReactElement\". Given:  ${type}`\n    );\n  }\n\n  const {\n    filterProps,\n    maxInlineAttributesLineLength,\n    showDefaultProps,\n    sortProps,\n    tabStop,\n  } = options;\n\n  let out = `<${displayName}`;\n\n  let outInlineAttr = out;\n  let outMultilineAttr = out;\n  let containsMultilineAttr = false;\n\n  const visibleAttributeNames = [];\n\n  const propFilter = createPropFilter(props, filterProps);\n\n  Object.keys(props)\n    .filter(propFilter)\n    .filter(onlyPropsWithOriginalValue(defaultProps, props))\n    .forEach(propName => visibleAttributeNames.push(propName));\n\n  Object.keys(defaultProps)\n    .filter(propFilter)\n    .filter(() => showDefaultProps)\n    .filter(defaultPropName => !visibleAttributeNames.includes(defaultPropName))\n    .forEach(defaultPropName => visibleAttributeNames.push(defaultPropName));\n\n  const attributes = sortPropsByNames(sortProps)(visibleAttributeNames);\n\n  attributes.forEach(attributeName => {\n    const {\n      attributeFormattedInline,\n      attributeFormattedMultiline,\n      isMultilineAttribute,\n    } = formatProp(\n      attributeName,\n      Object.keys(props).includes(attributeName),\n      props[attributeName],\n      Object.keys(defaultProps).includes(attributeName),\n      defaultProps[attributeName],\n      inline,\n      lvl,\n      options\n    );\n\n    if (isMultilineAttribute) {\n      containsMultilineAttr = true;\n    }\n\n    outInlineAttr += attributeFormattedInline;\n    outMultilineAttr += attributeFormattedMultiline;\n  });\n\n  outMultilineAttr += `\\n${spacer(lvl, tabStop)}`;\n\n  if (\n    shouldRenderMultilineAttr(\n      attributes,\n      outInlineAttr,\n      containsMultilineAttr,\n      inline,\n      lvl,\n      tabStop,\n      maxInlineAttributesLineLength\n    )\n  ) {\n    out = outMultilineAttr;\n  } else {\n    out = outInlineAttr;\n  }\n\n  if (childrens && childrens.length > 0) {\n    const newLvl = lvl + 1;\n\n    out += '>';\n\n    if (!inline) {\n      out += '\\n';\n      out += spacer(newLvl, tabStop);\n    }\n\n    out += childrens\n      .reduce(mergeSiblingPlainStringChildrenReducer, [])\n      .map(formatOneChildren(inline, newLvl, options))\n      .join(!inline ? `\\n${spacer(newLvl, tabStop)}` : '');\n\n    if (!inline) {\n      out += '\\n';\n      out += spacer(newLvl - 1, tabStop);\n    }\n    out += `</${displayName}>`;\n  } else {\n    if (\n      !isInlineAttributeTooLong(\n        attributes,\n        outInlineAttr,\n        lvl,\n        tabStop,\n        maxInlineAttributesLineLength\n      )\n    ) {\n      out += ' ';\n    }\n\n    out += '/>';\n  }\n\n  return out;\n};\n", "/* @flow */\n\nimport type { Key } from 'react';\nimport formatReactElementNode from './formatReactElementNode';\nimport type { Options } from './../options';\nimport type {\n  ReactElementTreeNode,\n  ReactFragmentTreeNode,\n  TreeNode,\n} from './../tree';\n\nconst REACT_FRAGMENT_TAG_NAME_SHORT_SYNTAX = '';\nconst REACT_FRAGMENT_TAG_NAME_EXPLICIT_SYNTAX = 'React.Fragment';\n\nconst toReactElementTreeNode = (\n  displayName: string,\n  key: ?Key,\n  childrens: TreeNode[]\n): ReactElementTreeNode => {\n  let props = {};\n  if (key) {\n    props = { key };\n  }\n\n  return {\n    type: 'ReactElement',\n    displayName,\n    props,\n    defaultProps: {},\n    childrens,\n  };\n};\n\nconst isKeyedFragment = ({ key }: ReactFragmentTreeNode) => Boolean(key);\nconst hasNoChildren = ({ childrens }: ReactFragmentTreeNode) =>\n  childrens.length === 0;\n\nexport default (\n  node: ReactFragmentTreeNode,\n  inline: boolean,\n  lvl: number,\n  options: Options\n): string => {\n  const { type, key, childrens } = node;\n\n  if (type !== 'ReactFragment') {\n    throw new Error(\n      `The \"formatReactFragmentNode\" function could only format node of type \"ReactFragment\". Given: ${type}`\n    );\n  }\n\n  const { useFragmentShortSyntax } = options;\n\n  let displayName;\n  if (useFragmentShortSyntax) {\n    if (hasNoChildren(node) || isKeyedFragment(node)) {\n      displayName = REACT_FRAGMENT_TAG_NAME_EXPLICIT_SYNTAX;\n    } else {\n      displayName = REACT_FRAGMENT_TAG_NAME_SHORT_SYNTAX;\n    }\n  } else {\n    displayName = REACT_FRAGMENT_TAG_NAME_EXPLICIT_SYNTAX;\n  }\n\n  return formatReactElementNode(\n    toReactElementTreeNode(displayName, key, childrens),\n    inline,\n    lvl,\n    options\n  );\n};\n", "/* @flow */\n\nimport formatReactElementNode from './formatReactElementNode';\nimport formatReactFragmentNode from './formatReactFragmentNode';\nimport type { Options } from './../options';\nimport type { TreeNode } from './../tree';\n\nconst jsxStopChars = ['<', '>', '{', '}'];\nconst shouldBeEscaped = (s: string) =>\n  jsxStopChars.some(jsxStopChar => s.includes(jsxStopChar));\n\nconst escape = (s: string) => {\n  if (!shouldBeEscaped(s)) {\n    return s;\n  }\n\n  return `{\\`${s}\\`}`;\n};\n\nconst preserveTrailingSpace = (s: string) => {\n  let result = s;\n  if (result.endsWith(' ')) {\n    result = result.replace(/^(.*?)(\\s+)$/, \"$1{'$2'}\");\n  }\n\n  if (result.startsWith(' ')) {\n    result = result.replace(/^(\\s+)(.*)$/, \"{'$1'}$2\");\n  }\n\n  return result;\n};\n\nexport default (\n  node: TreeNode,\n  inline: boolean,\n  lvl: number,\n  options: Options\n): string => {\n  if (node.type === 'number') {\n    return String(node.value);\n  }\n\n  if (node.type === 'string') {\n    return node.value\n      ? `${preserveTrailingSpace(escape(String(node.value)))}`\n      : '';\n  }\n\n  if (node.type === 'ReactElement') {\n    return formatReactElementNode(node, inline, lvl, options);\n  }\n\n  if (node.type === 'ReactFragment') {\n    return formatReactFragmentNode(node, inline, lvl, options);\n  }\n\n  throw new TypeError(`Unknow format type \"${node.type}\"`);\n};\n", "/* @flow */\n\nimport formatTreeNode from './formatTreeNode';\nimport type { Options } from './../options';\nimport type { TreeNode } from './../tree';\n\nexport default (node: TreeNode, options: Options): string =>\n  formatTreeNode(node, false, 0, options);\n", "/* @flow */\n\nimport formatTree from './formatter/formatTree';\nimport parseReactElement from './parser/parseReactElement';\nimport type { Element as ReactElement } from 'react';\nimport type { Options } from './options';\n\nconst reactElementToJsxString = (\n  element: ReactElement<any>,\n  {\n    filterProps = [],\n    showDefaultProps = true,\n    showFunctions = false,\n    functionValue,\n    tabStop = 2,\n    useBooleanShorthandSyntax = true,\n    useFragmentShortSyntax = true,\n    sortProps = true,\n    maxInlineAttributesLineLength,\n    displayName,\n  }: Options = {}\n) => {\n  if (!element) {\n    throw new Error('react-element-to-jsx-string: Expected a ReactElement');\n  }\n\n  const options = {\n    filterProps,\n    showDefaultProps,\n    showFunctions,\n    functionValue,\n    tabStop,\n    useBooleanShorthandSyntax,\n    useFragmentShortSyntax,\n    sortProps,\n    maxInlineAttributesLineLength,\n    displayName,\n  };\n\n  return formatTree(parseReactElement(element, options), options);\n};\n\nexport default reactElementToJsxString;\n\nexport {\n  inlineFunction,\n  preserveFunctionLineBreak,\n} from './formatter/formatFunction';\n", "import \"core-js/modules/es.array.filter.js\";\r\nimport \"core-js/modules/es.object.to-string.js\";\r\nimport \"core-js/modules/es.array.map.js\";\r\nimport \"core-js/modules/es.object.keys.js\";\r\nimport \"core-js/modules/es.array.find.js\";\r\nimport \"core-js/modules/es.function.name.js\";\r\n// react-docgen doesn't returned the props in the order they were defined in the \"propTypes\" object of the component.\r\n// This function re-order them by their original definition order.\r\nexport function keepOriginalDefinitionOrder(extractedProps, component) {\r\n  // eslint-disable-next-line react/forbid-foreign-prop-types\r\n  var propTypes = component.propTypes;\r\n\r\n  if (propTypes != null) {\r\n    return Object.keys(propTypes).map(function (x) {\r\n      return extractedProps.find(function (y) {\r\n        return y.name === x;\r\n      });\r\n    }).filter(function (x) {\r\n      return x;\r\n    });\r\n  }\r\n\r\n  return extractedProps;\r\n}", "import \"core-js/modules/es.function.name.js\";\r\nimport \"core-js/modules/es.object.to-string.js\";\r\nimport \"core-js/modules/es.regexp.to-string.js\";\r\nimport { createSummaryValue } from '@storybook/docs-tools';\r\nimport { extractFunctionName, createTypeResolvers } from '../lib/defaultValues';\r\nimport { FUNCTION_CAPTION, ELEMENT_CAPTION } from '../lib';\r\nimport { getPrettyElementIdentifier, getPrettyFuncIdentifier } from '../lib/defaultValues/prettyIdentifier';\r\nimport { inspectValue } from '../lib/inspection';\r\n\r\nvar funcResolver = function funcResolver(rawDefaultProp, _ref) {\r\n  var name = _ref.name,\r\n      type = _ref.type;\r\n  var isElement = type.summary === 'element' || type.summary === 'elementType';\r\n  var funcName = extractFunctionName(rawDefaultProp, name);\r\n\r\n  if (funcName != null) {\r\n    // Try to display the name of the component. The body of the component is omitted since the code has been transpiled.\r\n    if (isElement) {\r\n      return createSummaryValue(getPrettyElementIdentifier(funcName));\r\n    }\r\n\r\n    var _ref2 = inspectValue(rawDefaultProp.toString()).inferredType,\r\n        hasParams = _ref2.hasParams;\r\n    return createSummaryValue(getPrettyFuncIdentifier(funcName, hasParams));\r\n  }\r\n\r\n  return createSummaryValue(isElement ? ELEMENT_CAPTION : FUNCTION_CAPTION);\r\n};\r\n\r\nexport var rawDefaultPropTypeResolvers = createTypeResolvers({\r\n  function: funcResolver\r\n});", "import \"core-js/modules/es.array.map.js\";\r\nimport \"core-js/modules/es.function.name.js\";\r\nimport { createType } from './createType';\r\nimport { createDefaultValue, createDefaultValueFromRawDefaultProp } from '../lib/defaultValues';\r\nimport { keepOriginalDefinitionOrder } from './sortProps';\r\nimport { rawDefaultPropTypeResolvers } from './rawDefaultPropResolvers';\r\nexport function enhancePropTypesProp(extractedProp, rawDefaultProp) {\r\n  var propDef = extractedProp.propDef;\r\n  var newtype = createType(extractedProp);\r\n\r\n  if (newtype != null) {\r\n    propDef.type = newtype;\r\n  }\r\n\r\n  var defaultValue = extractedProp.docgenInfo.defaultValue;\r\n\r\n  if (defaultValue != null && defaultValue.value != null) {\r\n    var newDefaultValue = createDefaultValue(defaultValue.value);\r\n\r\n    if (newDefaultValue != null) {\r\n      propDef.defaultValue = newDefaultValue;\r\n    }\r\n  } else if (rawDefaultProp != null) {\r\n    var _newDefaultValue = createDefaultValueFromRawDefaultProp(rawDefaultProp, propDef, rawDefaultPropTypeResolvers);\r\n\r\n    if (_newDefaultValue != null) {\r\n      propDef.defaultValue = _newDefaultValue;\r\n    }\r\n  }\r\n\r\n  return propDef;\r\n}\r\nexport function enhancePropTypesProps(extractedProps, component) {\r\n  var rawDefaultProps = component.defaultProps != null ? component.defaultProps : {};\r\n  var enhancedProps = extractedProps.map(function (x) {\r\n    return enhancePropTypesProp(x, rawDefaultProps[x.propDef.name]);\r\n  });\r\n  return keepOriginalDefinitionOrder(enhancedProps, component);\r\n}", "import \"core-js/modules/es.array.map.js\";\r\nimport { createDefaultValue, createDefaultValueFromRawDefaultProp } from '../lib/defaultValues';\r\nexport function enhanceTypeScriptProp(extractedProp, rawDefaultProp) {\r\n  var propDef = extractedProp.propDef;\r\n  var defaultValue = extractedProp.docgenInfo.defaultValue;\r\n\r\n  if (defaultValue != null && defaultValue.value != null) {\r\n    var newDefaultValue = createDefaultValue(defaultValue.value);\r\n\r\n    if (newDefaultValue != null) {\r\n      propDef.defaultValue = newDefaultValue;\r\n    }\r\n  } else if (rawDefaultProp != null) {\r\n    var _newDefaultValue = createDefaultValueFromRawDefaultProp(rawDefaultProp, propDef);\r\n\r\n    if (_newDefaultValue != null) {\r\n      propDef.defaultValue = _newDefaultValue;\r\n    }\r\n  }\r\n\r\n  return propDef;\r\n}\r\nexport function enhanceTypeScriptProps(extractedProps) {\r\n  return extractedProps.map(function (prop) {\r\n    return enhanceTypeScriptProp(prop);\r\n  });\r\n}", "import \"core-js/modules/es.object.to-string.js\";\r\nimport \"core-js/modules/es.function.name.js\";\r\nimport \"core-js/modules/es.symbol.js\";\r\nimport \"core-js/modules/es.symbol.description.js\";\r\nimport \"core-js/modules/es.object.assign.js\";\r\nimport { extractProps } from './extractProps';\r\nexport var extractArgTypes = function extractArgTypes(component) {\r\n  if (component) {\r\n    var _extractProps = extractProps(component),\r\n        rows = _extractProps.rows;\r\n\r\n    if (rows) {\r\n      return rows.reduce(function (acc, row) {\r\n        var name = row.name,\r\n            description = row.description,\r\n            type = row.type,\r\n            sbType = row.sbType,\r\n            defaultSummary = row.defaultValue,\r\n            jsDocTags = row.jsDocTags,\r\n            required = row.required;\r\n        acc[name] = {\r\n          name: name,\r\n          description: description,\r\n          type: Object.assign({\r\n            required: required\r\n          }, sbType),\r\n          table: {\r\n            type: type,\r\n            jsDocTags: jsDocTags,\r\n            defaultValue: defaultSummary\r\n          }\r\n        };\r\n        return acc;\r\n      }, {});\r\n    }\r\n  }\r\n\r\n  return null;\r\n};", "import \"core-js/modules/es.array.slice.js\";\r\nimport \"core-js/modules/es.object.freeze.js\";\r\nimport \"core-js/modules/es.object.keys.js\";\r\nimport \"core-js/modules/es.symbol.js\";\r\nimport \"core-js/modules/es.symbol.description.js\";\r\nimport \"core-js/modules/es.symbol.iterator.js\";\r\nimport \"core-js/modules/es.array.iterator.js\";\r\nimport \"core-js/modules/es.string.iterator.js\";\r\nimport \"core-js/modules/web.dom-collections.iterator.js\";\r\nimport \"core-js/modules/es.array.from.js\";\r\nvar _excluded = [\"mdxType\", \"originalType\", \"children\"];\r\n\r\nvar _templateObject;\r\n\r\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\r\n\r\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\r\n\r\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\r\n\r\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\r\n\r\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\r\n\r\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\r\n\r\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\r\n\r\nimport \"core-js/modules/es.function.name.js\";\r\nimport \"core-js/modules/es.object.assign.js\";\r\nimport \"core-js/modules/es.array.join.js\";\r\nimport \"core-js/modules/es.array.map.js\";\r\nimport \"core-js/modules/es.object.to-string.js\";\r\nimport \"core-js/modules/es.regexp.to-string.js\";\r\nimport \"core-js/modules/es.regexp.exec.js\";\r\nimport \"core-js/modules/es.string.match.js\";\r\nimport \"core-js/modules/web.dom-collections.for-each.js\";\r\nimport \"core-js/modules/es.string.replace.js\";\r\nimport \"core-js/modules/es.array.concat.js\";\r\n\r\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\r\n\r\nimport React, { createElement } from 'react';\r\nimport reactElementToJSXString from 'react-element-to-jsx-string';\r\nimport dedent from 'ts-dedent';\r\nimport deprecate from 'util-deprecate';\r\nimport { addons, useEffect } from '@storybook/addons';\r\nimport { SourceType, SNIPPET_RENDERED, getDocgenSection } from '@storybook/docs-tools';\r\nimport { logger } from '@storybook/client-logger';\r\nimport { isMemo, isForwardRef } from './lib';\r\n\r\n/** Run the user supplied onBeforeRender function if it exists */\r\nvar applyBeforeRender = function applyBeforeRender(domString, options) {\r\n  if (typeof options.onBeforeRender !== 'function') {\r\n    return domString;\r\n  }\r\n\r\n  var deprecatedOnBeforeRender = deprecate(options.onBeforeRender, dedent(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      StoryFn.parameters.jsx.onBeforeRender was deprecated.\\n      Prefer StoryFn.parameters.jsx.transformSource instead.\\n      See https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#deprecated-onbeforerender for details.\\n    \"]))));\r\n  return deprecatedOnBeforeRender(domString);\r\n};\r\n/** Run the user supplied transformSource function if it exists */\r\n\r\n\r\nvar applyTransformSource = function applyTransformSource(domString, options, context) {\r\n  if (typeof options.transformSource !== 'function') {\r\n    return domString;\r\n  }\r\n\r\n  return options.transformSource(domString, context);\r\n};\r\n/** Apply the users parameters and render the jsx for a story */\r\n\r\n\r\nexport var renderJsx = function renderJsx(code, options) {\r\n  if (typeof code === 'undefined') {\r\n    logger.warn('Too many skip or undefined component');\r\n    return null;\r\n  }\r\n\r\n  var renderedJSX = code;\r\n  var Type = renderedJSX.type;\r\n\r\n  for (var i = 0; i < options.skip; i += 1) {\r\n    if (typeof renderedJSX === 'undefined') {\r\n      logger.warn('Cannot skip undefined element');\r\n      return null;\r\n    }\r\n\r\n    if (React.Children.count(renderedJSX) > 1) {\r\n      logger.warn('Trying to skip an array of elements');\r\n      return null;\r\n    }\r\n\r\n    if (typeof renderedJSX.props.children === 'undefined') {\r\n      logger.warn('Not enough children to skip elements.');\r\n\r\n      if (typeof renderedJSX.type === 'function' && renderedJSX.type.name === '') {\r\n        renderedJSX = /*#__PURE__*/React.createElement(Type, renderedJSX.props);\r\n      }\r\n    } else if (typeof renderedJSX.props.children === 'function') {\r\n      renderedJSX = renderedJSX.props.children();\r\n    } else {\r\n      renderedJSX = renderedJSX.props.children;\r\n    }\r\n  }\r\n\r\n  var displayNameDefaults = typeof options.displayName === 'string' ? {\r\n    showFunctions: true,\r\n    displayName: function displayName() {\r\n      return options.displayName;\r\n    }\r\n  } : {\r\n    // To get exotic component names resolving properly\r\n    displayName: function displayName(el) {\r\n      return el.type.displayName || getDocgenSection(el.type, 'displayName') || (el.type.name !== '_default' ? el.type.name : null) || (typeof el.type === 'function' ? 'No Display Name' : null) || (isForwardRef(el.type) ? el.type.render.name : null) || (isMemo(el.type) ? el.type.type.name : null) || el.type;\r\n    }\r\n  };\r\n  var filterDefaults = {\r\n    filterProps: function filterProps(value, key) {\r\n      return value !== undefined;\r\n    }\r\n  };\r\n  var opts = Object.assign({}, displayNameDefaults, filterDefaults, options);\r\n  var result = React.Children.map(code, function (c) {\r\n    // @ts-ignore FIXME: workaround react-element-to-jsx-string\r\n    var child = typeof c === 'number' ? c.toString() : c;\r\n    var string = applyBeforeRender(reactElementToJSXString(child, opts), options);\r\n\r\n    if (string.indexOf('&quot;') > -1) {\r\n      var matches = string.match(/\\S+=\\\\\"([^\"]*)\\\\\"/g);\r\n\r\n      if (matches) {\r\n        matches.forEach(function (match) {\r\n          string = string.replace(match, match.replace(/&quot;/g, \"'\"));\r\n        });\r\n      }\r\n    }\r\n\r\n    return string;\r\n  }).join('\\n');\r\n  return result.replace(/function\\s+noRefCheck\\(\\)\\s+\\{\\}/, '() => {}');\r\n};\r\nvar defaultOpts = {\r\n  skip: 0,\r\n  showFunctions: false,\r\n  enableBeautify: true,\r\n  showDefaultProps: false\r\n};\r\nexport var skipJsxRender = function skipJsxRender(context) {\r\n  var _context$parameters$d;\r\n\r\n  var sourceParams = context === null || context === void 0 ? void 0 : (_context$parameters$d = context.parameters.docs) === null || _context$parameters$d === void 0 ? void 0 : _context$parameters$d.source;\r\n  var isArgsStory = context === null || context === void 0 ? void 0 : context.parameters.__isArgsStory; // always render if the user forces it\r\n\r\n  if ((sourceParams === null || sourceParams === void 0 ? void 0 : sourceParams.type) === SourceType.DYNAMIC) {\r\n    return false;\r\n  } // never render if the user is forcing the block to render code, or\r\n  // if the user provides code, or if it's not an args story.\r\n\r\n\r\n  return !isArgsStory || (sourceParams === null || sourceParams === void 0 ? void 0 : sourceParams.code) || (sourceParams === null || sourceParams === void 0 ? void 0 : sourceParams.type) === SourceType.CODE;\r\n};\r\n\r\nvar isMdx = function isMdx(node) {\r\n  var _node$type, _node$props;\r\n\r\n  return ((_node$type = node.type) === null || _node$type === void 0 ? void 0 : _node$type.displayName) === 'MDXCreateElement' && !!((_node$props = node.props) !== null && _node$props !== void 0 && _node$props.mdxType);\r\n};\r\n\r\nvar mdxToJsx = function mdxToJsx(node) {\r\n  if (!isMdx(node)) return node;\r\n\r\n  var _node$props2 = node.props,\r\n      mdxType = _node$props2.mdxType,\r\n      originalType = _node$props2.originalType,\r\n      children = _node$props2.children,\r\n      rest = _objectWithoutProperties(_node$props2, _excluded);\r\n\r\n  var jsxChildren = [];\r\n\r\n  if (children) {\r\n    var array = Array.isArray(children) ? children : [children];\r\n    jsxChildren = array.map(mdxToJsx);\r\n  }\r\n\r\n  return /*#__PURE__*/createElement.apply(void 0, [originalType, rest].concat(_toConsumableArray(jsxChildren)));\r\n};\r\n\r\nexport var jsxDecorator = function jsxDecorator(storyFn, context) {\r\n  var _context$parameters$d2, _context$parameters$d3;\r\n\r\n  var channel = addons.getChannel();\r\n  var skip = skipJsxRender(context);\r\n  var story = storyFn();\r\n  var jsx = '';\r\n  useEffect(function () {\r\n    if (!skip) channel.emit(SNIPPET_RENDERED, (context || {}).id, jsx);\r\n  }); // We only need to render JSX if the source block is actually going to\r\n  // consume it. Otherwise it's just slowing us down.\r\n\r\n  if (skip) {\r\n    return story;\r\n  }\r\n\r\n  var options = Object.assign({}, defaultOpts, (context === null || context === void 0 ? void 0 : context.parameters.jsx) || {}); // Exclude decorators from source code snippet by default\r\n\r\n  var storyJsx = context !== null && context !== void 0 && (_context$parameters$d2 = context.parameters.docs) !== null && _context$parameters$d2 !== void 0 && (_context$parameters$d3 = _context$parameters$d2.source) !== null && _context$parameters$d3 !== void 0 && _context$parameters$d3.excludeDecorators ? context.originalStoryFn(context.args, context) : story;\r\n  var sourceJsx = mdxToJsx(storyJsx);\r\n  var rendered = renderJsx(sourceJsx, options);\r\n\r\n  if (rendered) {\r\n    jsx = applyTransformSource(rendered, options, context);\r\n  }\r\n\r\n  return story;\r\n};", "import { extractComponentDescription, enhanceArgTypes } from '@storybook/docs-tools';\r\nimport { extractArgTypes } from './extractArgTypes';\r\nimport { jsxDecorator } from './jsxDecorator';\r\nexport var parameters = {\r\n  docs: {\r\n    inlineStories: true,\r\n    // NOTE: that the result is a react element. Hooks support is provided by the outer code.\r\n    prepareForInline: function prepareForInline(storyFn) {\r\n      return storyFn();\r\n    },\r\n    extractArgTypes: extractArgTypes,\r\n    extractComponentDescription: extractComponentDescription\r\n  }\r\n};\r\nexport var decorators = [jsxDecorator];\r\nexport var argTypesEnhancers = [enhanceArgTypes];"],
  "mappings": "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",
  "names": ["import_es_array_iterator", "import_es_string_iterator", "import_es_regexp_exec", "htmlTags", "import_es_regexp_exec", "isMemo", "isForwardRef", "InspectionType", "jsx", "JSXElement", "PropTypesType", "generateArray", "generateFunc", "generateArray", "import_es_regexp_exec", "times", "tabStop", "Array", "fill", "join", "safeSortObject", "value", "seen", "Date", "RegExp", "isValidElement", "add", "isArray", "map", "v", "Object", "keys", "sort", "reduce", "result", "key", "has", "sortObject", "WeakSet", "createStringTreeNode", "type", "createNumberTreeNode", "createReactElementTreeNode", "displayName", "props", "defaultProps", "childrens", "createReactFragmentTreeNode", "supportFragment", "Boolean", "Fragment", "getFunctionTypeName", "functionType", "name", "getWrappedComponentDisplayName", "Component", "$$typeof", "Memo", "ForwardRef", "render", "getReactElementDisplayName", "element", "isForwardRef", "isMemo", "isContextConsumer", "_context", "isContextProvider", "isLazy", "isProfiler", "isStrictMode", "isSuspense", "noChildren", "propsValue", "propName", "onlyMeaningfulChildren", "children", "filterProps", "originalProps", "cb", "filteredProps", "filter", "forEach", "parseReactElement", "options", "displayNameFn", "React", "Error", "ref", "search", "Children", "toArray", "child", "noRefCheck", "inlineFunction", "fn", "toString", "split", "line", "trim", "defaultFunctionValue", "inlineFunction", "fn", "options", "functionValue", "showFunctions", "noRefCheck", "value", "inline", "lvl", "normalizedValue", "sortObject", "stringifiedValue", "prettyPrint", "transform", "currentObj", "prop", "originalResult", "currentValue", "isValidElement", "formatTreeNode", "parseReactElement", "formatFunction", "replace", "spacer", "tabStop", "escape", "s", "formatPropValue", "propValue", "String", "symbolDescription", "valueOf", "toString", "Date", "isNaN", "toISOString", "isPlainObject", "Array", "isArray", "formatComplexDataStructure", "name", "hasValue", "hasDefaultValue", "defaultValue", "Error", "usedValue", "useBooleanShorthandSyntax", "formattedPropValue", "attributeFormattedInline", "attributeFormattedMultiline", "isMultilineAttribute", "includes", "previousNodes", "currentNode", "nodes", "slice", "length", "previousNode", "type", "push", "createStringTreeNode", "isKeyOrRefProps", "propName", "shouldSortUserProps", "props", "haveKeyProp", "haveRefProp", "userPropsOnly", "filter", "oneProp", "sortedProps", "sort", "unshift", "createPropFilter", "key", "indexOf", "compensateMultilineStringElementIndentation", "element", "formattedElement", "split", "map", "line", "offset", "join", "formatOneChildren", "onlyPropsWithOriginalValue", "defaultProps", "haveDefaultValue", "Object", "keys", "isInlineAttributeTooLong", "attributes", "inlineAttributeString", "maxInlineAttributesLineLength", "shouldRenderMultilineAttr", "containsMultilineAttr", "node", "displayName", "childrens", "filterProps", "showDefaultProps", "sortProps", "out", "outInlineAttr", "outMultilineAttr", "visibleAttributeNames", "propFilter", "forEach", "defaultPropName", "sortPropsByNames", "attributeName", "formatProp", "newLvl", "reduce", "mergeSiblingPlainStringChildrenReducer", "REACT_FRAGMENT_TAG_NAME_SHORT_SYNTAX", "REACT_FRAGMENT_TAG_NAME_EXPLICIT_SYNTAX", "toReactElementTreeNode", "isKeyedFragment", "Boolean", "hasNoChildren", "useFragmentShortSyntax", "formatReactElementNode", "jsxStopChars", "shouldBeEscaped", "some", "jsxStopChar", "preserveTrailingSpace", "result", "endsWith", "startsWith", "formatReactFragmentNode", "TypeError", "reactElementToJsxString", "formatTree", "_typeof", "obj", "stringResolver", "jsx", "isString", "objectResolver", "isPlainObject", "generateArray", "functionResolver", "isFunction", "defaultResolver", "funcResolver", "PropTypes", "extractProps", "extractArgTypes", "import_es_array_iterator", "import_es_string_iterator", "import_es_regexp_exec", "import_react", "_toConsumableArray", "_arrayWithoutHoles", "_iterableToArray", "_unsupportedIterableToArray", "_nonIterableSpread", "_arrayLikeToArray", "applyBeforeRender", "deprecate", "applyTransformSource", "renderJsx", "React", "filterProps", "skipJsxRender", "isMdx", "mdxToJsx", "jsxDecorator", "jsx"]
}
