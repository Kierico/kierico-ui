{
  "version": 3,
  "sources": ["../../../../../node_modules/@storybook/components/dist/esm/OverlayScrollbars-1355f44c.js"],
  "sourcesContent": ["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\r\n\r\nimport \"core-js/modules/es.array.slice.js\";\r\nimport \"core-js/modules/es.regexp.exec.js\";\r\nimport \"core-js/modules/es.string.replace.js\";\r\nimport \"core-js/modules/es.string.split.js\";\r\nimport \"core-js/modules/es.array.concat.js\";\r\nimport \"core-js/modules/es.object.to-string.js\";\r\nimport \"core-js/modules/es.regexp.to-string.js\";\r\nimport \"core-js/modules/es.string.match.js\";\r\nimport \"core-js/modules/es.array.join.js\";\r\nimport \"core-js/modules/es.array.splice.js\";\r\nimport \"core-js/modules/es.array.filter.js\";\r\nimport \"core-js/modules/es.array.find.js\";\r\nimport \"core-js/modules/es.regexp.constructor.js\";\r\nimport \"core-js/modules/es.number.to-fixed.js\";\r\nimport \"core-js/modules/es.function.name.js\";\r\nimport \"core-js/modules/es.object.assign.js\";\r\nimport \"core-js/modules/es.symbol.js\";\r\nimport \"core-js/modules/es.symbol.description.js\";\r\nimport \"core-js/modules/es.symbol.iterator.js\";\r\nimport \"core-js/modules/es.array.iterator.js\";\r\nimport \"core-js/modules/es.string.iterator.js\";\r\nimport \"core-js/modules/web.dom-collections.iterator.js\";\r\nimport { c as commonjsGlobal, d as __rest } from './index-681e4b07.js';\r\nimport React__default, { useRef, useEffect } from 'react';\r\nimport '@storybook/theming';\r\nimport 'memoizerific';\r\nimport '@storybook/csf';\r\nimport 'qs';\r\nimport '@storybook/client-logger';\r\nvar OverlayScrollbars$1 = {\r\n  exports: {}\r\n};\r\n/*!\r\n * OverlayScrollbars\r\n * https://github.com/KingSora/OverlayScrollbars\r\n *\r\n * Version: 1.13.0\r\n *\r\n * Copyright KingSora | Rene Haas.\r\n * https://github.com/KingSora\r\n *\r\n * Released under the MIT license.\r\n * Date: 02.08.2020\r\n */\r\n\r\n(function (module) {\r\n  (function (global, factory) {\r\n    module.exports = factory(global, global.document, undefined);\r\n  })(typeof window !== 'undefined' ? window : commonjsGlobal, function (window, document, undefined$1) {\r\n    var PLUGINNAME = 'OverlayScrollbars';\r\n    var TYPES = {\r\n      o: 'object',\r\n      f: 'function',\r\n      a: 'array',\r\n      s: 'string',\r\n      b: 'boolean',\r\n      n: 'number',\r\n      u: 'undefined',\r\n      z: 'null' //d : 'date',\r\n      //e : 'error',\r\n      //r : 'regexp',\r\n      //y : 'symbol'\r\n\r\n    };\r\n    var LEXICON = {\r\n      c: 'class',\r\n      s: 'style',\r\n      i: 'id',\r\n      l: 'length',\r\n      p: 'prototype',\r\n      ti: 'tabindex',\r\n      oH: 'offsetHeight',\r\n      cH: 'clientHeight',\r\n      sH: 'scrollHeight',\r\n      oW: 'offsetWidth',\r\n      cW: 'clientWidth',\r\n      sW: 'scrollWidth',\r\n      hOP: 'hasOwnProperty',\r\n      bCR: 'getBoundingClientRect'\r\n    };\r\n\r\n    var VENDORS = function () {\r\n      //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\r\n      var jsCache = {};\r\n      var cssCache = {};\r\n      var cssPrefixes = ['-webkit-', '-moz-', '-o-', '-ms-'];\r\n      var jsPrefixes = ['WebKit', 'Moz', 'O', 'MS'];\r\n\r\n      function firstLetterToUpper(str) {\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n      }\r\n\r\n      return {\r\n        _cssPrefixes: cssPrefixes,\r\n        _jsPrefixes: jsPrefixes,\r\n        _cssProperty: function _cssProperty(name) {\r\n          var result = cssCache[name];\r\n          if (cssCache[LEXICON.hOP](name)) return result;\r\n          var uppercasedName = firstLetterToUpper(name);\r\n          var elmStyle = document.createElement('div')[LEXICON.s];\r\n          var resultPossibilities;\r\n          var i = 0;\r\n          var v;\r\n          var currVendorWithoutDashes;\r\n\r\n          for (; i < cssPrefixes.length; i++) {\r\n            currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, '');\r\n            resultPossibilities = [name, //transition\r\n            cssPrefixes[i] + name, //-webkit-transition\r\n            currVendorWithoutDashes + uppercasedName, //webkitTransition\r\n            firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\r\n            ];\r\n\r\n            for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {\r\n              if (elmStyle[resultPossibilities[v]] !== undefined$1) {\r\n                result = resultPossibilities[v];\r\n                break;\r\n              }\r\n            }\r\n          }\r\n\r\n          cssCache[name] = result;\r\n          return result;\r\n        },\r\n        _cssPropertyValue: function _cssPropertyValue(property, values, suffix) {\r\n          var name = property + ' ' + values;\r\n          var result = cssCache[name];\r\n          if (cssCache[LEXICON.hOP](name)) return result;\r\n          var dummyStyle = document.createElement('div')[LEXICON.s];\r\n          var possbleValues = values.split(' ');\r\n          var preparedSuffix = suffix || '';\r\n          var i = 0;\r\n          var v = -1;\r\n          var prop;\r\n\r\n          for (; i < possbleValues[LEXICON.l]; i++) {\r\n            for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {\r\n              prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];\r\n              dummyStyle.cssText = property + ':' + prop + preparedSuffix;\r\n\r\n              if (dummyStyle[LEXICON.l]) {\r\n                result = prop;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n\r\n          cssCache[name] = result;\r\n          return result;\r\n        },\r\n        _jsAPI: function _jsAPI(name, isInterface, fallback) {\r\n          var i = 0;\r\n          var result = jsCache[name];\r\n\r\n          if (!jsCache[LEXICON.hOP](name)) {\r\n            result = window[name];\r\n\r\n            for (; i < jsPrefixes[LEXICON.l]; i++) {\r\n              result = result || window[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];\r\n            }\r\n\r\n            jsCache[name] = result;\r\n          }\r\n\r\n          return result || fallback;\r\n        }\r\n      };\r\n    }();\r\n\r\n    var COMPATIBILITY = function () {\r\n      function windowSize(x) {\r\n        return x ? window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW] : window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\r\n      }\r\n\r\n      function bind(func, thisObj) {\r\n        if (_typeof(func) != TYPES.f) {\r\n          throw \"Can't bind function!\"; // closest thing possible to the ECMAScript 5\r\n          // internal IsCallable function\r\n          //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\r\n        }\r\n\r\n        var proto = LEXICON.p;\r\n        var aArgs = Array[proto].slice.call(arguments, 2);\r\n\r\n        var fNOP = function fNOP() {};\r\n\r\n        var fBound = function fBound() {\r\n          return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments)));\r\n        };\r\n\r\n        if (func[proto]) fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\r\n\r\n        fBound[proto] = new fNOP();\r\n        return fBound;\r\n      }\r\n\r\n      return {\r\n        /**\r\n         * Gets the current window width.\r\n         * @returns {Number|number} The current window width in pixel.\r\n         */\r\n        wW: bind(windowSize, 0, true),\r\n\r\n        /**\r\n         * Gets the current window height.\r\n         * @returns {Number|number} The current window height in pixel.\r\n         */\r\n        wH: bind(windowSize, 0),\r\n\r\n        /**\r\n         * Gets the MutationObserver Object or undefined if not supported.\r\n         * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\r\n         */\r\n        mO: bind(VENDORS._jsAPI, 0, 'MutationObserver', true),\r\n\r\n        /**\r\n         * Gets the ResizeObserver Object or undefined if not supported.\r\n         * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\r\n         */\r\n        rO: bind(VENDORS._jsAPI, 0, 'ResizeObserver', true),\r\n\r\n        /**\r\n         * Gets the RequestAnimationFrame method or it's corresponding polyfill.\r\n         * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\r\n         */\r\n        rAF: bind(VENDORS._jsAPI, 0, 'requestAnimationFrame', false, function (func) {\r\n          return window.setTimeout(func, 1000 / 60);\r\n        }),\r\n\r\n        /**\r\n         * Gets the CancelAnimationFrame method or it's corresponding polyfill.\r\n         * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\r\n         */\r\n        cAF: bind(VENDORS._jsAPI, 0, 'cancelAnimationFrame', false, function (id) {\r\n          return window.clearTimeout(id);\r\n        }),\r\n\r\n        /**\r\n         * Gets the current time.\r\n         * @returns {number} The current time.\r\n         */\r\n        now: function now() {\r\n          return Date.now && Date.now() || new Date().getTime();\r\n        },\r\n\r\n        /**\r\n         * Stops the propagation of the given event.\r\n         * @param event The event of which the propagation shall be stoped.\r\n         */\r\n        stpP: function stpP(event) {\r\n          if (event.stopPropagation) event.stopPropagation();else event.cancelBubble = true;\r\n        },\r\n\r\n        /**\r\n         * Prevents the default action of the given event.\r\n         * @param event The event of which the default action shall be prevented.\r\n         */\r\n        prvD: function prvD(event) {\r\n          if (event.preventDefault && event.cancelable) event.preventDefault();else event.returnValue = false;\r\n        },\r\n\r\n        /**\r\n         * Gets the pageX and pageY values of the given mouse event.\r\n         * @param event The mouse event of which the pageX and pageX shall be got.\r\n         * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\r\n         */\r\n        page: function page(event) {\r\n          event = event.originalEvent || event;\r\n          var strPage = 'page';\r\n          var strClient = 'client';\r\n          var strX = 'X';\r\n          var strY = 'Y';\r\n          var target = event.target || event.srcElement || document;\r\n          var eventDoc = target.ownerDocument || document;\r\n          var doc = eventDoc.documentElement;\r\n          var body = eventDoc.body; //if touch event return return pageX/Y of it\r\n\r\n          if (event.touches !== undefined$1) {\r\n            var touch = event.touches[0];\r\n            return {\r\n              x: touch[strPage + strX],\r\n              y: touch[strPage + strY]\r\n            };\r\n          } // Calculate pageX/Y if not native supported\r\n\r\n\r\n          if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\r\n            return {\r\n              x: event[strClient + strX] + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0),\r\n              y: event[strClient + strY] + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0)\r\n            };\r\n          }\r\n\r\n          return {\r\n            x: event[strPage + strX],\r\n            y: event[strPage + strY]\r\n          };\r\n        },\r\n\r\n        /**\r\n         * Gets the clicked mouse button of the given mouse event.\r\n         * @param event The mouse event of which the clicked button shal be got.\r\n         * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\r\n         */\r\n        mBtn: function mBtn(event) {\r\n          var button = event.button;\r\n          if (!event.which && button !== undefined$1) return button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;else return event.which;\r\n        },\r\n\r\n        /**\r\n         * Checks whether a item is in the given array and returns its index.\r\n         * @param item The item of which the position in the array shall be determined.\r\n         * @param arr The array.\r\n         * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\r\n         */\r\n        inA: function inA(item, arr) {\r\n          for (var i = 0; i < arr[LEXICON.l]; i++) {\r\n            //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\r\n            try {\r\n              if (arr[i] === item) return i;\r\n            } catch (e) {}\r\n          }\r\n\r\n          return -1;\r\n        },\r\n\r\n        /**\r\n         * Returns true if the given value is a array.\r\n         * @param arr The potential array.\r\n         * @returns {boolean} True if the given value is a array, false otherwise.\r\n         */\r\n        isA: function isA(arr) {\r\n          var def = Array.isArray;\r\n          return def ? def(arr) : this.type(arr) == TYPES.a;\r\n        },\r\n\r\n        /**\r\n         * Determine the internal JavaScript [[Class]] of the given object.\r\n         * @param obj The object of which the type shall be determined.\r\n         * @returns {string} The type of the given object.\r\n         */\r\n        type: function type(obj) {\r\n          if (obj === undefined$1) return obj + '';\r\n          if (obj === null) return obj + '';\r\n          return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\r\n        },\r\n        bind: bind\r\n        /**\r\n         * Gets the vendor-prefixed CSS property by the given name.\r\n         * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\r\n         * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\r\n         * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\r\n         * @param propName The unprefixed CSS property name.\r\n         * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\r\n          cssProp: function(propName) {\r\n            return VENDORS._cssProperty(propName);\r\n        }\r\n        */\r\n\r\n      };\r\n    }();\r\n\r\n    var MATH = Math;\r\n    var JQUERY = window.jQuery;\r\n\r\n    var EASING = function () {\r\n      var _easingsMath = {\r\n        p: MATH.PI,\r\n        c: MATH.cos,\r\n        s: MATH.sin,\r\n        w: MATH.pow,\r\n        t: MATH.sqrt,\r\n        n: MATH.asin,\r\n        a: MATH.abs,\r\n        o: 1.70158\r\n      };\r\n      /*\r\n       x : current percent (0 - 1),\r\n       t : current time (duration * percent),\r\n       b : start value (from),\r\n       c : end value (to),\r\n       d : duration\r\n         easingName : function(x, t, b, c, d) { return easedValue; }\r\n       */\r\n\r\n      return {\r\n        swing: function swing(x, t, b, c, d) {\r\n          return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\r\n        },\r\n        linear: function linear(x, t, b, c, d) {\r\n          return x;\r\n        },\r\n        easeInQuad: function easeInQuad(x, t, b, c, d) {\r\n          return c * (t /= d) * t + b;\r\n        },\r\n        easeOutQuad: function easeOutQuad(x, t, b, c, d) {\r\n          return -c * (t /= d) * (t - 2) + b;\r\n        },\r\n        easeInOutQuad: function easeInOutQuad(x, t, b, c, d) {\r\n          return (t /= d / 2) < 1 ? c / 2 * t * t + b : -c / 2 * (--t * (t - 2) - 1) + b;\r\n        },\r\n        easeInCubic: function easeInCubic(x, t, b, c, d) {\r\n          return c * (t /= d) * t * t + b;\r\n        },\r\n        easeOutCubic: function easeOutCubic(x, t, b, c, d) {\r\n          return c * ((t = t / d - 1) * t * t + 1) + b;\r\n        },\r\n        easeInOutCubic: function easeInOutCubic(x, t, b, c, d) {\r\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\r\n        },\r\n        easeInQuart: function easeInQuart(x, t, b, c, d) {\r\n          return c * (t /= d) * t * t * t + b;\r\n        },\r\n        easeOutQuart: function easeOutQuart(x, t, b, c, d) {\r\n          return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n        },\r\n        easeInOutQuart: function easeInOutQuart(x, t, b, c, d) {\r\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;\r\n        },\r\n        easeInQuint: function easeInQuint(x, t, b, c, d) {\r\n          return c * (t /= d) * t * t * t * t + b;\r\n        },\r\n        easeOutQuint: function easeOutQuint(x, t, b, c, d) {\r\n          return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n        },\r\n        easeInOutQuint: function easeInOutQuint(x, t, b, c, d) {\r\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\r\n        },\r\n        easeInSine: function easeInSine(x, t, b, c, d) {\r\n          return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;\r\n        },\r\n        easeOutSine: function easeOutSine(x, t, b, c, d) {\r\n          return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;\r\n        },\r\n        easeInOutSine: function easeInOutSine(x, t, b, c, d) {\r\n          return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;\r\n        },\r\n        easeInExpo: function easeInExpo(x, t, b, c, d) {\r\n          return t == 0 ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;\r\n        },\r\n        easeOutExpo: function easeOutExpo(x, t, b, c, d) {\r\n          return t == d ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;\r\n        },\r\n        easeInOutExpo: function easeInOutExpo(x, t, b, c, d) {\r\n          if (t == 0) return b;\r\n          if (t == d) return b + c;\r\n          if ((t /= d / 2) < 1) return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;\r\n          return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\r\n        },\r\n        easeInCirc: function easeInCirc(x, t, b, c, d) {\r\n          return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;\r\n        },\r\n        easeOutCirc: function easeOutCirc(x, t, b, c, d) {\r\n          return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;\r\n        },\r\n        easeInOutCirc: function easeInOutCirc(x, t, b, c, d) {\r\n          return (t /= d / 2) < 1 ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;\r\n        },\r\n        easeInElastic: function easeInElastic(x, t, b, c, d) {\r\n          var s = _easingsMath.o;\r\n          var p = 0;\r\n          var a = c;\r\n          if (t == 0) return b;\r\n          if ((t /= d) == 1) return b + c;\r\n          if (!p) p = d * .3;\r\n\r\n          if (a < _easingsMath.a(c)) {\r\n            a = c;\r\n            s = p / 4;\r\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n\r\n          return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\r\n        },\r\n        easeOutElastic: function easeOutElastic(x, t, b, c, d) {\r\n          var s = _easingsMath.o;\r\n          var p = 0;\r\n          var a = c;\r\n          if (t == 0) return b;\r\n          if ((t /= d) == 1) return b + c;\r\n          if (!p) p = d * .3;\r\n\r\n          if (a < _easingsMath.a(c)) {\r\n            a = c;\r\n            s = p / 4;\r\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n\r\n          return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;\r\n        },\r\n        easeInOutElastic: function easeInOutElastic(x, t, b, c, d) {\r\n          var s = _easingsMath.o;\r\n          var p = 0;\r\n          var a = c;\r\n          if (t == 0) return b;\r\n          if ((t /= d / 2) == 2) return b + c;\r\n          if (!p) p = d * (.3 * 1.5);\r\n\r\n          if (a < _easingsMath.a(c)) {\r\n            a = c;\r\n            s = p / 4;\r\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n\r\n          if (t < 1) return -.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\r\n          return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * .5 + c + b;\r\n        },\r\n        easeInBack: function easeInBack(x, t, b, c, d, s) {\r\n          s = s || _easingsMath.o;\r\n          return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n        },\r\n        easeOutBack: function easeOutBack(x, t, b, c, d, s) {\r\n          s = s || _easingsMath.o;\r\n          return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n        },\r\n        easeInOutBack: function easeInOutBack(x, t, b, c, d, s) {\r\n          s = s || _easingsMath.o;\r\n          return (t /= d / 2) < 1 ? c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\r\n        },\r\n        easeInBounce: function easeInBounce(x, t, b, c, d) {\r\n          return c - this.easeOutBounce(x, d - t, 0, c, d) + b;\r\n        },\r\n        easeOutBounce: function easeOutBounce(x, t, b, c, d) {\r\n          var o = 7.5625;\r\n\r\n          if ((t /= d) < 1 / 2.75) {\r\n            return c * (o * t * t) + b;\r\n          } else if (t < 2 / 2.75) {\r\n            return c * (o * (t -= 1.5 / 2.75) * t + .75) + b;\r\n          } else if (t < 2.5 / 2.75) {\r\n            return c * (o * (t -= 2.25 / 2.75) * t + .9375) + b;\r\n          } else {\r\n            return c * (o * (t -= 2.625 / 2.75) * t + .984375) + b;\r\n          }\r\n        },\r\n        easeInOutBounce: function easeInOutBounce(x, t, b, c, d) {\r\n          return t < d / 2 ? this.easeInBounce(x, t * 2, 0, c, d) * .5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * .5 + c * .5 + b;\r\n        }\r\n      };\r\n      /*\r\n       *\r\n       * TERMS OF USE - EASING EQUATIONS\r\n       * \r\n       * Open source under the BSD License. \r\n       * \r\n       * Copyright Â© 2001 Robert Penner\r\n       * All rights reserved.\r\n       * \r\n       * Redistribution and use in source and binary forms, with or without modification, \r\n       * are permitted provided that the following conditions are met:\r\n       * \r\n       * Redistributions of source code must retain the above copyright notice, this list of \r\n       * conditions and the following disclaimer.\r\n       * Redistributions in binary form must reproduce the above copyright notice, this list \r\n       * of conditions and the following disclaimer in the documentation and/or other materials \r\n       * provided with the distribution.\r\n       * \r\n       * Neither the name of the author nor the names of contributors may be used to endorse \r\n       * or promote products derived from this software without specific prior written permission.\r\n       * \r\n       * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\n       * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n       * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\n       *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n       *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n       *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \r\n       * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n       *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n       * OF THE POSSIBILITY OF SUCH DAMAGE. \r\n       *\r\n       */\r\n    }();\r\n\r\n    var FRAMEWORK = function () {\r\n      var _rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\r\n      var _strSpace = ' ';\r\n      var _strEmpty = '';\r\n      var _strScrollLeft = 'scrollLeft';\r\n      var _strScrollTop = 'scrollTop';\r\n      var _animations = [];\r\n      var _type = COMPATIBILITY.type;\r\n      var _cssNumber = {\r\n        animationIterationCount: true,\r\n        columnCount: true,\r\n        fillOpacity: true,\r\n        flexGrow: true,\r\n        flexShrink: true,\r\n        fontWeight: true,\r\n        lineHeight: true,\r\n        opacity: true,\r\n        order: true,\r\n        orphans: true,\r\n        widows: true,\r\n        zIndex: true,\r\n        zoom: true\r\n      };\r\n\r\n      function extend() {\r\n        var src,\r\n            copyIsArray,\r\n            copy,\r\n            name,\r\n            options,\r\n            clone,\r\n            target = arguments[0] || {},\r\n            i = 1,\r\n            length = arguments[LEXICON.l],\r\n            deep = false; // Handle a deep copy situation\r\n\r\n        if (_type(target) == TYPES.b) {\r\n          deep = target;\r\n          target = arguments[1] || {}; // skip the boolean and the target\r\n\r\n          i = 2;\r\n        } // Handle case when target is a string or something (possible in deep copy)\r\n\r\n\r\n        if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\r\n          target = {};\r\n        } // extend jQuery itself if only one argument is passed\r\n\r\n\r\n        if (length === i) {\r\n          target = FakejQuery;\r\n          --i;\r\n        }\r\n\r\n        for (; i < length; i++) {\r\n          // Only deal with non-null/undefined values\r\n          if ((options = arguments[i]) != null) {\r\n            // Extend the base object\r\n            for (name in options) {\r\n              src = target[name];\r\n              copy = options[name]; // Prevent never-ending loop\r\n\r\n              if (target === copy) {\r\n                continue;\r\n              } // Recurse if we're merging plain objects or arrays\r\n\r\n\r\n              if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\r\n                if (copyIsArray) {\r\n                  copyIsArray = false;\r\n                  clone = src && COMPATIBILITY.isA(src) ? src : [];\r\n                } else {\r\n                  clone = src && isPlainObject(src) ? src : {};\r\n                } // Never move original objects, clone them\r\n\r\n\r\n                target[name] = extend(deep, clone, copy); // Don't bring in undefined values\r\n              } else if (copy !== undefined$1) {\r\n                target[name] = copy;\r\n              }\r\n            }\r\n          }\r\n        } // Return the modified object\r\n\r\n\r\n        return target;\r\n      }\r\n\r\n      function inArray(item, arr, fromIndex) {\r\n        for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++) {\r\n          if (arr[i] === item) return i;\r\n        }\r\n\r\n        return -1;\r\n      }\r\n\r\n      function isFunction(obj) {\r\n        return _type(obj) == TYPES.f;\r\n      }\r\n\r\n      function isEmptyObject(obj) {\r\n        for (var name in obj) {\r\n          return false;\r\n        }\r\n\r\n        return true;\r\n      }\r\n\r\n      function isPlainObject(obj) {\r\n        if (!obj || _type(obj) != TYPES.o) return false;\r\n        var key;\r\n        var proto = LEXICON.p;\r\n        var hasOwnProperty = Object[proto].hasOwnProperty;\r\n        var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\r\n        var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\r\n\r\n        if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\r\n          return false;\r\n        }\r\n\r\n        for (key in obj) {\r\n          /**/\r\n        }\r\n\r\n        return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\r\n      }\r\n\r\n      function _each(obj, callback) {\r\n        var i = 0;\r\n\r\n        if (isArrayLike(obj)) {\r\n          for (; i < obj[LEXICON.l]; i++) {\r\n            if (callback.call(obj[i], i, obj[i]) === false) break;\r\n          }\r\n        } else {\r\n          for (i in obj) {\r\n            if (callback.call(obj[i], i, obj[i]) === false) break;\r\n          }\r\n        }\r\n\r\n        return obj;\r\n      }\r\n\r\n      function isArrayLike(obj) {\r\n        var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\r\n\r\n        var t = _type(obj);\r\n\r\n        return isFunction(t) ? false : t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && length - 1 in obj;\r\n      }\r\n\r\n      function stripAndCollapse(value) {\r\n        var tokens = value.match(_rnothtmlwhite) || [];\r\n        return tokens.join(_strSpace);\r\n      }\r\n\r\n      function matches(elem, selector) {\r\n        var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\r\n        var i = nodeList[LEXICON.l];\r\n\r\n        while (i--) {\r\n          if (nodeList[i] == elem) return true;\r\n        }\r\n\r\n        return false;\r\n      }\r\n\r\n      function insertAdjacentElement(el, strategy, child) {\r\n        if (COMPATIBILITY.isA(child)) {\r\n          for (var i = 0; i < child[LEXICON.l]; i++) {\r\n            insertAdjacentElement(el, strategy, child[i]);\r\n          }\r\n        } else if (_type(child) == TYPES.s) el.insertAdjacentHTML(strategy, child);else el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\r\n      }\r\n\r\n      function setCSSVal(el, prop, val) {\r\n        try {\r\n          if (el[LEXICON.s][prop] !== undefined$1) el[LEXICON.s][prop] = parseCSSVal(prop, val);\r\n        } catch (e) {}\r\n      }\r\n\r\n      function parseCSSVal(prop, val) {\r\n        if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n) val += 'px';\r\n        return val;\r\n      }\r\n\r\n      function startNextAnimationInQ(animObj, removeFromQ) {\r\n        var index;\r\n        var nextAnim;\r\n        if (removeFromQ !== false) animObj.q.splice(0, 1);\r\n\r\n        if (animObj.q[LEXICON.l] > 0) {\r\n          nextAnim = animObj.q[0];\r\n\r\n          _animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\r\n        } else {\r\n          index = inArray(animObj, _animations);\r\n          if (index > -1) _animations.splice(index, 1);\r\n        }\r\n      }\r\n\r\n      function setAnimationValue(el, prop, value) {\r\n        if (prop === _strScrollLeft || prop === _strScrollTop) el[prop] = value;else setCSSVal(el, prop, value);\r\n      }\r\n\r\n      function _animate(el, props, options, easing, complete, guaranteedNext) {\r\n        var hasOptions = isPlainObject(options);\r\n        var from = {};\r\n        var to = {};\r\n        var i = 0;\r\n        var key;\r\n        var animObj;\r\n        var progress;\r\n        var step;\r\n        var specialEasing;\r\n        var duration;\r\n\r\n        if (hasOptions) {\r\n          easing = options.easing;\r\n          progress = options.progress;\r\n          step = options.step;\r\n          specialEasing = options.specialEasing;\r\n          complete = options.complete;\r\n          duration = options.duration;\r\n        } else duration = options;\r\n\r\n        specialEasing = specialEasing || {};\r\n        duration = duration || 400;\r\n        easing = easing || 'swing';\r\n        guaranteedNext = guaranteedNext || false;\r\n\r\n        for (; i < _animations[LEXICON.l]; i++) {\r\n          if (_animations[i].el === el) {\r\n            animObj = _animations[i];\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (!animObj) {\r\n          animObj = {\r\n            el: el,\r\n            q: []\r\n          };\r\n\r\n          _animations.push(animObj);\r\n        }\r\n\r\n        for (key in props) {\r\n          if (key === _strScrollLeft || key === _strScrollTop) from[key] = el[key];else from[key] = FakejQuery(el).css(key);\r\n        }\r\n\r\n        for (key in from) {\r\n          if (from[key] !== props[key] && props[key] !== undefined$1) to[key] = props[key];\r\n        }\r\n\r\n        if (!isEmptyObject(to)) {\r\n          var timeNow;\r\n          var end;\r\n          var percent;\r\n          var fromVal;\r\n          var toVal;\r\n          var easedVal;\r\n          var timeStart;\r\n\r\n          var _frame;\r\n\r\n          var elapsed;\r\n          var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\r\n          var qObj = {\r\n            props: to,\r\n            duration: hasOptions ? options : duration,\r\n            easing: easing,\r\n            complete: complete\r\n          };\r\n\r\n          if (qPos === -1) {\r\n            qPos = animObj.q[LEXICON.l];\r\n            animObj.q.push(qObj);\r\n          }\r\n\r\n          if (qPos === 0) {\r\n            if (duration > 0) {\r\n              timeStart = COMPATIBILITY.now();\r\n\r\n              _frame = function frame() {\r\n                timeNow = COMPATIBILITY.now();\r\n                elapsed = timeNow - timeStart;\r\n                end = qObj.stop || elapsed >= duration;\r\n                percent = 1 - (MATH.max(0, timeStart + duration - timeNow) / duration || 0);\r\n\r\n                for (key in to) {\r\n                  fromVal = parseFloat(from[key]);\r\n                  toVal = parseFloat(to[key]);\r\n                  easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\r\n                  setAnimationValue(el, key, easedVal);\r\n\r\n                  if (isFunction(step)) {\r\n                    step(easedVal, {\r\n                      elem: el,\r\n                      prop: key,\r\n                      start: fromVal,\r\n                      now: easedVal,\r\n                      end: toVal,\r\n                      pos: percent,\r\n                      options: {\r\n                        easing: easing,\r\n                        speacialEasing: specialEasing,\r\n                        duration: duration,\r\n                        complete: complete,\r\n                        step: step\r\n                      },\r\n                      startTime: timeStart\r\n                    });\r\n                  }\r\n                }\r\n\r\n                if (isFunction(progress)) progress({}, percent, MATH.max(0, duration - elapsed));\r\n\r\n                if (end) {\r\n                  startNextAnimationInQ(animObj);\r\n                  if (isFunction(complete)) complete();\r\n                } else qObj.frame = COMPATIBILITY.rAF()(_frame);\r\n              };\r\n\r\n              qObj.frame = COMPATIBILITY.rAF()(_frame);\r\n            } else {\r\n              for (key in to) {\r\n                setAnimationValue(el, key, to[key]);\r\n              }\r\n\r\n              startNextAnimationInQ(animObj);\r\n            }\r\n          }\r\n        } else if (guaranteedNext) startNextAnimationInQ(animObj);\r\n      }\r\n\r\n      function _stop(el, clearQ, jumpToEnd) {\r\n        var animObj;\r\n        var qObj;\r\n        var key;\r\n        var i = 0;\r\n\r\n        for (; i < _animations[LEXICON.l]; i++) {\r\n          animObj = _animations[i];\r\n\r\n          if (animObj.el === el) {\r\n            if (animObj.q[LEXICON.l] > 0) {\r\n              qObj = animObj.q[0];\r\n              qObj.stop = true;\r\n              COMPATIBILITY.cAF()(qObj.frame);\r\n              animObj.q.splice(0, 1);\r\n              if (jumpToEnd) for (key in qObj.props) {\r\n                setAnimationValue(el, key, qObj.props[key]);\r\n              }\r\n              if (clearQ) animObj.q = [];else startNextAnimationInQ(animObj, false);\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      function elementIsVisible(el) {\r\n        return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\r\n      }\r\n\r\n      function FakejQuery(selector) {\r\n        if (arguments[LEXICON.l] === 0) return this;\r\n        var base = new FakejQuery();\r\n        var elements = selector;\r\n        var i = 0;\r\n        var elms;\r\n        var el;\r\n\r\n        if (_type(selector) == TYPES.s) {\r\n          elements = [];\r\n\r\n          if (selector.charAt(0) === '<') {\r\n            el = document.createElement('div');\r\n            el.innerHTML = selector;\r\n            elms = el.children;\r\n          } else {\r\n            elms = document.querySelectorAll(selector);\r\n          }\r\n\r\n          for (; i < elms[LEXICON.l]; i++) {\r\n            elements.push(elms[i]);\r\n          }\r\n        }\r\n\r\n        if (elements) {\r\n          if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self)) elements = [elements];\r\n\r\n          for (i = 0; i < elements[LEXICON.l]; i++) {\r\n            base[i] = elements[i];\r\n          }\r\n\r\n          base[LEXICON.l] = elements[LEXICON.l];\r\n        }\r\n\r\n        return base;\r\n      }\r\n\r\n      FakejQuery[LEXICON.p] = {\r\n        //EVENTS:\r\n        on: function on(eventName, handler) {\r\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n          var eventNameLength = eventName[LEXICON.l];\r\n          var i = 0;\r\n          var el;\r\n          return this.each(function () {\r\n            el = this;\r\n\r\n            try {\r\n              if (el.addEventListener) {\r\n                for (; i < eventNameLength; i++) {\r\n                  el.addEventListener(eventName[i], handler);\r\n                }\r\n              } else if (el.detachEvent) {\r\n                for (; i < eventNameLength; i++) {\r\n                  el.attachEvent('on' + eventName[i], handler);\r\n                }\r\n              }\r\n            } catch (e) {}\r\n          });\r\n        },\r\n        off: function off(eventName, handler) {\r\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n          var eventNameLength = eventName[LEXICON.l];\r\n          var i = 0;\r\n          var el;\r\n          return this.each(function () {\r\n            el = this;\r\n\r\n            try {\r\n              if (el.removeEventListener) {\r\n                for (; i < eventNameLength; i++) {\r\n                  el.removeEventListener(eventName[i], handler);\r\n                }\r\n              } else if (el.detachEvent) {\r\n                for (; i < eventNameLength; i++) {\r\n                  el.detachEvent('on' + eventName[i], handler);\r\n                }\r\n              }\r\n            } catch (e) {}\r\n          });\r\n        },\r\n        one: function one(eventName, handler) {\r\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n          return this.each(function () {\r\n            var el = FakejQuery(this);\r\n            FakejQuery.each(eventName, function (i, oneEventName) {\r\n              var oneHandler = function oneHandler(e) {\r\n                handler.call(this, e);\r\n                el.off(oneEventName, oneHandler);\r\n              };\r\n\r\n              el.on(oneEventName, oneHandler);\r\n            });\r\n          });\r\n        },\r\n        trigger: function trigger(eventName) {\r\n          var el;\r\n          var event;\r\n          return this.each(function () {\r\n            el = this;\r\n\r\n            if (document.createEvent) {\r\n              event = document.createEvent('HTMLEvents');\r\n              event.initEvent(eventName, true, false);\r\n              el.dispatchEvent(event);\r\n            } else {\r\n              el.fireEvent('on' + eventName);\r\n            }\r\n          });\r\n        },\r\n        //DOM NODE INSERTING / REMOVING:\r\n        append: function append(child) {\r\n          return this.each(function () {\r\n            insertAdjacentElement(this, 'beforeend', child);\r\n          });\r\n        },\r\n        prepend: function prepend(child) {\r\n          return this.each(function () {\r\n            insertAdjacentElement(this, 'afterbegin', child);\r\n          });\r\n        },\r\n        before: function before(child) {\r\n          return this.each(function () {\r\n            insertAdjacentElement(this, 'beforebegin', child);\r\n          });\r\n        },\r\n        after: function after(child) {\r\n          return this.each(function () {\r\n            insertAdjacentElement(this, 'afterend', child);\r\n          });\r\n        },\r\n        remove: function remove() {\r\n          return this.each(function () {\r\n            var el = this;\r\n            var parentNode = el.parentNode;\r\n            if (parentNode != null) parentNode.removeChild(el);\r\n          });\r\n        },\r\n        unwrap: function unwrap() {\r\n          var parents = [];\r\n          var i;\r\n          var el;\r\n          var parent;\r\n          this.each(function () {\r\n            parent = this.parentNode;\r\n            if (inArray(parent, parents) === -1) parents.push(parent);\r\n          });\r\n\r\n          for (i = 0; i < parents[LEXICON.l]; i++) {\r\n            el = parents[i];\r\n            parent = el.parentNode;\r\n\r\n            while (el.firstChild) {\r\n              parent.insertBefore(el.firstChild, el);\r\n            }\r\n\r\n            parent.removeChild(el);\r\n          }\r\n\r\n          return this;\r\n        },\r\n        wrapAll: function wrapAll(wrapperHTML) {\r\n          var i;\r\n          var nodes = this;\r\n          var wrapper = FakejQuery(wrapperHTML)[0];\r\n          var deepest = wrapper;\r\n          var parent = nodes[0].parentNode;\r\n          var previousSibling = nodes[0].previousSibling;\r\n\r\n          while (deepest.childNodes[LEXICON.l] > 0) {\r\n            deepest = deepest.childNodes[0];\r\n          }\r\n\r\n          for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++) {\r\n            deepest.appendChild(nodes[i]);\r\n          }\r\n\r\n          var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\r\n          parent.insertBefore(wrapper, nextSibling);\r\n          return this;\r\n        },\r\n        wrapInner: function wrapInner(wrapperHTML) {\r\n          return this.each(function () {\r\n            var el = FakejQuery(this);\r\n            var contents = el.contents();\r\n            if (contents[LEXICON.l]) contents.wrapAll(wrapperHTML);else el.append(wrapperHTML);\r\n          });\r\n        },\r\n        wrap: function wrap(wrapperHTML) {\r\n          return this.each(function () {\r\n            FakejQuery(this).wrapAll(wrapperHTML);\r\n          });\r\n        },\r\n        //DOM NODE MANIPULATION / INFORMATION:\r\n        css: function css(styles, val) {\r\n          var el;\r\n          var key;\r\n          var cptStyle;\r\n          var getCptStyle = window.getComputedStyle;\r\n\r\n          if (_type(styles) == TYPES.s) {\r\n            if (val === undefined$1) {\r\n              el = this[0];\r\n              cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles]; //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\r\n\r\n              return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\r\n            } else {\r\n              return this.each(function () {\r\n                setCSSVal(this, styles, val);\r\n              });\r\n            }\r\n          } else {\r\n            return this.each(function () {\r\n              for (key in styles) {\r\n                setCSSVal(this, key, styles[key]);\r\n              }\r\n            });\r\n          }\r\n        },\r\n        hasClass: function hasClass(className) {\r\n          var elem,\r\n              i = 0;\r\n          var classNamePrepared = _strSpace + className + _strSpace;\r\n          var classList;\r\n\r\n          while (elem = this[i++]) {\r\n            classList = elem.classList;\r\n            if (classList && classList.contains(className)) return true;else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1) return true;\r\n          }\r\n\r\n          return false;\r\n        },\r\n        addClass: function addClass(className) {\r\n          var classes;\r\n          var elem;\r\n          var cur;\r\n          var curValue;\r\n          var clazz;\r\n          var finalValue;\r\n          var supportClassList;\r\n          var elmClassList;\r\n          var i = 0;\r\n          var v = 0;\r\n\r\n          if (className) {\r\n            classes = className.match(_rnothtmlwhite) || [];\r\n\r\n            while (elem = this[i++]) {\r\n              elmClassList = elem.classList;\r\n              if (supportClassList === undefined$1) supportClassList = elmClassList !== undefined$1;\r\n\r\n              if (supportClassList) {\r\n                while (clazz = classes[v++]) {\r\n                  elmClassList.add(clazz);\r\n                }\r\n              } else {\r\n                curValue = elem.className + _strEmpty;\r\n                cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\r\n\r\n                if (cur) {\r\n                  while (clazz = classes[v++]) {\r\n                    if (cur.indexOf(_strSpace + clazz + _strSpace) < 0) cur += clazz + _strSpace;\r\n                  }\r\n\r\n                  finalValue = stripAndCollapse(cur);\r\n                  if (curValue !== finalValue) elem.className = finalValue;\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          return this;\r\n        },\r\n        removeClass: function removeClass(className) {\r\n          var classes;\r\n          var elem;\r\n          var cur;\r\n          var curValue;\r\n          var clazz;\r\n          var finalValue;\r\n          var supportClassList;\r\n          var elmClassList;\r\n          var i = 0;\r\n          var v = 0;\r\n\r\n          if (className) {\r\n            classes = className.match(_rnothtmlwhite) || [];\r\n\r\n            while (elem = this[i++]) {\r\n              elmClassList = elem.classList;\r\n              if (supportClassList === undefined$1) supportClassList = elmClassList !== undefined$1;\r\n\r\n              if (supportClassList) {\r\n                while (clazz = classes[v++]) {\r\n                  elmClassList.remove(clazz);\r\n                }\r\n              } else {\r\n                curValue = elem.className + _strEmpty;\r\n                cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\r\n\r\n                if (cur) {\r\n                  while (clazz = classes[v++]) {\r\n                    while (cur.indexOf(_strSpace + clazz + _strSpace) > -1) {\r\n                      cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\r\n                    }\r\n                  }\r\n\r\n                  finalValue = stripAndCollapse(cur);\r\n                  if (curValue !== finalValue) elem.className = finalValue;\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          return this;\r\n        },\r\n        hide: function hide() {\r\n          return this.each(function () {\r\n            this[LEXICON.s].display = 'none';\r\n          });\r\n        },\r\n        show: function show() {\r\n          return this.each(function () {\r\n            this[LEXICON.s].display = 'block';\r\n          });\r\n        },\r\n        attr: function attr(attrName, value) {\r\n          var i = 0;\r\n          var el;\r\n\r\n          while (el = this[i++]) {\r\n            if (value === undefined$1) return el.getAttribute(attrName);\r\n            el.setAttribute(attrName, value);\r\n          }\r\n\r\n          return this;\r\n        },\r\n        removeAttr: function removeAttr(attrName) {\r\n          return this.each(function () {\r\n            this.removeAttribute(attrName);\r\n          });\r\n        },\r\n        offset: function offset() {\r\n          var el = this[0];\r\n          var rect = el[LEXICON.bCR]();\r\n          var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\r\n          var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\r\n          return {\r\n            top: rect.top + scrollTop,\r\n            left: rect.left + scrollLeft\r\n          };\r\n        },\r\n        position: function position() {\r\n          var el = this[0];\r\n          return {\r\n            top: el.offsetTop,\r\n            left: el.offsetLeft\r\n          };\r\n        },\r\n        scrollLeft: function scrollLeft(value) {\r\n          var i = 0;\r\n          var el;\r\n\r\n          while (el = this[i++]) {\r\n            if (value === undefined$1) return el[_strScrollLeft];\r\n            el[_strScrollLeft] = value;\r\n          }\r\n\r\n          return this;\r\n        },\r\n        scrollTop: function scrollTop(value) {\r\n          var i = 0;\r\n          var el;\r\n\r\n          while (el = this[i++]) {\r\n            if (value === undefined$1) return el[_strScrollTop];\r\n            el[_strScrollTop] = value;\r\n          }\r\n\r\n          return this;\r\n        },\r\n        val: function val(value) {\r\n          var el = this[0];\r\n          if (!value) return el.value;\r\n          el.value = value;\r\n          return this;\r\n        },\r\n        //DOM TRAVERSAL / FILTERING:\r\n        first: function first() {\r\n          return this.eq(0);\r\n        },\r\n        last: function last() {\r\n          return this.eq(-1);\r\n        },\r\n        eq: function eq(index) {\r\n          return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\r\n        },\r\n        find: function find(selector) {\r\n          var children = [];\r\n          var i;\r\n          this.each(function () {\r\n            var el = this;\r\n            var ch = el.querySelectorAll(selector);\r\n\r\n            for (i = 0; i < ch[LEXICON.l]; i++) {\r\n              children.push(ch[i]);\r\n            }\r\n          });\r\n          return FakejQuery(children);\r\n        },\r\n        children: function children(selector) {\r\n          var children = [];\r\n          var el;\r\n          var ch;\r\n          var i;\r\n          this.each(function () {\r\n            ch = this.children;\r\n\r\n            for (i = 0; i < ch[LEXICON.l]; i++) {\r\n              el = ch[i];\r\n\r\n              if (selector) {\r\n                if (el.matches && el.matches(selector) || matches(el, selector)) children.push(el);\r\n              } else children.push(el);\r\n            }\r\n          });\r\n          return FakejQuery(children);\r\n        },\r\n        parent: function parent(selector) {\r\n          var parents = [];\r\n          var parent;\r\n          this.each(function () {\r\n            parent = this.parentNode;\r\n            if (selector ? FakejQuery(parent).is(selector) : true) parents.push(parent);\r\n          });\r\n          return FakejQuery(parents);\r\n        },\r\n        is: function is(selector) {\r\n          var el;\r\n          var i;\r\n\r\n          for (i = 0; i < this[LEXICON.l]; i++) {\r\n            el = this[i];\r\n            if (selector === ':visible') return elementIsVisible(el);\r\n            if (selector === ':hidden') return !elementIsVisible(el);\r\n            if (el.matches && el.matches(selector) || matches(el, selector)) return true;\r\n          }\r\n\r\n          return false;\r\n        },\r\n        contents: function contents() {\r\n          var contents = [];\r\n          var childs;\r\n          var i;\r\n          this.each(function () {\r\n            childs = this.childNodes;\r\n\r\n            for (i = 0; i < childs[LEXICON.l]; i++) {\r\n              contents.push(childs[i]);\r\n            }\r\n          });\r\n          return FakejQuery(contents);\r\n        },\r\n        each: function each(callback) {\r\n          return _each(this, callback);\r\n        },\r\n        //ANIMATION:\r\n        animate: function animate(props, duration, easing, complete) {\r\n          return this.each(function () {\r\n            _animate(this, props, duration, easing, complete);\r\n          });\r\n        },\r\n        stop: function stop(clearQ, jump) {\r\n          return this.each(function () {\r\n            _stop(this, clearQ, jump);\r\n          });\r\n        }\r\n      };\r\n      extend(FakejQuery, {\r\n        extend: extend,\r\n        inArray: inArray,\r\n        isEmptyObject: isEmptyObject,\r\n        isPlainObject: isPlainObject,\r\n        each: _each\r\n      });\r\n      return FakejQuery;\r\n    }();\r\n\r\n    var INSTANCES = function () {\r\n      var _targets = [];\r\n      var _instancePropertyString = '__overlayScrollbars__';\r\n      /**\r\n       * Register, unregister or get a certain (or all) instances.\r\n       * Register: Pass the target and the instance.\r\n       * Unregister: Pass the target and null.\r\n       * Get Instance: Pass the target from which the instance shall be got.\r\n       * Get Targets: Pass no arguments.\r\n       * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\r\n       * @param instance The instance.\r\n       * @returns {*|void} Returns the instance from the given target.\r\n       */\r\n\r\n      return function (target, instance) {\r\n        var argLen = arguments[LEXICON.l];\r\n\r\n        if (argLen < 1) {\r\n          //return all targets\r\n          return _targets;\r\n        } else {\r\n          if (instance) {\r\n            //register instance\r\n            target[_instancePropertyString] = instance;\r\n\r\n            _targets.push(target);\r\n          } else {\r\n            var index = COMPATIBILITY.inA(target, _targets);\r\n\r\n            if (index > -1) {\r\n              if (argLen > 1) {\r\n                //unregister instance\r\n                delete target[_instancePropertyString];\r\n\r\n                _targets.splice(index, 1);\r\n              } else {\r\n                //get instance from target\r\n                return _targets[index][_instancePropertyString];\r\n              }\r\n            }\r\n          }\r\n        }\r\n      };\r\n    }();\r\n\r\n    var PLUGIN = function () {\r\n      var _plugin;\r\n\r\n      var _pluginsGlobals;\r\n\r\n      var _pluginsAutoUpdateLoop;\r\n\r\n      var _pluginsExtensions = [];\r\n\r\n      var _pluginsOptions = function () {\r\n        var type = COMPATIBILITY.type;\r\n        var possibleTemplateTypes = [TYPES.b, //boolean\r\n        TYPES.n, //number\r\n        TYPES.s, //string\r\n        TYPES.a, //array\r\n        TYPES.o, //object\r\n        TYPES.f, //function\r\n        TYPES.z //null\r\n        ];\r\n        var restrictedStringsSplit = ' ';\r\n        var restrictedStringsPossibilitiesSplit = ':';\r\n        var classNameAllowedValues = [TYPES.z, TYPES.s];\r\n        var numberAllowedValues = TYPES.n;\r\n        var booleanNullAllowedValues = [TYPES.z, TYPES.b];\r\n        var booleanTrueTemplate = [true, TYPES.b];\r\n        var booleanFalseTemplate = [false, TYPES.b];\r\n        var callbackTemplate = [null, [TYPES.z, TYPES.f]];\r\n        var updateOnLoadTemplate = [['img'], [TYPES.s, TYPES.a, TYPES.z]];\r\n        var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\r\n        var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\r\n        var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\r\n        var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\r\n        var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\r\n        var optionsDefaultsAndTemplate = {\r\n          className: ['os-theme-dark', classNameAllowedValues],\r\n          //null || string\r\n          resize: ['none', resizeAllowedValues],\r\n          //none || both  || horizontal || vertical || n || b || h || v\r\n          sizeAutoCapable: booleanTrueTemplate,\r\n          //true || false\r\n          clipAlways: booleanTrueTemplate,\r\n          //true || false\r\n          normalizeRTL: booleanTrueTemplate,\r\n          //true || false\r\n          paddingAbsolute: booleanFalseTemplate,\r\n          //true || false\r\n          autoUpdate: [null, booleanNullAllowedValues],\r\n          //true || false || null\r\n          autoUpdateInterval: [33, numberAllowedValues],\r\n          //number\r\n          updateOnLoad: updateOnLoadTemplate,\r\n          //string || array || null\r\n          nativeScrollbarsOverlaid: {\r\n            showNativeScrollbars: booleanFalseTemplate,\r\n            //true || false\r\n            initialize: booleanTrueTemplate //true || false\r\n\r\n          },\r\n          overflowBehavior: {\r\n            x: ['scroll', overflowBehaviorAllowedValues],\r\n            //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n            y: ['scroll', overflowBehaviorAllowedValues] //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n\r\n          },\r\n          scrollbars: {\r\n            visibility: ['auto', scrollbarsVisibilityAllowedValues],\r\n            //visible || hidden || auto || v || h || a\r\n            autoHide: ['never', scrollbarsAutoHideAllowedValues],\r\n            //never || scroll || leave || move || n || s || l || m\r\n            autoHideDelay: [800, numberAllowedValues],\r\n            //number\r\n            dragScrolling: booleanTrueTemplate,\r\n            //true || false\r\n            clickScrolling: booleanFalseTemplate,\r\n            //true || false\r\n            touchSupport: booleanTrueTemplate,\r\n            //true || false\r\n            snapHandle: booleanFalseTemplate //true || false\r\n\r\n          },\r\n          textarea: {\r\n            dynWidth: booleanFalseTemplate,\r\n            //true || false\r\n            dynHeight: booleanFalseTemplate,\r\n            //true || false\r\n            inheritedAttrs: inheritedAttrsTemplate //string || array || null\r\n\r\n          },\r\n          callbacks: {\r\n            onInitialized: callbackTemplate,\r\n            //null || function\r\n            onInitializationWithdrawn: callbackTemplate,\r\n            //null || function\r\n            onDestroyed: callbackTemplate,\r\n            //null || function\r\n            onScrollStart: callbackTemplate,\r\n            //null || function\r\n            onScroll: callbackTemplate,\r\n            //null || function\r\n            onScrollStop: callbackTemplate,\r\n            //null || function\r\n            onOverflowChanged: callbackTemplate,\r\n            //null || function\r\n            onOverflowAmountChanged: callbackTemplate,\r\n            //null || function\r\n            onDirectionChanged: callbackTemplate,\r\n            //null || function\r\n            onContentSizeChanged: callbackTemplate,\r\n            //null || function\r\n            onHostSizeChanged: callbackTemplate,\r\n            //null || function\r\n            onUpdated: callbackTemplate //null || function\r\n\r\n          }\r\n        };\r\n\r\n        var convert = function convert(template) {\r\n          var recursive = function recursive(obj) {\r\n            var key;\r\n            var val;\r\n            var valType;\r\n\r\n            for (key in obj) {\r\n              if (!obj[LEXICON.hOP](key)) continue;\r\n              val = obj[key];\r\n              valType = type(val);\r\n              if (valType == TYPES.a) obj[key] = val[template ? 1 : 0];else if (valType == TYPES.o) obj[key] = recursive(val);\r\n            }\r\n\r\n            return obj;\r\n          };\r\n\r\n          return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));\r\n        };\r\n\r\n        return {\r\n          _defaults: convert(),\r\n          _template: convert(true),\r\n\r\n          /**\r\n           * Validates the passed object by the passed template.\r\n           * @param obj The object which shall be validated.\r\n           * @param template The template which defines the allowed values and types.\r\n           * @param writeErrors True if errors shall be logged to the console.\r\n           * @param diffObj If a object is passed then only valid differences to this object will be returned.\r\n           * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\r\n           */\r\n          _validate: function _validate(obj, template, writeErrors, diffObj) {\r\n            var validatedOptions = {};\r\n            var validatedOptionsPrepared = {};\r\n            var objectCopy = FRAMEWORK.extend(true, {}, obj);\r\n            var inArray = FRAMEWORK.inArray;\r\n            var isEmptyObj = FRAMEWORK.isEmptyObject;\r\n\r\n            var checkObjectProps = function checkObjectProps(data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\r\n              for (var prop in template) {\r\n                if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\r\n                  var isValid = false;\r\n                  var isDiff = false;\r\n                  var templateValue = template[prop];\r\n                  var templateValueType = type(templateValue);\r\n                  var templateIsComplex = templateValueType == TYPES.o;\r\n                  var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;\r\n                  var dataDiffValue = diffData[prop];\r\n                  var dataValue = data[prop];\r\n                  var dataValueType = type(dataValue);\r\n                  var propPrefix = prevPropName ? prevPropName + '.' : '';\r\n                  var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\r\n                  var errorPossibleTypes = [];\r\n                  var errorRestrictedStrings = [];\r\n                  var restrictedStringValuesSplit;\r\n                  var restrictedStringValuesPossibilitiesSplit;\r\n                  var isRestrictedValue;\r\n                  var mainPossibility;\r\n                  var currType;\r\n                  var i;\r\n                  var v;\r\n                  var j;\r\n                  dataDiffValue = dataDiffValue === undefined$1 ? {} : dataDiffValue; //if the template has a object as value, it means that the options are complex (verschachtelt)\r\n\r\n                  if (templateIsComplex && dataValueType == TYPES.o) {\r\n                    validatedOptions[prop] = {};\r\n                    validatedOptionsPrepared[prop] = {};\r\n                    checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\r\n                    FRAMEWORK.each([data, validatedOptions, validatedOptionsPrepared], function (index, value) {\r\n                      if (isEmptyObj(value[prop])) {\r\n                        delete value[prop];\r\n                      }\r\n                    });\r\n                  } else if (!templateIsComplex) {\r\n                    for (i = 0; i < templateTypes[LEXICON.l]; i++) {\r\n                      currType = templateTypes[i];\r\n                      templateValueType = type(currType); //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\r\n\r\n                      isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\r\n\r\n                      if (isRestrictedValue) {\r\n                        errorPossibleTypes.push(TYPES.s); //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\r\n\r\n                        restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\r\n                        errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\r\n\r\n                        for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\r\n                          //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\r\n                          restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\r\n                          mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\r\n\r\n                          for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\r\n                            //if any possibility matches with the dataValue, its valid\r\n                            if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\r\n                              isValid = true;\r\n                              break;\r\n                            }\r\n                          }\r\n\r\n                          if (isValid) break;\r\n                        }\r\n                      } else {\r\n                        errorPossibleTypes.push(currType);\r\n\r\n                        if (dataValueType === currType) {\r\n                          isValid = true;\r\n                          break;\r\n                        }\r\n                      }\r\n                    }\r\n\r\n                    if (isValid) {\r\n                      isDiff = dataValue !== dataDiffValue;\r\n                      if (isDiff) validatedOptions[prop] = dataValue;\r\n                      if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff) validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\r\n                    } else if (writeErrors) {\r\n                      console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" + \"Accepted types are: [ \" + errorPossibleTypes.join(', ').toUpperCase() + \" ].\" + (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(', ').split(restrictedStringsPossibilitiesSplit).join(', ') + \" ].\" : ''));\r\n                    }\r\n\r\n                    delete data[prop];\r\n                  }\r\n                }\r\n              }\r\n            };\r\n\r\n            checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared); //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\r\n\r\n            /*\r\n            if(keepForeignProps) {\r\n                FRAMEWORK.extend(true, validatedOptions, objectCopy);\r\n                FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\r\n            }\r\n            */\r\n\r\n            if (!isEmptyObj(objectCopy) && writeErrors) console.warn('The following options are discarded due to invalidity:\\r\\n' + window.JSON.stringify(objectCopy, null, 2));\r\n            return {\r\n              _default: validatedOptions,\r\n              _prepared: validatedOptionsPrepared\r\n            };\r\n          }\r\n        };\r\n      }();\r\n      /**\r\n       * Initializes the object which contains global information about the plugin and each instance of it.\r\n       */\r\n\r\n\r\n      function initOverlayScrollbarsStatics() {\r\n        if (!_pluginsGlobals) _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\r\n        if (!_pluginsAutoUpdateLoop) _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\r\n      }\r\n      /**\r\n       * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n       * @param defaultOptions\r\n       * @constructor\r\n       */\r\n\r\n\r\n      function OverlayScrollbarsGlobals(defaultOptions) {\r\n        var _base = this;\r\n\r\n        var strOverflow = 'overflow';\r\n        var strHidden = 'hidden';\r\n        var strScroll = 'scroll';\r\n        var bodyElement = FRAMEWORK('body');\r\n        var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\r\n        var scrollbarDummyElement0 = scrollbarDummyElement[0];\r\n        var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\r\n        bodyElement.append(scrollbarDummyElement);\r\n        scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\r\n\r\n        var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\r\n        var nativeScrollbarIsOverlaid = {\r\n          x: nativeScrollbarSize.x === 0,\r\n          y: nativeScrollbarSize.y === 0\r\n        };\r\n\r\n        var msie = function () {\r\n          var ua = window.navigator.userAgent;\r\n          var strIndexOf = 'indexOf';\r\n          var strSubString = 'substring';\r\n          var msie = ua[strIndexOf]('MSIE ');\r\n          var trident = ua[strIndexOf]('Trident/');\r\n          var edge = ua[strIndexOf]('Edge/');\r\n          var rv = ua[strIndexOf]('rv:');\r\n          var result;\r\n          var parseIntFunc = parseInt; // IE 10 or older => return version number\r\n\r\n          if (msie > 0) result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10); // IE 11 => return version number\r\n          else if (trident > 0) result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10); // Edge (IE 12+) => return version number\r\n          else if (edge > 0) result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10); // other browser\r\n\r\n          return result;\r\n        }();\r\n\r\n        FRAMEWORK.extend(_base, {\r\n          defaultOptions: defaultOptions,\r\n          msie: msie,\r\n          autoUpdateLoop: false,\r\n          autoUpdateRecommended: !COMPATIBILITY.mO(),\r\n          nativeScrollbarSize: nativeScrollbarSize,\r\n          nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\r\n          nativeScrollbarStyling: function () {\r\n            var result = false;\r\n            scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\r\n\r\n            try {\r\n              result = scrollbarDummyElement.css('scrollbar-width') === 'none' && (msie > 9 || !msie) || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\r\n            } catch (ex) {} //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\r\n            //and set overflow to scroll\r\n            //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\r\n            //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\r\n\r\n\r\n            return result;\r\n          }(),\r\n          overlayScrollbarDummySize: {\r\n            x: 30,\r\n            y: 30\r\n          },\r\n          cssCalc: VENDORS._cssPropertyValue('width', 'calc', '(1px)') || null,\r\n          restrictedMeasuring: function () {\r\n            //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\r\n            //since 1.11.0 always false -> fixed via CSS (hopefully)\r\n            scrollbarDummyElement.css(strOverflow, strHidden);\r\n            var scrollSize = {\r\n              w: scrollbarDummyElement0[LEXICON.sW],\r\n              h: scrollbarDummyElement0[LEXICON.sH]\r\n            };\r\n            scrollbarDummyElement.css(strOverflow, 'visible');\r\n            var scrollSize2 = {\r\n              w: scrollbarDummyElement0[LEXICON.sW],\r\n              h: scrollbarDummyElement0[LEXICON.sH]\r\n            };\r\n            return scrollSize.w - scrollSize2.w !== 0 || scrollSize.h - scrollSize2.h !== 0;\r\n          }(),\r\n          rtlScrollBehavior: function () {\r\n            scrollbarDummyElement.css({\r\n              'overflow-y': strHidden,\r\n              'overflow-x': strScroll,\r\n              'direction': 'rtl'\r\n            }).scrollLeft(0);\r\n            var dummyContainerOffset = scrollbarDummyElement.offset();\r\n            var dummyContainerChildOffset = dummyContainerChild.offset(); //https://github.com/KingSora/OverlayScrollbars/issues/187\r\n\r\n            scrollbarDummyElement.scrollLeft(-999);\r\n            var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();\r\n            return {\r\n              //origin direction = determines if the zero scroll position is on the left or right side\r\n              //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\r\n              //true = on the left side\r\n              //false = on the right side\r\n              i: dummyContainerOffset.left === dummyContainerChildOffset.left,\r\n              //negative = determines if the maximum scroll is positive or negative\r\n              //'n' means 'negate' (n === true means that the axis must be negated to be correct)\r\n              //true = negative\r\n              //false = positive\r\n              n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left\r\n            };\r\n          }(),\r\n          supportTransform: !!VENDORS._cssProperty('transform'),\r\n          supportTransition: !!VENDORS._cssProperty('transition'),\r\n          supportPassiveEvents: function () {\r\n            var supportsPassive = false;\r\n\r\n            try {\r\n              window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\r\n                get: function get() {\r\n                  supportsPassive = true;\r\n                }\r\n              }));\r\n            } catch (e) {}\r\n\r\n            return supportsPassive;\r\n          }(),\r\n          supportResizeObserver: !!COMPATIBILITY.rO(),\r\n          supportMutationObserver: !!COMPATIBILITY.mO()\r\n        });\r\n        scrollbarDummyElement.removeAttr(LEXICON.s).remove(); //Catch zoom event:\r\n\r\n        (function () {\r\n          if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y) return;\r\n          var abs = MATH.abs;\r\n          var windowWidth = COMPATIBILITY.wW();\r\n          var windowHeight = COMPATIBILITY.wH();\r\n          var windowDpr = getWindowDPR();\r\n\r\n          var onResize = function onResize() {\r\n            if (INSTANCES().length > 0) {\r\n              var newW = COMPATIBILITY.wW();\r\n              var newH = COMPATIBILITY.wH();\r\n              var deltaW = newW - windowWidth;\r\n              var deltaH = newH - windowHeight;\r\n              if (deltaW === 0 && deltaH === 0) return;\r\n              var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\r\n              var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\r\n              var absDeltaW = abs(deltaW);\r\n              var absDeltaH = abs(deltaH);\r\n              var absDeltaWRatio = abs(deltaWRatio);\r\n              var absDeltaHRatio = abs(deltaHRatio);\r\n              var newDPR = getWindowDPR();\r\n              var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\r\n              var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\r\n              var dprChanged = newDPR !== windowDpr && windowDpr > 0;\r\n              var isZoom = deltaIsBigger && difference && dprChanged;\r\n              var oldScrollbarSize = _base.nativeScrollbarSize;\r\n              var newScrollbarSize;\r\n\r\n              if (isZoom) {\r\n                bodyElement.append(scrollbarDummyElement);\r\n                newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\r\n                scrollbarDummyElement.remove();\r\n\r\n                if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\r\n                  FRAMEWORK.each(INSTANCES(), function () {\r\n                    if (INSTANCES(this)) INSTANCES(this).update('zoom');\r\n                  });\r\n                }\r\n              }\r\n\r\n              windowWidth = newW;\r\n              windowHeight = newH;\r\n              windowDpr = newDPR;\r\n            }\r\n          };\r\n\r\n          function differenceIsBiggerThanOne(valOne, valTwo) {\r\n            var absValOne = abs(valOne);\r\n            var absValTwo = abs(valTwo);\r\n            return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\r\n          }\r\n\r\n          function getWindowDPR() {\r\n            var dDPI = window.screen.deviceXDPI || 0;\r\n            var sDPI = window.screen.logicalXDPI || 1;\r\n            return window.devicePixelRatio || dDPI / sDPI;\r\n          }\r\n\r\n          FRAMEWORK(window).on('resize', onResize);\r\n        })();\r\n\r\n        function calcNativeScrollbarSize(measureElement) {\r\n          return {\r\n            x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\r\n            y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\r\n          };\r\n        }\r\n      }\r\n      /**\r\n       * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n       * @constructor\r\n       */\r\n\r\n\r\n      function OverlayScrollbarsAutoUpdateLoop(globals) {\r\n        var _base = this;\r\n\r\n        var _inArray = FRAMEWORK.inArray;\r\n        var _getNow = COMPATIBILITY.now;\r\n        var _strAutoUpdate = 'autoUpdate';\r\n\r\n        var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\r\n\r\n        var _strLength = LEXICON.l;\r\n        var _loopingInstances = [];\r\n        var _loopingInstancesIntervalCache = [];\r\n        var _loopIsActive = false;\r\n        var _loopIntervalDefault = 33;\r\n        var _loopInterval = _loopIntervalDefault;\r\n\r\n        var _loopTimeOld = _getNow();\r\n\r\n        var _loopID;\r\n        /**\r\n         * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\r\n         */\r\n\r\n\r\n        var loop = function loop() {\r\n          if (_loopingInstances[_strLength] > 0 && _loopIsActive) {\r\n            _loopID = COMPATIBILITY.rAF()(function () {\r\n              loop();\r\n            });\r\n\r\n            var timeNew = _getNow();\r\n\r\n            var timeDelta = timeNew - _loopTimeOld;\r\n            var lowestInterval;\r\n            var instance;\r\n            var instanceOptions;\r\n            var instanceAutoUpdateAllowed;\r\n            var instanceAutoUpdateInterval;\r\n            var now;\r\n\r\n            if (timeDelta > _loopInterval) {\r\n              _loopTimeOld = timeNew - timeDelta % _loopInterval;\r\n              lowestInterval = _loopIntervalDefault;\r\n\r\n              for (var i = 0; i < _loopingInstances[_strLength]; i++) {\r\n                instance = _loopingInstances[i];\r\n\r\n                if (instance !== undefined$1) {\r\n                  instanceOptions = instance.options();\r\n                  instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\r\n                  instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\r\n                  now = _getNow();\r\n\r\n                  if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && now - _loopingInstancesIntervalCache[i] > instanceAutoUpdateInterval) {\r\n                    instance.update('auto');\r\n                    _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\r\n                  }\r\n\r\n                  lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\r\n                }\r\n              }\r\n\r\n              _loopInterval = lowestInterval;\r\n            }\r\n          } else {\r\n            _loopInterval = _loopIntervalDefault;\r\n          }\r\n        };\r\n        /**\r\n         * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\r\n         * @param instance The instance which shall be updated in a loop automatically.\r\n         */\r\n\r\n\r\n        _base.add = function (instance) {\r\n          if (_inArray(instance, _loopingInstances) === -1) {\r\n            _loopingInstances.push(instance);\r\n\r\n            _loopingInstancesIntervalCache.push(_getNow());\r\n\r\n            if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\r\n              _loopIsActive = true;\r\n              globals.autoUpdateLoop = _loopIsActive;\r\n              loop();\r\n            }\r\n          }\r\n        };\r\n        /**\r\n         * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\r\n         * @param instance The instance which shall be updated in a loop automatically.\r\n         */\r\n\r\n\r\n        _base.remove = function (instance) {\r\n          var index = _inArray(instance, _loopingInstances);\r\n\r\n          if (index > -1) {\r\n            //remove from loopingInstances list\r\n            _loopingInstancesIntervalCache.splice(index, 1);\r\n\r\n            _loopingInstances.splice(index, 1); //correct update loop behavior\r\n\r\n\r\n            if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\r\n              _loopIsActive = false;\r\n              globals.autoUpdateLoop = _loopIsActive;\r\n\r\n              if (_loopID !== undefined$1) {\r\n                COMPATIBILITY.cAF()(_loopID);\r\n                _loopID = -1;\r\n              }\r\n            }\r\n          }\r\n        };\r\n      }\r\n      /**\r\n       * A object which manages the scrollbars visibility of the target element.\r\n       * @param pluginTargetElement The element from which the scrollbars shall be hidden.\r\n       * @param options The custom options.\r\n       * @param extensions The custom extensions.\r\n       * @param globals\r\n       * @param autoUpdateLoop\r\n       * @returns {*}\r\n       * @constructor\r\n       */\r\n\r\n\r\n      function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\r\n        //shortcuts\r\n        var type = COMPATIBILITY.type;\r\n        var inArray = FRAMEWORK.inArray;\r\n        var each = FRAMEWORK.each; //make correct instanceof\r\n\r\n        var _base = new _plugin();\r\n\r\n        var _frameworkProto = FRAMEWORK[LEXICON.p]; //if passed element is no HTML element: skip and return\r\n\r\n        if (!isHTMLElement(pluginTargetElement)) return; //if passed element is already initialized: set passed options if there are any and return its instance\r\n\r\n        if (INSTANCES(pluginTargetElement)) {\r\n          var inst = INSTANCES(pluginTargetElement);\r\n          inst.options(options);\r\n          return inst;\r\n        } //globals:\r\n\r\n\r\n        var _nativeScrollbarIsOverlaid;\r\n\r\n        var _overlayScrollbarDummySize;\r\n\r\n        var _rtlScrollBehavior;\r\n\r\n        var _autoUpdateRecommended;\r\n\r\n        var _msieVersion;\r\n\r\n        var _nativeScrollbarStyling;\r\n\r\n        var _cssCalc;\r\n\r\n        var _nativeScrollbarSize;\r\n\r\n        var _supportTransition;\r\n\r\n        var _supportTransform;\r\n\r\n        var _supportPassiveEvents;\r\n\r\n        var _supportResizeObserver;\r\n\r\n        var _supportMutationObserver;\r\n\r\n        var _initialized;\r\n\r\n        var _destroyed;\r\n\r\n        var _isTextarea;\r\n\r\n        var _isBody;\r\n\r\n        var _documentMixed;\r\n\r\n        var _domExists; //general:\r\n\r\n\r\n        var _isBorderBox;\r\n\r\n        var _sizeAutoObserverAdded;\r\n\r\n        var _paddingX;\r\n\r\n        var _paddingY;\r\n\r\n        var _borderX;\r\n\r\n        var _borderY;\r\n\r\n        var _marginX;\r\n\r\n        var _marginY;\r\n\r\n        var _isRTL;\r\n\r\n        var _sleeping;\r\n\r\n        var _contentBorderSize = {};\r\n        var _scrollHorizontalInfo = {};\r\n        var _scrollVerticalInfo = {};\r\n        var _viewportSize = {};\r\n        var _nativeScrollbarMinSize = {}; //naming:\t\r\n\r\n        var _strMinusHidden = '-hidden';\r\n        var _strMarginMinus = 'margin-';\r\n        var _strPaddingMinus = 'padding-';\r\n        var _strBorderMinus = 'border-';\r\n        var _strTop = 'top';\r\n        var _strRight = 'right';\r\n        var _strBottom = 'bottom';\r\n        var _strLeft = 'left';\r\n        var _strMinMinus = 'min-';\r\n        var _strMaxMinus = 'max-';\r\n        var _strWidth = 'width';\r\n        var _strHeight = 'height';\r\n        var _strFloat = 'float';\r\n        var _strEmpty = '';\r\n        var _strAuto = 'auto';\r\n        var _strSync = 'sync';\r\n        var _strScroll = 'scroll';\r\n        var _strHundredPercent = '100%';\r\n        var _strX = 'x';\r\n        var _strY = 'y';\r\n        var _strDot = '.';\r\n        var _strSpace = ' ';\r\n        var _strScrollbar = 'scrollbar';\r\n        var _strMinusHorizontal = '-horizontal';\r\n        var _strMinusVertical = '-vertical';\r\n\r\n        var _strScrollLeft = _strScroll + 'Left';\r\n\r\n        var _strScrollTop = _strScroll + 'Top';\r\n\r\n        var _strMouseTouchDownEvent = 'mousedown touchstart';\r\n        var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\r\n        var _strMouseTouchMoveEvent = 'mousemove touchmove';\r\n        var _strMouseEnter = 'mouseenter';\r\n        var _strMouseLeave = 'mouseleave';\r\n        var _strKeyDownEvent = 'keydown';\r\n        var _strKeyUpEvent = 'keyup';\r\n        var _strSelectStartEvent = 'selectstart';\r\n        var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\r\n        var _strResizeObserverProperty = '__overlayScrollbarsRO__'; //class names:\t\r\n\r\n        var _cassNamesPrefix = 'os-';\r\n\r\n        var _classNameHTMLElement = _cassNamesPrefix + 'html';\r\n\r\n        var _classNameHostElement = _cassNamesPrefix + 'host';\r\n\r\n        var _classNameHostElementForeign = _classNameHostElement + '-foreign';\r\n\r\n        var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\r\n\r\n        var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\r\n\r\n        var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\r\n\r\n        var _classNameHostTransition = _classNameHostElement + '-transition';\r\n\r\n        var _classNameHostRTL = _classNameHostElement + '-rtl';\r\n\r\n        var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\r\n\r\n        var _classNameHostScrolling = _classNameHostElement + '-scrolling';\r\n\r\n        var _classNameHostOverflow = _classNameHostElement + '-overflow';\r\n\r\n        var _classNameHostOverflow = _classNameHostElement + '-overflow';\r\n\r\n        var _classNameHostOverflowX = _classNameHostOverflow + '-x';\r\n\r\n        var _classNameHostOverflowY = _classNameHostOverflow + '-y';\r\n\r\n        var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\r\n\r\n        var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\r\n\r\n        var _classNamePaddingElement = _cassNamesPrefix + 'padding';\r\n\r\n        var _classNameViewportElement = _cassNamesPrefix + 'viewport';\r\n\r\n        var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\r\n\r\n        var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\r\n\r\n        var _classNameContentElement = _cassNamesPrefix + 'content';\r\n\r\n        var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\r\n\r\n        var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\r\n\r\n        var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\r\n\r\n        var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\r\n\r\n        var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\r\n\r\n        var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\r\n\r\n        var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\r\n\r\n        var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\r\n\r\n        var _classNameScrollbarTrack = _classNameScrollbar + '-track';\r\n\r\n        var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\r\n\r\n        var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\r\n\r\n        var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\r\n\r\n        var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\r\n\r\n        var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\r\n\r\n        var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\r\n\r\n        var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\r\n\r\n        var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\r\n\r\n        var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\r\n\r\n        var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\r\n\r\n        var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\r\n\r\n        var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\r\n\r\n        var _classNameDragging = _cassNamesPrefix + 'dragging';\r\n\r\n        var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\r\n\r\n        var _classNamesDynamicDestroy = [_classNameViewportNativeScrollbarsInvisible, _classNameViewportNativeScrollbarsOverlaid, _classNameScrollbarTrackOff, _classNameScrollbarHandleOff, _classNameScrollbarUnusable, _classNameScrollbarAutoHidden, _classNameScrollbarCornerResize, _classNameScrollbarCornerResizeB, _classNameScrollbarCornerResizeH, _classNameScrollbarCornerResizeV, _classNameDragging].join(_strSpace); //callbacks:\t\r\n\r\n\r\n        var _callbacksInitQeueue = []; //attrs viewport shall inherit from target\t\r\n\r\n        var _viewportAttrsFromTarget = [LEXICON.ti]; //options:\t\r\n\r\n        var _defaultOptions;\r\n\r\n        var _currentOptions;\r\n\r\n        var _currentPreparedOptions; //extensions:\t\r\n\r\n\r\n        var _extensions = {};\r\n        var _extensionsPrivateMethods = 'added removed on contract'; //update\t\r\n\r\n        var _lastUpdateTime;\r\n\r\n        var _swallowedUpdateHints = {};\r\n\r\n        var _swallowedUpdateTimeout;\r\n\r\n        var _swallowUpdateLag = 42;\r\n        var _updateOnLoadEventName = 'load';\r\n        var _updateOnLoadElms = []; //DOM elements:\t\r\n\r\n        var _windowElement;\r\n\r\n        var _documentElement;\r\n\r\n        var _htmlElement;\r\n\r\n        var _bodyElement;\r\n\r\n        var _targetElement; //the target element of this OverlayScrollbars object\t\r\n\r\n\r\n        var _hostElement; //the host element of this OverlayScrollbars object -> may be the same as targetElement\t\r\n\r\n\r\n        var _sizeAutoObserverElement; //observes size auto changes\t\r\n\r\n\r\n        var _sizeObserverElement; //observes size and padding changes\t\r\n\r\n\r\n        var _paddingElement; //manages the padding\t\r\n\r\n\r\n        var _viewportElement; //is the viewport of our scrollbar model\t\r\n\r\n\r\n        var _contentElement; //the element which holds the content\t\r\n\r\n\r\n        var _contentArrangeElement; //is needed for correct sizing of the content element (only if native scrollbars are overlays)\t\r\n\r\n\r\n        var _contentGlueElement; //has always the size of the content element\t\r\n\r\n\r\n        var _textareaCoverElement; //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\t\r\n\r\n\r\n        var _scrollbarCornerElement;\r\n\r\n        var _scrollbarHorizontalElement;\r\n\r\n        var _scrollbarHorizontalTrackElement;\r\n\r\n        var _scrollbarHorizontalHandleElement;\r\n\r\n        var _scrollbarVerticalElement;\r\n\r\n        var _scrollbarVerticalTrackElement;\r\n\r\n        var _scrollbarVerticalHandleElement;\r\n\r\n        var _windowElementNative;\r\n\r\n        var _documentElementNative;\r\n\r\n        var _targetElementNative;\r\n\r\n        var _hostElementNative;\r\n\r\n        var _sizeAutoObserverElementNative;\r\n\r\n        var _sizeObserverElementNative;\r\n\r\n        var _paddingElementNative;\r\n\r\n        var _viewportElementNative;\r\n\r\n        var _contentElementNative; //Cache:\t\r\n\r\n\r\n        var _hostSizeCache;\r\n\r\n        var _contentScrollSizeCache;\r\n\r\n        var _arrangeContentSizeCache;\r\n\r\n        var _hasOverflowCache;\r\n\r\n        var _hideOverflowCache;\r\n\r\n        var _widthAutoCache;\r\n\r\n        var _heightAutoCache;\r\n\r\n        var _cssBoxSizingCache;\r\n\r\n        var _cssPaddingCache;\r\n\r\n        var _cssBorderCache;\r\n\r\n        var _cssMarginCache;\r\n\r\n        var _cssDirectionCache;\r\n\r\n        var _cssDirectionDetectedCache;\r\n\r\n        var _paddingAbsoluteCache;\r\n\r\n        var _clipAlwaysCache;\r\n\r\n        var _contentGlueSizeCache;\r\n\r\n        var _overflowBehaviorCache;\r\n\r\n        var _overflowAmountCache;\r\n\r\n        var _ignoreOverlayScrollbarHidingCache;\r\n\r\n        var _autoUpdateCache;\r\n\r\n        var _sizeAutoCapableCache;\r\n\r\n        var _contentElementScrollSizeChangeDetectedCache;\r\n\r\n        var _hostElementSizeChangeDetectedCache;\r\n\r\n        var _scrollbarsVisibilityCache;\r\n\r\n        var _scrollbarsAutoHideCache;\r\n\r\n        var _scrollbarsClickScrollingCache;\r\n\r\n        var _scrollbarsDragScrollingCache;\r\n\r\n        var _resizeCache;\r\n\r\n        var _normalizeRTLCache;\r\n\r\n        var _classNameCache;\r\n\r\n        var _oldClassName;\r\n\r\n        var _textareaAutoWrappingCache;\r\n\r\n        var _textareaInfoCache;\r\n\r\n        var _textareaSizeCache;\r\n\r\n        var _textareaDynHeightCache;\r\n\r\n        var _textareaDynWidthCache;\r\n\r\n        var _bodyMinSizeCache;\r\n\r\n        var _updateAutoCache = {}; //MutationObserver:\t\r\n\r\n        var _mutationObserverHost;\r\n\r\n        var _mutationObserverContent;\r\n\r\n        var _mutationObserverHostCallback;\r\n\r\n        var _mutationObserverContentCallback;\r\n\r\n        var _mutationObserversConnected;\r\n\r\n        var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\r\n\r\n        var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'].concat(_viewportAttrsFromTarget); //events:\t\r\n\r\n\r\n        var _destroyEvents = []; //textarea:\t\r\n\r\n        var _textareaHasFocus; //scrollbars:\t\r\n\r\n\r\n        var _scrollbarsAutoHideTimeoutId;\r\n\r\n        var _scrollbarsAutoHideMoveTimeoutId;\r\n\r\n        var _scrollbarsAutoHideDelay;\r\n\r\n        var _scrollbarsAutoHideNever;\r\n\r\n        var _scrollbarsAutoHideScroll;\r\n\r\n        var _scrollbarsAutoHideMove;\r\n\r\n        var _scrollbarsAutoHideLeave;\r\n\r\n        var _scrollbarsHandleHovered;\r\n\r\n        var _scrollbarsHandlesDefineScrollPos; //resize\t\r\n\r\n\r\n        var _resizeNone;\r\n\r\n        var _resizeBoth;\r\n\r\n        var _resizeHorizontal;\r\n\r\n        var _resizeVertical; //==== Event Listener ====//\t\r\n\r\n        /**\t\r\n         * Adds or removes a event listener from the given element. \t\r\n         * @param element The element to which the event listener shall be applied or removed.\t\r\n         * @param eventNames The name(s) of the events.\t\r\n         * @param listener The method which shall be called.\t\r\n         * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\t\r\n         * @param passiveOrOptions The options for the event.\r\n         */\r\n\r\n\r\n        function setupResponsiveEventListener(element, eventNames, listener, remove, passiveOrOptions) {\r\n          var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);\r\n          var method = remove ? 'removeEventListener' : 'addEventListener';\r\n          var onOff = remove ? 'off' : 'on';\r\n          var events = collected ? false : eventNames.split(_strSpace);\r\n          var i = 0;\r\n          var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);\r\n          var passive = _supportPassiveEvents && (passiveOrOptionsIsObj ? passiveOrOptions._passive : passiveOrOptions) || false;\r\n          var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);\r\n          var nativeParam = _supportPassiveEvents ? {\r\n            passive: passive,\r\n            capture: capture\r\n          } : capture;\r\n\r\n          if (collected) {\r\n            for (; i < eventNames[LEXICON.l]; i++) {\r\n              setupResponsiveEventListener(element, eventNames[i], listener[i], remove, passiveOrOptions);\r\n            }\r\n          } else {\r\n            for (; i < events[LEXICON.l]; i++) {\r\n              if (_supportPassiveEvents) {\r\n                element[0][method](events[i], listener, nativeParam);\r\n              } else {\r\n                element[onOff](events[i], listener);\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        function addDestroyEventListener(element, eventNames, listener, passive) {\r\n          setupResponsiveEventListener(element, eventNames, listener, false, passive);\r\n\r\n          _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive));\r\n        } //==== Resize Observer ====//\r\n\r\n        /**\r\n         * Adds or removes a resize observer from the given element.\r\n         * @param targetElement The element to which the resize observer shall be added or removed.\r\n         * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\r\n         */\r\n\r\n\r\n        function setupResizeObserver(targetElement, onElementResizedCallback) {\r\n          if (targetElement) {\r\n            var resizeObserver = COMPATIBILITY.rO();\r\n            var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\r\n            var strChildNodes = 'childNodes';\r\n            var constScroll = 3333333;\r\n\r\n            var callback = function callback() {\r\n              targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);\r\n\r\n              onElementResizedCallback();\r\n            }; //add resize observer:\r\n\r\n\r\n            if (onElementResizedCallback) {\r\n              if (_supportResizeObserver) {\r\n                var element = targetElement.addClass('observed').append(generateDiv(_classNameResizeObserverElement)).contents()[0];\r\n                var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\r\n                observer.observe(element);\r\n              } else {\r\n                if (_msieVersion > 9 || !_autoUpdateRecommended) {\r\n                  targetElement.prepend(generateDiv(_classNameResizeObserverElement, generateDiv({\r\n                    c: _classNameResizeObserverItemElement,\r\n                    dir: 'ltr'\r\n                  }, generateDiv(_classNameResizeObserverItemElement, generateDiv(_classNameResizeObserverItemFinalElement)) + generateDiv(_classNameResizeObserverItemElement, generateDiv({\r\n                    c: _classNameResizeObserverItemFinalElement,\r\n                    style: 'width: 200%; height: 200%'\r\n                  })))));\r\n                  var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\r\n                  var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\r\n                  var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\r\n                  var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\r\n                  var widthCache = observerElement[LEXICON.oW];\r\n                  var heightCache = observerElement[LEXICON.oH];\r\n                  var isDirty;\r\n                  var rAFId;\r\n                  var currWidth;\r\n                  var currHeight;\r\n                  var factor = 2;\r\n                  var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\r\n\r\n                  var reset = function reset() {\r\n                    /*\r\n                     var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                     var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                     var expandChildCSS = {};\r\n                     expandChildCSS[_strWidth] = sizeResetWidth;\r\n                     expandChildCSS[_strHeight] = sizeResetHeight;\r\n                     expandElementChild.css(expandChildCSS);\r\n                         expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                     shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                     */\r\n                    expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\r\n\r\n                    shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\r\n                  };\r\n\r\n                  var onResized = function onResized() {\r\n                    rAFId = 0;\r\n                    if (!isDirty) return;\r\n                    widthCache = currWidth;\r\n                    heightCache = currHeight;\r\n                    callback();\r\n                  };\r\n\r\n                  var onScroll = function onScroll(event) {\r\n                    currWidth = observerElement[LEXICON.oW];\r\n                    currHeight = observerElement[LEXICON.oH];\r\n                    isDirty = currWidth != widthCache || currHeight != heightCache;\r\n\r\n                    if (event && isDirty && !rAFId) {\r\n                      COMPATIBILITY.cAF()(rAFId);\r\n                      rAFId = COMPATIBILITY.rAF()(onResized);\r\n                    } else if (!event) onResized();\r\n\r\n                    reset();\r\n\r\n                    if (event) {\r\n                      COMPATIBILITY.prvD(event);\r\n                      COMPATIBILITY.stpP(event);\r\n                    }\r\n\r\n                    return false;\r\n                  };\r\n\r\n                  var expandChildCSS = {};\r\n                  var observerElementCSS = {};\r\n                  setTopRightBottomLeft(observerElementCSS, _strEmpty, [-((nativeScrollbarSize.y + 1) * factor), nativeScrollbarSize.x * -factor, nativeScrollbarSize.y * -factor, -((nativeScrollbarSize.x + 1) * factor)]);\r\n                  FRAMEWORK(observerElement).css(observerElementCSS);\r\n                  expandElement.on(_strScroll, onScroll);\r\n                  shrinkElement.on(_strScroll, onScroll);\r\n                  targetElement.on(strAnimationStartEvent, function () {\r\n                    onScroll(false);\r\n                  }); //lets assume that the divs will never be that large and a constant value is enough\r\n\r\n                  expandChildCSS[_strWidth] = constScroll;\r\n                  expandChildCSS[_strHeight] = constScroll;\r\n                  expandElementChild.css(expandChildCSS);\r\n                  reset();\r\n                } else {\r\n                  var attachEvent = _documentElementNative.attachEvent;\r\n                  var isIE = _msieVersion !== undefined$1;\r\n\r\n                  if (attachEvent) {\r\n                    targetElement.prepend(generateDiv(_classNameResizeObserverElement));\r\n                    findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\r\n                  } else {\r\n                    var obj = _documentElementNative.createElement(TYPES.o);\r\n\r\n                    obj.setAttribute(LEXICON.ti, '-1');\r\n                    obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\r\n\r\n                    obj.onload = function () {\r\n                      var wnd = this.contentDocument.defaultView;\r\n                      wnd.addEventListener('resize', callback);\r\n                      wnd.document.documentElement.style.display = 'none';\r\n                    };\r\n\r\n                    obj.type = 'text/html';\r\n                    if (isIE) targetElement.prepend(obj);\r\n                    obj.data = 'about:blank';\r\n                    if (!isIE) targetElement.prepend(obj);\r\n                    targetElement.on(strAnimationStartEvent, callback);\r\n                  }\r\n                }\r\n              }\r\n\r\n              if (targetElement[0] === _sizeObserverElementNative) {\r\n                var directionChanged = function directionChanged() {\r\n                  var dir = _hostElement.css('direction');\r\n\r\n                  var css = {};\r\n                  var scrollLeftValue = 0;\r\n                  var result = false;\r\n\r\n                  if (dir !== _cssDirectionDetectedCache) {\r\n                    if (dir === 'ltr') {\r\n                      css[_strLeft] = 0;\r\n                      css[_strRight] = _strAuto;\r\n                      scrollLeftValue = constScroll;\r\n                    } else {\r\n                      css[_strLeft] = _strAuto;\r\n                      css[_strRight] = 0;\r\n                      scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;\r\n                    } //execution order is important for IE!!!\r\n\r\n\r\n                    _sizeObserverElement.children().eq(0).css(css);\r\n\r\n                    _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);\r\n\r\n                    _cssDirectionDetectedCache = dir;\r\n                    result = true;\r\n                  }\r\n\r\n                  return result;\r\n                };\r\n\r\n                directionChanged();\r\n                addDestroyEventListener(targetElement, _strScroll, function (event) {\r\n                  if (directionChanged()) update();\r\n                  COMPATIBILITY.prvD(event);\r\n                  COMPATIBILITY.stpP(event);\r\n                  return false;\r\n                });\r\n              }\r\n            } //remove resize observer:\r\n            else {\r\n              if (_supportResizeObserver) {\r\n                var element = targetElement.contents()[0];\r\n                var resizeObserverObj = element[_strResizeObserverProperty];\r\n\r\n                if (resizeObserverObj) {\r\n                  resizeObserverObj.disconnect();\r\n                  delete element[_strResizeObserverProperty];\r\n                }\r\n              } else {\r\n                remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\r\n              }\r\n            }\r\n          }\r\n        }\r\n        /**\r\n         * Freezes or unfreezes the given resize observer.\r\n         * @param targetElement The element to which the target resize observer is applied.\r\n         * @param freeze True if the resize observer shall be frozen, false otherwise.\r\n         \r\n        function freezeResizeObserver(targetElement, freeze) {\r\n            if (targetElement !== undefined) {\r\n                if(freeze) {\r\n                    if (_supportResizeObserver) {\r\n                        var element = targetElement.contents()[0];\r\n                        element[_strResizeObserverProperty].unobserve(element);\r\n                    }\r\n                    else {\r\n                        targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\r\n                        var w = targetElement.css(_strWidth);\r\n                        var h = targetElement.css(_strHeight);\r\n                        var css = {};\r\n                        css[_strWidth] = w;\r\n                        css[_strHeight] = h;\r\n                        targetElement.css(css);\r\n                    }\r\n                }\r\n                else {\r\n                    if (_supportResizeObserver) {\r\n                        var element = targetElement.contents()[0];\r\n                        element[_strResizeObserverProperty].observe(element);\r\n                    }\r\n                    else {\r\n                        var css = { };\r\n                        css[_strHeight] = _strEmpty;\r\n                        css[_strWidth] = _strEmpty;\r\n                        targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        */\r\n        //==== Mutation Observers ====//\r\n\r\n        /**\r\n         * Creates MutationObservers for the host and content Element if they are supported.\r\n         */\r\n\r\n\r\n        function createMutationObservers() {\r\n          if (_supportMutationObserver) {\r\n            var mutationObserverContentLag = 11;\r\n            var mutationObserver = COMPATIBILITY.mO();\r\n            var contentLastUpdate = COMPATIBILITY.now();\r\n            var mutationTarget;\r\n            var mutationAttrName;\r\n            var mutationIsClass;\r\n            var oldMutationVal;\r\n            var newClassVal;\r\n            var hostClassNameRegex;\r\n            var contentTimeout;\r\n            var now;\r\n            var sizeAuto;\r\n            var action;\r\n\r\n            _mutationObserverHostCallback = function _mutationObserverHostCallback(mutations) {\r\n              var doUpdate = false;\r\n              var doUpdateForce = false;\r\n              var mutation;\r\n              var mutatedAttrs = [];\r\n\r\n              if (_initialized && !_sleeping) {\r\n                each(mutations, function () {\r\n                  mutation = this;\r\n                  mutationTarget = mutation.target;\r\n                  mutationAttrName = mutation.attributeName;\r\n                  mutationIsClass = mutationAttrName === LEXICON.c;\r\n                  oldMutationVal = mutation.oldValue;\r\n                  newClassVal = mutationTarget.className;\r\n\r\n                  if (_domExists && mutationIsClass && !doUpdateForce) {\r\n                    // if old class value contains _classNameHostElementForeign and new class value doesn't\r\n                    if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {\r\n                      hostClassNameRegex = createHostClassNameRegExp(true);\r\n                      _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function (name) {\r\n                        return name.match(hostClassNameRegex);\r\n                      })).join(_strSpace);\r\n                      doUpdate = doUpdateForce = true;\r\n                    }\r\n                  }\r\n\r\n                  if (!doUpdate) {\r\n                    doUpdate = mutationIsClass ? hostClassNamesChanged(oldMutationVal, newClassVal) : mutationAttrName === LEXICON.s ? oldMutationVal !== mutationTarget[LEXICON.s].cssText : true;\r\n                  }\r\n\r\n                  mutatedAttrs.push(mutationAttrName);\r\n                });\r\n                updateViewportAttrsFromTarget(mutatedAttrs);\r\n                if (doUpdate) _base.update(doUpdateForce || _strAuto);\r\n              }\r\n\r\n              return doUpdate;\r\n            };\r\n\r\n            _mutationObserverContentCallback = function _mutationObserverContentCallback(mutations) {\r\n              var doUpdate = false;\r\n              var mutation;\r\n\r\n              if (_initialized && !_sleeping) {\r\n                each(mutations, function () {\r\n                  mutation = this;\r\n                  doUpdate = isUnknownMutation(mutation);\r\n                  return !doUpdate;\r\n                });\r\n\r\n                if (doUpdate) {\r\n                  now = COMPATIBILITY.now();\r\n                  sizeAuto = _heightAutoCache || _widthAutoCache;\r\n\r\n                  action = function action() {\r\n                    if (!_destroyed) {\r\n                      contentLastUpdate = now; //if cols, rows or wrap attr was changed\r\n\r\n                      if (_isTextarea) textareaUpdate();\r\n                      if (sizeAuto) update();else _base.update(_strAuto);\r\n                    }\r\n                  };\r\n\r\n                  clearTimeout(contentTimeout);\r\n                  if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto) action();else contentTimeout = setTimeout(action, mutationObserverContentLag);\r\n                }\r\n              }\r\n\r\n              return doUpdate;\r\n            };\r\n\r\n            _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\r\n            _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\r\n          }\r\n        }\r\n        /**\r\n         * Connects the MutationObservers if they are supported.\r\n         */\r\n\r\n\r\n        function connectMutationObservers() {\r\n          if (_supportMutationObserver && !_mutationObserversConnected) {\r\n            _mutationObserverHost.observe(_hostElementNative, {\r\n              attributes: true,\r\n              attributeOldValue: true,\r\n              attributeFilter: _mutationObserverAttrsHost\r\n            });\r\n\r\n            _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\r\n              attributes: true,\r\n              attributeOldValue: true,\r\n              subtree: !_isTextarea,\r\n              childList: !_isTextarea,\r\n              characterData: !_isTextarea,\r\n              attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\r\n            });\r\n\r\n            _mutationObserversConnected = true;\r\n          }\r\n        }\r\n        /**\r\n         * Disconnects the MutationObservers if they are supported.\r\n         */\r\n\r\n\r\n        function disconnectMutationObservers() {\r\n          if (_supportMutationObserver && _mutationObserversConnected) {\r\n            _mutationObserverHost.disconnect();\r\n\r\n            _mutationObserverContent.disconnect();\r\n\r\n            _mutationObserversConnected = false;\r\n          }\r\n        } //==== Events of elements ====//\r\n\r\n        /**\r\n         * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\r\n         * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\r\n         * If there are any size changes, the update method gets called.\r\n         */\r\n\r\n\r\n        function hostOnResized() {\r\n          if (!_sleeping) {\r\n            var changed;\r\n            var hostSize = {\r\n              w: _sizeObserverElementNative[LEXICON.sW],\r\n              h: _sizeObserverElementNative[LEXICON.sH]\r\n            };\r\n            changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\r\n            _hostElementSizeChangeDetectedCache = hostSize;\r\n            if (changed) update({\r\n              _hostSizeChanged: true\r\n            });\r\n          }\r\n        }\r\n        /**\r\n         * The mouse enter event of the host element. This event is only needed for the autoHide feature.\r\n         */\r\n\r\n\r\n        function hostOnMouseEnter() {\r\n          if (_scrollbarsAutoHideLeave) refreshScrollbarsAutoHide(true);\r\n        }\r\n        /**\r\n         * The mouse leave event of the host element. This event is only needed for the autoHide feature.\r\n         */\r\n\r\n\r\n        function hostOnMouseLeave() {\r\n          if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging)) refreshScrollbarsAutoHide(false);\r\n        }\r\n        /**\r\n         * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\r\n         */\r\n\r\n\r\n        function hostOnMouseMove() {\r\n          if (_scrollbarsAutoHideMove) {\r\n            refreshScrollbarsAutoHide(true);\r\n            clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\r\n            _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\r\n              if (_scrollbarsAutoHideMove && !_destroyed) refreshScrollbarsAutoHide(false);\r\n            }, 100);\r\n          }\r\n        }\r\n        /**\r\n         * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\r\n         * @param event The select start event.\r\n         */\r\n\r\n\r\n        function documentOnSelectStart(event) {\r\n          COMPATIBILITY.prvD(event);\r\n          return false;\r\n        }\r\n        /**\t\r\n         * A callback which will be called after a element has loaded.\t\r\n         */\r\n\r\n\r\n        function updateOnLoadCallback(event) {\r\n          var elm = FRAMEWORK(event.target);\r\n          eachUpdateOnLoad(function (i, updateOnLoadSelector) {\r\n            if (elm.is(updateOnLoadSelector)) {\r\n              update({\r\n                _contentSizeChanged: true\r\n              });\r\n            }\r\n          });\r\n        }\r\n        /**\r\n        * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\r\n        * @param destroy Indicates whether the events shall be added or removed.\r\n        */\r\n\r\n\r\n        function setupHostMouseTouchEvents(destroy) {\r\n          if (!destroy) setupHostMouseTouchEvents(true);\r\n          setupResponsiveEventListener(_hostElement, _strMouseTouchMoveEvent.split(_strSpace)[0], hostOnMouseMove, !_scrollbarsAutoHideMove || destroy, true);\r\n          setupResponsiveEventListener(_hostElement, [_strMouseEnter, _strMouseLeave], [hostOnMouseEnter, hostOnMouseLeave], !_scrollbarsAutoHideLeave || destroy, true); //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\r\n\r\n          if (!_initialized && !destroy) _hostElement.one('mouseover', hostOnMouseEnter);\r\n        } //==== Update Detection ====//\r\n\r\n        /**\r\n         * Measures the min width and min height of the body element and refreshes the related cache.\r\n         * @returns {boolean} True if the min width or min height has changed, false otherwise.\r\n         */\r\n\r\n\r\n        function bodyMinSizeChanged() {\r\n          var bodyMinSize = {};\r\n\r\n          if (_isBody && _contentArrangeElement) {\r\n            bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\r\n            bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\r\n            bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\r\n            bodyMinSize.f = true; //flag for \"measured at least once\"\r\n          }\r\n\r\n          _bodyMinSizeCache = bodyMinSize;\r\n          return !!bodyMinSize.c;\r\n        }\r\n        /**\r\n         * Returns true if the class names really changed (new class without plugin host prefix)\r\n         * @param oldClassNames The old ClassName string or array.\r\n         * @param newClassNames The new ClassName string or array.\r\n         * @returns {boolean} True if the class names has really changed, false otherwise.\r\n         */\r\n\r\n\r\n        function hostClassNamesChanged(oldClassNames, newClassNames) {\r\n          var currClasses = _typeof(newClassNames) == TYPES.s ? newClassNames.split(_strSpace) : [];\r\n          var oldClasses = _typeof(oldClassNames) == TYPES.s ? oldClassNames.split(_strSpace) : [];\r\n          var diff = getArrayDifferences(oldClasses, currClasses); // remove none theme from diff list to prevent update\r\n\r\n          var idx = inArray(_classNameThemeNone, diff);\r\n          var i;\r\n          var regex;\r\n          if (idx > -1) diff.splice(idx, 1);\r\n\r\n          if (diff[LEXICON.l] > 0) {\r\n            regex = createHostClassNameRegExp(true, true);\r\n\r\n            for (i = 0; i < diff.length; i++) {\r\n              if (!diff[i].match(regex)) {\r\n                return true;\r\n              }\r\n            }\r\n          }\r\n\r\n          return false;\r\n        }\r\n        /**\r\n         * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\r\n         * @param mutation The mutation which shall be checked.\r\n         * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\r\n         */\r\n\r\n\r\n        function isUnknownMutation(mutation) {\r\n          var attributeName = mutation.attributeName;\r\n          var mutationTarget = mutation.target;\r\n          var mutationType = mutation.type;\r\n          var strClosest = 'closest';\r\n          if (mutationTarget === _contentElementNative) return attributeName === null;\r\n\r\n          if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\r\n            //ignore className changes by the plugin\t\r\n            if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement)) return hostClassNamesChanged(mutation.oldValue, mutationTarget.className); //only do it of browser support it natively\t\r\n\r\n            if (_typeof(mutationTarget[strClosest]) != TYPES.f) return true;\r\n            if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null) return false;\r\n          }\r\n\r\n          return true;\r\n        }\r\n        /**\r\n         * Returns true if the content size was changed since the last time this method was called.\r\n         * @returns {boolean} True if the content size was changed, false otherwise.\r\n         */\r\n\r\n\r\n        function updateAutoContentSizeChanged() {\r\n          if (_sleeping) return false;\r\n          var contentMeasureElement = getContentMeasureElement();\r\n          var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\r\n          var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\r\n          var css = {};\r\n          var float;\r\n          var bodyMinSizeC;\r\n          var changed;\r\n          var contentElementScrollSize;\r\n\r\n          if (setCSS) {\r\n            float = _contentElement.css(_strFloat);\r\n            css[_strFloat] = _isRTL ? _strRight : _strLeft;\r\n            css[_strWidth] = _strAuto;\r\n\r\n            _contentElement.css(css);\r\n          }\r\n\r\n          contentElementScrollSize = {\r\n            w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\r\n            h: contentMeasureElement[LEXICON.sH] + textareaValueLength\r\n          };\r\n\r\n          if (setCSS) {\r\n            css[_strFloat] = float;\r\n            css[_strWidth] = _strHundredPercent;\r\n\r\n            _contentElement.css(css);\r\n          }\r\n\r\n          bodyMinSizeC = bodyMinSizeChanged();\r\n          changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\r\n          _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\r\n          return changed || bodyMinSizeC;\r\n        }\r\n        /**\r\n         * Returns true when a attribute which the MutationObserver would observe has changed.  \r\n         * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\r\n         */\r\n\r\n\r\n        function meaningfulAttrsChanged() {\r\n          if (_sleeping || _mutationObserversConnected) return;\r\n          var elem;\r\n          var curr;\r\n          var cache;\r\n          var changedAttrs = [];\r\n          var checks = [{\r\n            _elem: _hostElement,\r\n            _attrs: _mutationObserverAttrsHost.concat(':visible')\r\n          }, {\r\n            _elem: _isTextarea ? _targetElement : undefined$1,\r\n            _attrs: _mutationObserverAttrsTextarea\r\n          }];\r\n          each(checks, function (index, check) {\r\n            elem = check._elem;\r\n\r\n            if (elem) {\r\n              each(check._attrs, function (index, attr) {\r\n                curr = attr.charAt(0) === ':' ? elem.is(attr) : elem.attr(attr);\r\n                cache = _updateAutoCache[attr];\r\n\r\n                if (checkCache(curr, cache)) {\r\n                  changedAttrs.push(attr);\r\n                }\r\n\r\n                _updateAutoCache[attr] = curr;\r\n              });\r\n            }\r\n          });\r\n          updateViewportAttrsFromTarget(changedAttrs);\r\n          return changedAttrs[LEXICON.l] > 0;\r\n        }\r\n        /**\r\n         * Checks is a CSS Property of a child element is affecting the scroll size of the content.\r\n         * @param propertyName The CSS property name.\r\n         * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\r\n         */\r\n\r\n\r\n        function isSizeAffectingCSSProperty(propertyName) {\r\n          if (!_initialized) return true;\r\n          var flexGrow = 'flex-grow';\r\n          var flexShrink = 'flex-shrink';\r\n          var flexBasis = 'flex-basis';\r\n          var affectingPropsX = [_strWidth, _strMinMinus + _strWidth, _strMaxMinus + _strWidth, _strMarginMinus + _strLeft, _strMarginMinus + _strRight, _strLeft, _strRight, 'font-weight', 'word-spacing', flexGrow, flexShrink, flexBasis];\r\n          var affectingPropsXContentBox = [_strPaddingMinus + _strLeft, _strPaddingMinus + _strRight, _strBorderMinus + _strLeft + _strWidth, _strBorderMinus + _strRight + _strWidth];\r\n          var affectingPropsY = [_strHeight, _strMinMinus + _strHeight, _strMaxMinus + _strHeight, _strMarginMinus + _strTop, _strMarginMinus + _strBottom, _strTop, _strBottom, 'line-height', flexGrow, flexShrink, flexBasis];\r\n          var affectingPropsYContentBox = [_strPaddingMinus + _strTop, _strPaddingMinus + _strBottom, _strBorderMinus + _strTop + _strWidth, _strBorderMinus + _strBottom + _strWidth];\r\n          var _strS = 's';\r\n          var _strVS = 'v-s';\r\n          var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\r\n          var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\r\n          var sizeIsAffected = false;\r\n\r\n          var checkPropertyName = function checkPropertyName(arr, name) {\r\n            for (var i = 0; i < arr[LEXICON.l]; i++) {\r\n              if (arr[i] === name) return true;\r\n            }\r\n\r\n            return false;\r\n          };\r\n\r\n          if (checkY) {\r\n            sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\r\n            if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\r\n          }\r\n\r\n          if (checkX && !sizeIsAffected) {\r\n            sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\r\n            if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\r\n          }\r\n\r\n          return sizeIsAffected;\r\n        } //==== Update ====//\r\n\r\n        /**\r\n         * Sets the attribute values of the viewport element to the values from the target element.\r\n         * The value of a attribute is only set if the attribute is whitelisted.\r\n         * @attrs attrs The array of attributes which shall be set or undefined if all whitelisted shall be set.\r\n         */\r\n\r\n\r\n        function updateViewportAttrsFromTarget(attrs) {\r\n          attrs = attrs || _viewportAttrsFromTarget;\r\n          each(attrs, function (index, attr) {\r\n            if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {\r\n              var targetAttr = _targetElement.attr(attr);\r\n\r\n              if (type(targetAttr) == TYPES.s) {\r\n                _viewportElement.attr(attr, targetAttr);\r\n              } else {\r\n                _viewportElement.removeAttr(attr);\r\n              }\r\n            }\r\n          });\r\n        }\r\n        /**\r\n         * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\r\n         */\r\n\r\n\r\n        function textareaUpdate() {\r\n          if (!_sleeping) {\r\n            var wrapAttrOff = !_textareaAutoWrappingCache;\r\n            var minWidth = _viewportSize.w;\r\n            var minHeight = _viewportSize.h;\r\n            var css = {};\r\n            var doMeasure = _widthAutoCache || wrapAttrOff;\r\n            var origWidth;\r\n            var width;\r\n            var origHeight;\r\n            var height; //reset min size\r\n\r\n            css[_strMinMinus + _strWidth] = _strEmpty;\r\n            css[_strMinMinus + _strHeight] = _strEmpty; //set width auto\r\n\r\n            css[_strWidth] = _strAuto;\r\n\r\n            _targetElement.css(css); //measure width\r\n\r\n\r\n            origWidth = _targetElementNative[LEXICON.oW];\r\n            width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\r\n            /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\r\n            //set measured width\r\n\r\n            css[_strWidth] = _widthAutoCache ? _strAuto\r\n            /*width*/\r\n            : _strHundredPercent;\r\n            css[_strMinMinus + _strWidth] = _strHundredPercent; //set height auto\r\n\r\n            css[_strHeight] = _strAuto;\r\n\r\n            _targetElement.css(css); //measure height\r\n\r\n\r\n            origHeight = _targetElementNative[LEXICON.oH];\r\n            height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1); //append correct size values\r\n\r\n            css[_strWidth] = width;\r\n            css[_strHeight] = height;\r\n\r\n            _textareaCoverElement.css(css); //apply min width / min height to prevent textarea collapsing\r\n\r\n\r\n            css[_strMinMinus + _strWidth] = minWidth\r\n            /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/\r\n            ;\r\n            css[_strMinMinus + _strHeight] = minHeight\r\n            /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/\r\n            ;\r\n\r\n            _targetElement.css(css);\r\n\r\n            return {\r\n              _originalWidth: origWidth,\r\n              _originalHeight: origHeight,\r\n              _dynamicWidth: width,\r\n              _dynamicHeight: height\r\n            };\r\n          }\r\n        }\r\n        /**\r\n         * Updates the plugin and DOM to the current options.\r\n         * This method should only be called if a update is 100% required.\r\n         * @param updateHints A objects which contains hints for this update:\r\n         * {\r\n         *   _hostSizeChanged : boolean,\r\n         *   _contentSizeChanged : boolean,\r\n         *   _force : boolean,                             == preventSwallowing\r\n         *   _changedOptions : { },                        == preventSwallowing && preventSleep\r\n        *  }\r\n         */\r\n\r\n\r\n        function update(updateHints) {\r\n          clearTimeout(_swallowedUpdateTimeout);\r\n          updateHints = updateHints || {};\r\n          _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\r\n          _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\r\n          _swallowedUpdateHints._force |= updateHints._force;\r\n          var now = COMPATIBILITY.now();\r\n          var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\r\n          var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\r\n          var force = !!_swallowedUpdateHints._force;\r\n          var changedOptions = updateHints._changedOptions;\r\n          var swallow = _initialized && !_destroyed && !force && !changedOptions && now - _lastUpdateTime < _swallowUpdateLag && !_heightAutoCache && !_widthAutoCache;\r\n          var displayIsHidden;\r\n          if (swallow) _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag); //abort update due to:\r\n          //destroyed\r\n          //swallowing\r\n          //sleeping\r\n          //host is hidden or has false display\r\n\r\n          if (_destroyed || swallow || _sleeping && !changedOptions || _initialized && !force && (displayIsHidden = _hostElement.is(':hidden')) || _hostElement.css('display') === 'inline') return;\r\n          _lastUpdateTime = now;\r\n          _swallowedUpdateHints = {}; //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\r\n\r\n          if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\r\n            //native scrollbars are hidden, so change the values to zero\r\n            _nativeScrollbarSize.x = 0;\r\n            _nativeScrollbarSize.y = 0;\r\n          } else {\r\n            //refresh native scrollbar size (in case of zoom)\r\n            _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\r\n          } // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\r\n          // The calculation: [scrollbar size +3 *3]\r\n          // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\r\n          // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\r\n\r\n\r\n          _nativeScrollbarMinSize = {\r\n            x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\r\n            y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\r\n          };\r\n          changedOptions = changedOptions || {}; //freezeResizeObserver(_sizeObserverElement, true);\r\n          //freezeResizeObserver(_sizeAutoObserverElement, true);\r\n\r\n          var checkCacheAutoForce = function checkCacheAutoForce() {\r\n            return checkCache.apply(this, [].slice.call(arguments).concat([force]));\r\n          }; //save current scroll offset\r\n\r\n\r\n          var currScroll = {\r\n            x: _viewportElement[_strScrollLeft](),\r\n            y: _viewportElement[_strScrollTop]()\r\n          };\r\n          var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\r\n          var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea; //scrollbars visibility:\r\n\r\n          var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\r\n          var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache); //scrollbars autoHide:\r\n\r\n          var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\r\n          var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache); //scrollbars click scrolling\r\n\r\n          var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\r\n          var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache); //scrollbars drag scrolling\r\n\r\n          var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\r\n          var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache); //className\r\n\r\n          var className = _currentPreparedOptions.className;\r\n          var classNameChanged = checkCacheAutoForce(className, _classNameCache); //resize\r\n\r\n          var resize = _currentPreparedOptions.resize;\r\n          var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\r\n          //paddingAbsolute\r\n\r\n          var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\r\n          var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache); //clipAlways\r\n\r\n          var clipAlways = _currentPreparedOptions.clipAlways;\r\n          var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache); //sizeAutoCapable\r\n\r\n          var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\r\n\r\n          var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache); //showNativeScrollbars\r\n\r\n          var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\r\n          var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache); //autoUpdate\r\n\r\n          var autoUpdate = _currentPreparedOptions.autoUpdate;\r\n          var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache); //overflowBehavior\r\n\r\n          var overflowBehavior = _currentPreparedOptions.overflowBehavior;\r\n          var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force); //dynWidth:\r\n\r\n          var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\r\n          var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth); //dynHeight:\r\n\r\n          var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\r\n          var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight); //scrollbars visibility\r\n\r\n          _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\r\n          _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\r\n          _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\r\n          _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l'; //scrollbars autoHideDelay\r\n\r\n          _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay; //old className\r\n\r\n          _oldClassName = _classNameCache; //resize\r\n\r\n          _resizeNone = resize === 'n';\r\n          _resizeBoth = resize === 'b';\r\n          _resizeHorizontal = resize === 'h';\r\n          _resizeVertical = resize === 'v'; //normalizeRTL\r\n\r\n          _normalizeRTLCache = _currentPreparedOptions.normalizeRTL; //ignore overlay scrollbar hiding\r\n\r\n          ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y; //refresh options cache\r\n\r\n          _scrollbarsVisibilityCache = scrollbarsVisibility;\r\n          _scrollbarsAutoHideCache = scrollbarsAutoHide;\r\n          _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\r\n          _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\r\n          _classNameCache = className;\r\n          _resizeCache = resize;\r\n          _paddingAbsoluteCache = paddingAbsolute;\r\n          _clipAlwaysCache = clipAlways;\r\n          _sizeAutoCapableCache = sizeAutoCapable;\r\n          _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\r\n          _autoUpdateCache = autoUpdate;\r\n          _overflowBehaviorCache = extendDeep({}, overflowBehavior);\r\n          _textareaDynWidthCache = textareaDynWidth;\r\n          _textareaDynHeightCache = textareaDynHeight;\r\n          _hasOverflowCache = _hasOverflowCache || {\r\n            x: false,\r\n            y: false\r\n          }; //set correct class name to the host element\r\n\r\n          if (classNameChanged) {\r\n            removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\r\n            addClass(_hostElement, className !== undefined$1 && className !== null && className.length > 0 ? className : _classNameThemeNone);\r\n          } //set correct auto Update\r\n\r\n\r\n          if (autoUpdateChanged) {\r\n            if (autoUpdate === true || autoUpdate === null && _autoUpdateRecommended) {\r\n              disconnectMutationObservers();\r\n              autoUpdateLoop.add(_base);\r\n            } else {\r\n              autoUpdateLoop.remove(_base);\r\n              connectMutationObservers();\r\n            }\r\n          } //activate or deactivate size auto capability\r\n\r\n\r\n          if (sizeAutoCapableChanged) {\r\n            if (sizeAutoCapable) {\r\n              if (_contentGlueElement) {\r\n                _contentGlueElement.show();\r\n              } else {\r\n                _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\r\n\r\n                _paddingElement.before(_contentGlueElement);\r\n              }\r\n\r\n              if (_sizeAutoObserverAdded) {\r\n                _sizeAutoObserverElement.show();\r\n              } else {\r\n                _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\r\n                _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\r\n\r\n                _contentGlueElement.before(_sizeAutoObserverElement);\r\n\r\n                var oldSize = {\r\n                  w: -1,\r\n                  h: -1\r\n                };\r\n                setupResizeObserver(_sizeAutoObserverElement, function () {\r\n                  var newSize = {\r\n                    w: _sizeAutoObserverElementNative[LEXICON.oW],\r\n                    h: _sizeAutoObserverElementNative[LEXICON.oH]\r\n                  };\r\n\r\n                  if (checkCache(newSize, oldSize)) {\r\n                    if (_initialized && _heightAutoCache && newSize.h > 0 || _widthAutoCache && newSize.w > 0) {\r\n                      update();\r\n                    } else if (_initialized && !_heightAutoCache && newSize.h === 0 || !_widthAutoCache && newSize.w === 0) {\r\n                      update();\r\n                    }\r\n                  }\r\n\r\n                  oldSize = newSize;\r\n                });\r\n                _sizeAutoObserverAdded = true; //fix heightAuto detector bug if height is fixed but contentHeight is 0.\r\n                //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\r\n\r\n                if (_cssCalc !== null) _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\r\n              }\r\n            } else {\r\n              if (_sizeAutoObserverAdded) _sizeAutoObserverElement.hide();\r\n              if (_contentGlueElement) _contentGlueElement.hide();\r\n            }\r\n          } //if force, update all resizeObservers too\r\n\r\n\r\n          if (force) {\r\n            _sizeObserverElement.find('*').trigger(_strScroll);\r\n\r\n            if (_sizeAutoObserverAdded) _sizeAutoObserverElement.find('*').trigger(_strScroll);\r\n          } //display hidden:\r\n\r\n\r\n          displayIsHidden = displayIsHidden === undefined$1 ? _hostElement.is(':hidden') : displayIsHidden; //textarea AutoWrapping:\r\n\r\n          var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\r\n          var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache); //detect direction:\r\n\r\n          var cssDirection = _hostElement.css('direction');\r\n\r\n          var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache); //detect box-sizing:\r\n\r\n          var boxSizing = _hostElement.css('box-sizing');\r\n\r\n          var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache); //detect padding:\r\n\r\n          var padding = getTopRightBottomLeftHost(_strPaddingMinus); //width + height auto detecting var:\r\n\r\n          var sizeAutoObserverElementBCRect; //exception occurs in IE8 sometimes (unknown exception)\r\n\r\n          try {\r\n            sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;\r\n          } catch (ex) {\r\n            return;\r\n          }\r\n\r\n          _isRTL = cssDirection === 'rtl';\r\n          _isBorderBox = boxSizing === 'border-box';\r\n          var isRTLLeft = _isRTL ? _strLeft : _strRight;\r\n          var isRTLRight = _isRTL ? _strRight : _strLeft; //detect width auto:\r\n\r\n          var widthAutoResizeDetection = false;\r\n          var widthAutoObserverDetection = _sizeAutoObserverAdded && _hostElement.css(_strFloat) !== 'none'\r\n          /*|| _isTextarea */\r\n          ? MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0 && (!paddingAbsolute ? _hostElementNative[LEXICON.cW] - _paddingX > 0 : true) : false;\r\n\r\n          if (sizeAutoCapable && !widthAutoObserverDetection) {\r\n            var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\r\n\r\n            var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\r\n\r\n            _contentGlueElement.css(_strWidth, _strAuto);\r\n\r\n            var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\r\n\r\n            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\r\n\r\n            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\r\n\r\n            if (!widthAutoResizeDetection) {\r\n              _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\r\n\r\n              tmpNewHostWidth = _hostElementNative[LEXICON.oW];\r\n\r\n              _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\r\n\r\n              widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\r\n            }\r\n          }\r\n\r\n          var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\r\n          var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\r\n          var wasWidthAuto = !widthAuto && _widthAutoCache; //detect height auto:\r\n\r\n          var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0\r\n          /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */\r\n          : false;\r\n          var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\r\n          var wasHeightAuto = !heightAuto && _heightAutoCache; //detect border:\r\n          //we need the border only if border box and auto size\r\n\r\n          var updateBorderX = widthAuto && _isBorderBox || !_isBorderBox;\r\n          var updateBorderY = heightAuto && _isBorderBox || !_isBorderBox;\r\n          var border = getTopRightBottomLeftHost(_strBorderMinus, '-' + _strWidth, !updateBorderX, !updateBorderY); //detect margin:\r\n\r\n          var margin = getTopRightBottomLeftHost(_strMarginMinus); //vars to apply correct css\r\n\r\n          var contentElementCSS = {};\r\n          var contentGlueElementCSS = {}; //funcs\r\n\r\n          var getHostSize = function getHostSize() {\r\n            //has to be clientSize because offsetSize respect borders\r\n            return {\r\n              w: _hostElementNative[LEXICON.cW],\r\n              h: _hostElementNative[LEXICON.cH]\r\n            };\r\n          };\r\n\r\n          var getViewportSize = function getViewportSize() {\r\n            //viewport size is padding container because it never has padding, margin and a border\r\n            //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\r\n            //if this happens add the difference to the viewportSize to compensate the rounding error\r\n            return {\r\n              w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\r\n              h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\r\n            };\r\n          }; //set info for padding\r\n\r\n\r\n          var paddingAbsoluteX = _paddingX = padding.l + padding.r;\r\n          var paddingAbsoluteY = _paddingY = padding.t + padding.b;\r\n          paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\r\n          paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\r\n          padding.c = checkCacheAutoForce(padding, _cssPaddingCache); //set info for border\r\n\r\n          _borderX = border.l + border.r;\r\n          _borderY = border.t + border.b;\r\n          border.c = checkCacheAutoForce(border, _cssBorderCache); //set info for margin\r\n\r\n          _marginX = margin.l + margin.r;\r\n          _marginY = margin.t + margin.b;\r\n          margin.c = checkCacheAutoForce(margin, _cssMarginCache); //refresh cache\r\n\r\n          _textareaAutoWrappingCache = textareaAutoWrapping;\r\n          _cssDirectionCache = cssDirection;\r\n          _cssBoxSizingCache = boxSizing;\r\n          _widthAutoCache = widthAuto;\r\n          _heightAutoCache = heightAuto;\r\n          _cssPaddingCache = padding;\r\n          _cssBorderCache = border;\r\n          _cssMarginCache = margin; //IEFix direction changed\r\n\r\n          if (cssDirectionChanged && _sizeAutoObserverAdded) _sizeAutoObserverElement.css(_strFloat, isRTLRight); //apply padding:\r\n\r\n          if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\r\n            var paddingElementCSS = {};\r\n            var textareaCSS = {};\r\n            var paddingValues = [padding.t, padding.r, padding.b, padding.l];\r\n            setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\r\n\r\n            if (paddingAbsolute) {\r\n              setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);\r\n              setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);\r\n            } else {\r\n              setTopRightBottomLeft(paddingElementCSS, _strEmpty);\r\n              setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);\r\n            }\r\n\r\n            _paddingElement.css(paddingElementCSS);\r\n\r\n            _targetElement.css(textareaCSS);\r\n          } //viewport size is padding container because it never has padding, margin and a border.\r\n\r\n\r\n          _viewportSize = getViewportSize(); //update Textarea\r\n\r\n          var textareaSize = _isTextarea ? textareaUpdate() : false;\r\n\r\n          var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\r\n\r\n          var textareaDynOrigSize = _isTextarea && textareaSize ? {\r\n            w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\r\n            h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\r\n          } : {};\r\n          _textareaSizeCache = textareaSize; //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\r\n\r\n          if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {\r\n            contentElementCSS[_strHeight] = _strAuto;\r\n          } else if (heightAutoChanged || paddingAbsoluteChanged) {\r\n            contentElementCSS[_strHeight] = _strHundredPercent;\r\n          }\r\n\r\n          if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {\r\n            contentElementCSS[_strWidth] = _strAuto;\r\n            contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\r\n          } else if (widthAutoChanged || paddingAbsoluteChanged) {\r\n            contentElementCSS[_strWidth] = _strHundredPercent;\r\n            contentElementCSS[_strFloat] = _strEmpty;\r\n            contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\r\n          }\r\n\r\n          if (widthAuto) {\r\n            //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\r\n            contentGlueElementCSS[_strWidth] = _strAuto;\r\n            contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, 'max-content intrinsic') || _strAuto;\r\n            contentElementCSS[_strFloat] = isRTLRight;\r\n          } else {\r\n            contentGlueElementCSS[_strWidth] = _strEmpty;\r\n          }\r\n\r\n          if (heightAuto) {\r\n            //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\r\n            contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\r\n          } else {\r\n            contentGlueElementCSS[_strHeight] = _strEmpty;\r\n          }\r\n\r\n          if (sizeAutoCapable) _contentGlueElement.css(contentGlueElementCSS);\r\n\r\n          _contentElement.css(contentElementCSS); //CHECKPOINT HERE ~\r\n\r\n\r\n          contentElementCSS = {};\r\n          contentGlueElementCSS = {}; //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\r\n\r\n          if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\r\n            var strOverflow = 'overflow';\r\n            var strOverflowX = strOverflow + '-x';\r\n            var strOverflowY = strOverflow + '-y';\r\n            var strHidden = 'hidden';\r\n            var strVisible = 'visible'; //Reset the viewport (very important for natively overlaid scrollbars and zoom change\r\n            //don't change the overflow prop as it is very expensive and affects performance !A LOT!\r\n\r\n            if (!_nativeScrollbarStyling) {\r\n              var viewportElementResetCSS = {};\r\n              var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y : 0;\r\n              var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x : 0;\r\n              setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\r\n\r\n              _viewportElement.css(viewportElementResetCSS);\r\n            } //measure several sizes:\r\n\r\n\r\n            var contentMeasureElement = getContentMeasureElement(); //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\r\n\r\n            var contentSize = {\r\n              //use clientSize because natively overlaidScrollbars add borders\r\n              w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\r\n              h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\r\n            };\r\n            var scrollSize = {\r\n              w: contentMeasureElement[LEXICON.sW],\r\n              h: contentMeasureElement[LEXICON.sH]\r\n            }; //apply the correct viewport style and measure viewport size\r\n\r\n            if (!_nativeScrollbarStyling) {\r\n              viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\r\n              viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\r\n\r\n              _viewportElement.css(viewportElementResetCSS);\r\n            }\r\n\r\n            _viewportSize = getViewportSize(); //measure and correct several sizes\r\n\r\n            var hostSize = getHostSize();\r\n            var hostAbsoluteRectSize = {\r\n              w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),\r\n              h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)\r\n            };\r\n            var contentGlueSize = {\r\n              //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\r\n              //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\r\n              w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),\r\n              h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)\r\n            };\r\n            contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\r\n            _contentGlueSizeCache = contentGlueSize; //apply correct contentGlue size\r\n\r\n            if (sizeAutoCapable) {\r\n              //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\r\n              if (contentGlueSize.c || heightAuto || widthAuto) {\r\n                contentGlueElementCSS[_strWidth] = contentGlueSize.w;\r\n                contentGlueElementCSS[_strHeight] = contentGlueSize.h; //textarea-sizes are already calculated correctly at this point\r\n\r\n                if (!_isTextarea) {\r\n                  contentSize = {\r\n                    //use clientSize because natively overlaidScrollbars add borders\r\n                    w: contentMeasureElement[LEXICON.cW],\r\n                    h: contentMeasureElement[LEXICON.cH]\r\n                  };\r\n                }\r\n              }\r\n\r\n              var textareaCoverCSS = {};\r\n\r\n              var setContentGlueElementCSSfunction = function setContentGlueElementCSSfunction(horizontal) {\r\n                var scrollbarVars = getScrollbarVars(horizontal);\r\n                var wh = scrollbarVars._w_h;\r\n                var strWH = scrollbarVars._width_height;\r\n                var autoSize = horizontal ? widthAuto : heightAuto;\r\n                var borderSize = horizontal ? _borderX : _borderY;\r\n                var paddingSize = horizontal ? _paddingX : _paddingY;\r\n                var marginSize = horizontal ? _marginX : _marginY;\r\n                var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize); //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\r\n\r\n                if (!autoSize || !autoSize && border.c) contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1; //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\r\n\r\n                if (autoSize && contentSize[wh] < viewportSize && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\r\n                  if (_isTextarea) textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\r\n                  contentGlueElementCSS[strWH] -= 1;\r\n                } //make sure content glue size is at least 1\r\n\r\n\r\n                if (contentSize[wh] > 0) contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\r\n              };\r\n\r\n              setContentGlueElementCSSfunction(true);\r\n              setContentGlueElementCSSfunction(false);\r\n              if (_isTextarea) _textareaCoverElement.css(textareaCoverCSS);\r\n\r\n              _contentGlueElement.css(contentGlueElementCSS);\r\n            }\r\n\r\n            if (widthAuto) contentElementCSS[_strWidth] = _strHundredPercent;\r\n            if (widthAuto && !_isBorderBox && !_mutationObserversConnected) contentElementCSS[_strFloat] = 'none'; //apply and reset content style\r\n\r\n            _contentElement.css(contentElementCSS);\r\n\r\n            contentElementCSS = {}; //measure again, but this time all correct sizes:\r\n\r\n            var contentScrollSize = {\r\n              w: contentMeasureElement[LEXICON.sW],\r\n              h: contentMeasureElement[LEXICON.sH]\r\n            };\r\n            contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\r\n            _contentScrollSizeCache = contentScrollSize; //refresh viewport size after correct measuring\r\n\r\n            _viewportSize = getViewportSize();\r\n            hostSize = getHostSize();\r\n            hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\r\n            _hostSizeCache = hostSize;\r\n            var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\r\n            var previousOverflowAmount = _overflowAmountCache;\r\n            var overflowBehaviorIsVS = {};\r\n            var overflowBehaviorIsVH = {};\r\n            var overflowBehaviorIsS = {};\r\n            var overflowAmount = {};\r\n            var hasOverflow = {};\r\n            var hideOverflow = {};\r\n            var canScroll = {};\r\n\r\n            var viewportRect = _paddingElementNative[LEXICON.bCR]();\r\n\r\n            var setOverflowVariables = function setOverflowVariables(horizontal) {\r\n              var scrollbarVars = getScrollbarVars(horizontal);\r\n              var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n              var xyI = scrollbarVarsInverted._x_y;\r\n              var xy = scrollbarVars._x_y;\r\n              var wh = scrollbarVars._w_h;\r\n              var widthHeight = scrollbarVars._width_height;\r\n              var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\r\n              var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\r\n              var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\r\n              overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\r\n              overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\r\n              overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\r\n              overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\r\n              overflowAmount[xy] *= hideOverflowForceTextarea || checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1 ? 0 : 1;\r\n              hasOverflow[xy] = overflowAmount[xy] > 0; //hideOverflow:\r\n              //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\r\n              //xs || ys : true === overflow is hidden by \"overflow: scroll\"\r\n\r\n              hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI] : hasOverflow[xy];\r\n              hideOverflow[xy + 's'] = hideOverflow[xy] ? overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy] : false;\r\n              canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\r\n            };\r\n\r\n            setOverflowVariables(true);\r\n            setOverflowVariables(false);\r\n            overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\r\n            _overflowAmountCache = overflowAmount;\r\n            hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\r\n            _hasOverflowCache = hasOverflow;\r\n            hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\r\n            _hideOverflowCache = hideOverflow; //if native scrollbar is overlay at x OR y axis, prepare DOM\r\n\r\n            if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\r\n              var borderDesign = 'px solid transparent';\r\n              var contentArrangeElementCSS = {};\r\n              var arrangeContent = {};\r\n              var arrangeChanged = force;\r\n              var setContentElementCSS;\r\n\r\n              if (hasOverflow.x || hasOverflow.y) {\r\n                arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\r\n                arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\r\n                arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\r\n                _arrangeContentSizeCache = arrangeContent;\r\n              }\r\n\r\n              if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\r\n                contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\r\n\r\n                setContentElementCSS = function setContentElementCSS(horizontal) {\r\n                  var scrollbarVars = getScrollbarVars(horizontal);\r\n                  var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                  var xy = scrollbarVars._x_y;\r\n                  var strDirection = horizontal ? _strBottom : isRTLLeft;\r\n                  var invertedAutoSize = horizontal ? heightAuto : widthAuto;\r\n\r\n                  if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\r\n                    contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy] : _strEmpty;\r\n                    contentElementCSS[_strBorderMinus + strDirection] = (horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding ? _overlayScrollbarDummySize[xy] + borderDesign : _strEmpty;\r\n                  } else {\r\n                    arrangeContent[scrollbarVarsInverted._w_h] = contentElementCSS[_strMarginMinus + strDirection] = contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\r\n                    arrangeChanged = true;\r\n                  }\r\n                };\r\n\r\n                if (_nativeScrollbarStyling) {\r\n                  addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding);\r\n                } else {\r\n                  setContentElementCSS(true);\r\n                  setContentElementCSS(false);\r\n                }\r\n              }\r\n\r\n              if (ignoreOverlayScrollbarHiding) {\r\n                arrangeContent.w = arrangeContent.h = _strEmpty;\r\n                arrangeChanged = true;\r\n              }\r\n\r\n              if (arrangeChanged && !_nativeScrollbarStyling) {\r\n                contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\r\n                contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\r\n\r\n                if (!_contentArrangeElement) {\r\n                  _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\r\n\r\n                  _viewportElement.prepend(_contentArrangeElement);\r\n                }\r\n\r\n                _contentArrangeElement.css(contentArrangeElementCSS);\r\n              }\r\n\r\n              _contentElement.css(contentElementCSS);\r\n            }\r\n\r\n            var viewportElementCSS = {};\r\n            var paddingElementCSS = {};\r\n            var setViewportCSS;\r\n\r\n            if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\r\n              viewportElementCSS[isRTLRight] = _strEmpty;\r\n\r\n              setViewportCSS = function setViewportCSS(horizontal) {\r\n                var scrollbarVars = getScrollbarVars(horizontal);\r\n                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                var xy = scrollbarVars._x_y;\r\n                var XY = scrollbarVars._X_Y;\r\n                var strDirection = horizontal ? _strBottom : isRTLLeft;\r\n\r\n                var reset = function reset() {\r\n                  viewportElementCSS[strDirection] = _strEmpty;\r\n                  _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\r\n                };\r\n\r\n                if (hasOverflow[xy] && hideOverflow[xy + 's']) {\r\n                  viewportElementCSS[strOverflow + XY] = _strScroll;\r\n\r\n                  if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\r\n                    reset();\r\n                  } else {\r\n                    viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\r\n                    _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\r\n                  }\r\n                } else {\r\n                  viewportElementCSS[strOverflow + XY] = _strEmpty;\r\n                  reset();\r\n                }\r\n              };\r\n\r\n              setViewportCSS(true);\r\n              setViewportCSS(false); // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \r\n              // make viewport element greater in size (Firefox hide Scrollbars fix)\r\n              // because firefox starts hiding scrollbars on too small elements\r\n              // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\r\n              // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\r\n\r\n              if (!_nativeScrollbarStyling && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y) && (hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x || hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y)) {\r\n                viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\r\n                viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\r\n                viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\r\n                viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\r\n              } else {\r\n                viewportElementCSS[_strPaddingMinus + _strTop] = viewportElementCSS[_strMarginMinus + _strTop] = viewportElementCSS[_strPaddingMinus + isRTLRight] = viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\r\n              }\r\n\r\n              viewportElementCSS[_strPaddingMinus + isRTLLeft] = viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty; //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\r\n\r\n              if (hasOverflow.x && hideOverflow.x || hasOverflow.y && hideOverflow.y || hideOverflowForceTextarea) {\r\n                //only hide if is Textarea\r\n                if (_isTextarea && hideOverflowForceTextarea) {\r\n                  paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = strHidden;\r\n                }\r\n              } else {\r\n                if (!clipAlways || overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y) {\r\n                  //only un-hide if Textarea\r\n                  if (_isTextarea) {\r\n                    paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = _strEmpty;\r\n                  }\r\n\r\n                  viewportElementCSS[strOverflowX] = viewportElementCSS[strOverflowY] = strVisible;\r\n                }\r\n              }\r\n\r\n              _paddingElement.css(paddingElementCSS);\r\n\r\n              _viewportElement.css(viewportElementCSS);\r\n\r\n              viewportElementCSS = {}; //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\r\n\r\n              if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\r\n                var elementStyle = _contentElementNative[LEXICON.s];\r\n                elementStyle.webkitTransform = 'scale(1)';\r\n                elementStyle.display = 'run-in';\r\n                elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\r\n\r\n                elementStyle.webkitTransform = _strEmpty;\r\n              }\r\n              /*\r\n              //force hard redraw in webkit if native overlaid scrollbars shall appear\r\n              if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\r\n                  _hostElement.hide();\r\n                  var dump = _hostElementNative[LEXICON.oH];\r\n                  _hostElement.show();\r\n              }\r\n              */\r\n\r\n            } //change to direction RTL and width auto Bugfix in Webkit\r\n            //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\r\n\r\n\r\n            contentElementCSS = {};\r\n\r\n            if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\r\n              if (_isRTL && widthAuto) {\r\n                var floatTmp = _contentElement.css(_strFloat);\r\n\r\n                var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\r\n\r\n                _contentElement.css(_strFloat, floatTmp);\r\n\r\n                var posLeftWithFloat = MATH.round(_contentElement.position().left);\r\n                if (posLeftWithoutFloat !== posLeftWithFloat) contentElementCSS[_strLeft] = posLeftWithoutFloat;\r\n              } else {\r\n                contentElementCSS[_strLeft] = _strEmpty;\r\n              }\r\n            }\r\n\r\n            _contentElement.css(contentElementCSS); //handle scroll position\r\n\r\n\r\n            if (_isTextarea && contentSizeChanged) {\r\n              var textareaInfo = getTextareaInfo();\r\n\r\n              if (textareaInfo) {\r\n                var textareaRowsChanged = _textareaInfoCache === undefined$1 ? true : textareaInfo._rows !== _textareaInfoCache._rows;\r\n                var cursorRow = textareaInfo._cursorRow;\r\n                var cursorCol = textareaInfo._cursorColumn;\r\n                var widestRow = textareaInfo._widestRow;\r\n                var lastRow = textareaInfo._rows;\r\n                var lastCol = textareaInfo._columns;\r\n                var cursorPos = textareaInfo._cursorPosition;\r\n                var cursorMax = textareaInfo._cursorMax;\r\n                var cursorIsLastPosition = cursorPos >= cursorMax && _textareaHasFocus;\r\n                var textareaScrollAmount = {\r\n                  x: !textareaAutoWrapping && cursorCol === lastCol && cursorRow === widestRow ? _overflowAmountCache.x : -1,\r\n                  y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? currScroll.y === previousOverflowAmount.y : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\r\n                };\r\n                currScroll.x = textareaScrollAmount.x > -1 ? _isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\r\n\r\n                currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\r\n              }\r\n\r\n              _textareaInfoCache = textareaInfo;\r\n            }\r\n\r\n            if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache) currScroll.x += _contentBorderSize.w || 0;\r\n            if (widthAuto) _hostElement[_strScrollLeft](0);\r\n            if (heightAuto) _hostElement[_strScrollTop](0);\r\n\r\n            _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y); //scrollbars management:\r\n\r\n\r\n            var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\r\n            var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\r\n            var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\r\n\r\n            var refreshScrollbarsVisibility = function refreshScrollbarsVisibility(showX, showY) {\r\n              showY = showY === undefined$1 ? showX : showY;\r\n              refreshScrollbarAppearance(true, showX, canScroll.x);\r\n              refreshScrollbarAppearance(false, showY, canScroll.y);\r\n            }; //manage class name which indicates scrollable overflow\r\n\r\n\r\n            addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);\r\n            addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);\r\n            addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y); //add or remove rtl class name for styling purposes except when its body, then the scrollbar stays\r\n\r\n            if (cssDirectionChanged && !_isBody) {\r\n              addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);\r\n            } //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\r\n\r\n\r\n            if (_isBody) addClass(_hostElement, _classNameHostResizeDisabled);\r\n\r\n            if (resizeChanged) {\r\n              addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);\r\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);\r\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);\r\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);\r\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);\r\n            } //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\r\n\r\n\r\n            if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\r\n              if (ignoreOverlayScrollbarHiding) {\r\n                if (ignoreOverlayScrollbarHidingChanged) {\r\n                  removeClass(_hostElement, _classNameHostScrolling);\r\n\r\n                  if (ignoreOverlayScrollbarHiding) {\r\n                    refreshScrollbarsVisibility(false);\r\n                  }\r\n                }\r\n              } else if (scrollbarsVisibilityAuto) {\r\n                refreshScrollbarsVisibility(canScroll.x, canScroll.y);\r\n              } else if (scrollbarsVisibilityVisible) {\r\n                refreshScrollbarsVisibility(true);\r\n              } else if (scrollbarsVisibilityHidden) {\r\n                refreshScrollbarsVisibility(false);\r\n              }\r\n            } //manage the scrollbars auto hide feature (auto hide them after specific actions)\r\n\r\n\r\n            if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\r\n              setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);\r\n              refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);\r\n            } //manage scrollbars handle length & offset - don't remove!\r\n\r\n\r\n            if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\r\n              refreshScrollbarHandleLength(true);\r\n              refreshScrollbarHandleOffset(true);\r\n              refreshScrollbarHandleLength(false);\r\n              refreshScrollbarHandleOffset(false);\r\n            } //manage interactivity\r\n\r\n\r\n            if (scrollbarsClickScrollingChanged) refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\r\n            if (scrollbarsDragScrollingChanged) refreshScrollbarsInteractive(false, scrollbarsDragScrolling); //callbacks:\r\n\r\n            dispatchCallback('onDirectionChanged', {\r\n              isRTL: _isRTL,\r\n              dir: cssDirection\r\n            }, cssDirectionChanged);\r\n            dispatchCallback('onHostSizeChanged', {\r\n              width: _hostSizeCache.w,\r\n              height: _hostSizeCache.h\r\n            }, hostSizeChanged);\r\n            dispatchCallback('onContentSizeChanged', {\r\n              width: _contentScrollSizeCache.w,\r\n              height: _contentScrollSizeCache.h\r\n            }, contentSizeChanged);\r\n            dispatchCallback('onOverflowChanged', {\r\n              x: hasOverflow.x,\r\n              y: hasOverflow.y,\r\n              xScrollable: hideOverflow.xs,\r\n              yScrollable: hideOverflow.ys,\r\n              clipped: hideOverflow.x || hideOverflow.y\r\n            }, hasOverflow.c || hideOverflow.c);\r\n            dispatchCallback('onOverflowAmountChanged', {\r\n              x: overflowAmount.x,\r\n              y: overflowAmount.y\r\n            }, overflowAmount.c);\r\n          } //fix body min size\r\n\r\n\r\n          if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\r\n            //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\r\n            if (!_bodyMinSizeCache.f) bodyMinSizeChanged();\r\n            if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x) _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\r\n            if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y) _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\r\n            _bodyMinSizeCache.c = false;\r\n          }\r\n\r\n          if (_initialized && changedOptions.updateOnLoad) {\r\n            updateElementsOnLoad();\r\n          } //freezeResizeObserver(_sizeObserverElement, false);\r\n          //freezeResizeObserver(_sizeAutoObserverElement, false);\r\n\r\n\r\n          dispatchCallback('onUpdated', {\r\n            forced: force\r\n          });\r\n        }\r\n        /**\r\n         * Updates the found elements of which the load event shall be handled.\r\n         */\r\n\r\n\r\n        function updateElementsOnLoad() {\r\n          if (!_isTextarea) {\r\n            eachUpdateOnLoad(function (i, updateOnLoadSelector) {\r\n              _contentElement.find(updateOnLoadSelector).each(function (i, el) {\r\n                // if element doesn't have a updateOnLoadCallback applied\r\n                if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {\r\n                  _updateOnLoadElms.push(el);\r\n\r\n                  FRAMEWORK(el).off(_updateOnLoadEventName, updateOnLoadCallback).on(_updateOnLoadEventName, updateOnLoadCallback);\r\n                }\r\n              });\r\n            });\r\n          }\r\n        } //==== Options ====//\r\n\r\n        /**\r\n         * Sets new options but doesn't call the update method.\r\n         * @param newOptions The object which contains the new options.\r\n         * @returns {*} A object which contains the changed options.\r\n         */\r\n\r\n\r\n        function setOptions(newOptions) {\r\n          var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions);\r\n\r\n          _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\r\n          _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\r\n          return validatedOpts._prepared;\r\n        } //==== Structure ====//\r\n\r\n        /**\r\n         * Builds or destroys the wrapper and helper DOM elements.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\r\n\r\n        /**\r\n         * Builds or destroys the wrapper and helper DOM elements.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\r\n\r\n\r\n        function setupStructureDOM(destroy) {\r\n          var strParent = 'parent';\r\n          var classNameResizeObserverHost = 'os-resize-observer-host';\r\n          var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;\r\n          var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;\r\n          var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\r\n          var adoptAttrsMap = {};\r\n\r\n          var applyAdoptedAttrs = function applyAdoptedAttrs() {\r\n            var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\r\n            each(adoptAttrsMap, function (key, value) {\r\n              if (type(value) == TYPES.s) {\r\n                if (key == LEXICON.c) applyAdoptedAttrsElm.addClass(value);else applyAdoptedAttrsElm.attr(key, value);\r\n              }\r\n            });\r\n          };\r\n\r\n          var hostElementClassNames = [_classNameHostElement, _classNameHostElementForeign, _classNameHostTextareaElement, _classNameHostResizeDisabled, _classNameHostRTL, _classNameHostScrollbarHorizontalHidden, _classNameHostScrollbarVerticalHidden, _classNameHostTransition, _classNameHostScrolling, _classNameHostOverflow, _classNameHostOverflowX, _classNameHostOverflowY, _classNameThemeNone, _classNameTextareaElement, _classNameTextInherit, _classNameCache].join(_strSpace);\r\n          var hostElementCSS = {}; //get host element as first element, because that's the most upper element and required for the other elements\r\n\r\n          _hostElement = _hostElement || (_isTextarea ? _domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement)) : _targetElement);\r\n          _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);\r\n          _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);\r\n          _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);\r\n          _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);\r\n          _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined$1); //add this class to workaround class changing issues with UI frameworks especially Vue\r\n\r\n          if (_domExists) addClass(_hostElement, _classNameHostElementForeign); //on destroy, remove all generated class names from the host element before collecting the adopted attributes \r\n          //to prevent adopting generated class names\r\n\r\n          if (destroy) removeClass(_hostElement, hostElementClassNames); //collect all adopted attributes\r\n\r\n          adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;\r\n\r\n          if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {\r\n            each(adoptAttrs, function (i, v) {\r\n              if (type(v) == TYPES.s) {\r\n                adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\r\n              }\r\n            });\r\n          }\r\n\r\n          if (!destroy) {\r\n            if (_isTextarea) {\r\n              if (!_currentPreparedOptions.sizeAutoCapable) {\r\n                hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\r\n                hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\r\n              }\r\n\r\n              if (!_domExists) _targetElement.addClass(_classNameTextInherit).wrap(_hostElement); //jQuery clones elements in wrap functions, so we have to select them again\r\n\r\n              _hostElement = _targetElement[strParent]().css(hostElementCSS);\r\n            }\r\n\r\n            if (!_domExists) {\r\n              //add the correct class to the target element\r\n              addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement); //wrap the content into the generated elements to create the required DOM\r\n\r\n              _hostElement.wrapInner(_contentElement).wrapInner(_viewportElement).wrapInner(_paddingElement).prepend(_sizeObserverElement); //jQuery clones elements in wrap functions, so we have to select them again\r\n\r\n\r\n              _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\r\n              _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\r\n              _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\r\n\r\n              if (_isTextarea) {\r\n                _contentElement.prepend(_textareaCoverElement);\r\n\r\n                applyAdoptedAttrs();\r\n              }\r\n            }\r\n\r\n            if (_nativeScrollbarStyling) addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\r\n            if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y) addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\r\n            if (_isBody) addClass(_htmlElement, _classNameHTMLElement);\r\n            _sizeObserverElementNative = _sizeObserverElement[0];\r\n            _hostElementNative = _hostElement[0];\r\n            _paddingElementNative = _paddingElement[0];\r\n            _viewportElementNative = _viewportElement[0];\r\n            _contentElementNative = _contentElement[0];\r\n            updateViewportAttrsFromTarget();\r\n          } else {\r\n            if (_domExists && _initialized) {\r\n              //clear size observer\r\n              _sizeObserverElement.children().remove(); //remove the style property and classes from already generated elements\r\n\r\n\r\n              each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function (i, elm) {\r\n                if (elm) {\r\n                  removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                }\r\n              }); //add classes to the host element which was removed previously to match the expected DOM\r\n\r\n              addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);\r\n            } else {\r\n              //remove size observer\r\n              remove(_sizeObserverElement); //unwrap the content to restore DOM\r\n\r\n              _contentElement.contents().unwrap().unwrap().unwrap();\r\n\r\n              if (_isTextarea) {\r\n                _targetElement.unwrap();\r\n\r\n                remove(_hostElement);\r\n                remove(_textareaCoverElement);\r\n                applyAdoptedAttrs();\r\n              }\r\n            }\r\n\r\n            if (_isTextarea) _targetElement.removeAttr(LEXICON.s);\r\n            if (_isBody) removeClass(_htmlElement, _classNameHTMLElement);\r\n          }\r\n        }\r\n        /**\r\n         * Adds or removes all wrapper elements interactivity events.\r\n         * @param destroy Indicates whether the Events shall be added or removed.\r\n         */\r\n\r\n\r\n        function setupStructureEvents() {\r\n          var textareaKeyDownRestrictedKeyCodes = [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, //F1 to F12\r\n          33, 34, //page up, page down\r\n          37, 38, 39, 40, //left, up, right, down arrows\r\n          16, 17, 18, 19, 20, 144 //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\r\n          ];\r\n          var textareaKeyDownKeyCodesList = [];\r\n          var textareaUpdateIntervalID;\r\n          var scrollStopTimeoutId;\r\n          var scrollStopDelay = 175;\r\n          var strFocus = 'focus';\r\n\r\n          function updateTextarea(doClearInterval) {\r\n            textareaUpdate();\r\n\r\n            _base.update(_strAuto);\r\n\r\n            if (doClearInterval && _autoUpdateRecommended) clearInterval(textareaUpdateIntervalID);\r\n          }\r\n\r\n          function textareaOnScroll(event) {\r\n            _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\r\n\r\n            _targetElement[_strScrollTop](0);\r\n\r\n            COMPATIBILITY.prvD(event);\r\n            COMPATIBILITY.stpP(event);\r\n            return false;\r\n          }\r\n\r\n          function textareaOnDrop(event) {\r\n            setTimeout(function () {\r\n              if (!_destroyed) updateTextarea();\r\n            }, 50);\r\n          }\r\n\r\n          function textareaOnFocus() {\r\n            _textareaHasFocus = true;\r\n            addClass(_hostElement, strFocus);\r\n          }\r\n\r\n          function textareaOnFocusout() {\r\n            _textareaHasFocus = false;\r\n            textareaKeyDownKeyCodesList = [];\r\n            removeClass(_hostElement, strFocus);\r\n            updateTextarea(true);\r\n          }\r\n\r\n          function textareaOnKeyDown(event) {\r\n            var keyCode = event.keyCode;\r\n\r\n            if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\r\n              if (!textareaKeyDownKeyCodesList[LEXICON.l]) {\r\n                updateTextarea();\r\n                textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\r\n              }\r\n\r\n              if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0) textareaKeyDownKeyCodesList.push(keyCode);\r\n            }\r\n          }\r\n\r\n          function textareaOnKeyUp(event) {\r\n            var keyCode = event.keyCode;\r\n            var index = inArray(keyCode, textareaKeyDownKeyCodesList);\r\n\r\n            if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\r\n              if (index > -1) textareaKeyDownKeyCodesList.splice(index, 1);\r\n              if (!textareaKeyDownKeyCodesList[LEXICON.l]) updateTextarea(true);\r\n            }\r\n          }\r\n\r\n          function contentOnTransitionEnd(event) {\r\n            if (_autoUpdateCache === true) return;\r\n            event = event.originalEvent || event;\r\n            if (isSizeAffectingCSSProperty(event.propertyName)) _base.update(_strAuto);\r\n          }\r\n\r\n          function viewportOnScroll(event) {\r\n            if (!_sleeping) {\r\n              if (scrollStopTimeoutId !== undefined$1) clearTimeout(scrollStopTimeoutId);else {\r\n                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\r\n                if (!nativeOverlayScrollbarsAreActive()) addClass(_hostElement, _classNameHostScrolling);\r\n                dispatchCallback('onScrollStart', event);\r\n              } //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\r\n              //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\r\n              //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\r\n\r\n              if (!_scrollbarsHandlesDefineScrollPos) {\r\n                refreshScrollbarHandleOffset(true);\r\n                refreshScrollbarHandleOffset(false);\r\n              }\r\n\r\n              dispatchCallback('onScroll', event);\r\n              scrollStopTimeoutId = setTimeout(function () {\r\n                if (!_destroyed) {\r\n                  //OnScrollStop:\r\n                  clearTimeout(scrollStopTimeoutId);\r\n                  scrollStopTimeoutId = undefined$1;\r\n                  if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\r\n                  if (!nativeOverlayScrollbarsAreActive()) removeClass(_hostElement, _classNameHostScrolling);\r\n                  dispatchCallback('onScrollStop', event);\r\n                }\r\n              }, scrollStopDelay);\r\n            }\r\n          }\r\n\r\n          if (_isTextarea) {\r\n            if (_msieVersion > 9 || !_autoUpdateRecommended) {\r\n              addDestroyEventListener(_targetElement, 'input', updateTextarea);\r\n            } else {\r\n              addDestroyEventListener(_targetElement, [_strKeyDownEvent, _strKeyUpEvent], [textareaOnKeyDown, textareaOnKeyUp]);\r\n            }\r\n\r\n            addDestroyEventListener(_targetElement, [_strScroll, 'drop', strFocus, strFocus + 'out'], [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]);\r\n          } else {\r\n            addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);\r\n          }\r\n\r\n          addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);\r\n        } //==== Scrollbars ====//\r\n\r\n        /**\r\n         * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\r\n\r\n\r\n        function setupScrollbarsDOM(destroy) {\r\n          var selectOrGenerateScrollbarDOM = function selectOrGenerateScrollbarDOM(isHorizontal) {\r\n            var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;\r\n            var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);\r\n            var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);\r\n            var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);\r\n\r\n            if (!_domExists && !destroy) {\r\n              scrollbar.append(track);\r\n              track.append(handle);\r\n            }\r\n\r\n            return {\r\n              _scrollbar: scrollbar,\r\n              _track: track,\r\n              _handle: handle\r\n            };\r\n          };\r\n\r\n          function resetScrollbarDOM(isHorizontal) {\r\n            var scrollbarVars = getScrollbarVars(isHorizontal);\r\n            var scrollbar = scrollbarVars._scrollbar;\r\n            var track = scrollbarVars._track;\r\n            var handle = scrollbarVars._handle;\r\n\r\n            if (_domExists && _initialized) {\r\n              each([scrollbar, track, handle], function (i, elm) {\r\n                removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n              });\r\n            } else {\r\n              remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);\r\n            }\r\n          }\r\n\r\n          var horizontalElements;\r\n          var verticalElements;\r\n\r\n          if (!destroy) {\r\n            horizontalElements = selectOrGenerateScrollbarDOM(true);\r\n            verticalElements = selectOrGenerateScrollbarDOM();\r\n            _scrollbarHorizontalElement = horizontalElements._scrollbar;\r\n            _scrollbarHorizontalTrackElement = horizontalElements._track;\r\n            _scrollbarHorizontalHandleElement = horizontalElements._handle;\r\n            _scrollbarVerticalElement = verticalElements._scrollbar;\r\n            _scrollbarVerticalTrackElement = verticalElements._track;\r\n            _scrollbarVerticalHandleElement = verticalElements._handle;\r\n\r\n            if (!_domExists) {\r\n              _paddingElement.after(_scrollbarVerticalElement);\r\n\r\n              _paddingElement.after(_scrollbarHorizontalElement);\r\n            }\r\n          } else {\r\n            resetScrollbarDOM(true);\r\n            resetScrollbarDOM();\r\n          }\r\n        }\r\n        /**\r\n         * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\r\n         * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\r\n         */\r\n\r\n\r\n        function setupScrollbarEvents(isHorizontal) {\r\n          var scrollbarVars = getScrollbarVars(isHorizontal);\r\n          var scrollbarVarsInfo = scrollbarVars._info;\r\n          var insideIFrame = _windowElementNative.top !== _windowElementNative;\r\n          var xy = scrollbarVars._x_y;\r\n          var XY = scrollbarVars._X_Y;\r\n          var scroll = _strScroll + scrollbarVars._Left_Top;\r\n          var strActive = 'active';\r\n          var strSnapHandle = 'snapHandle';\r\n          var strClickEvent = 'click';\r\n          var scrollDurationFactor = 1;\r\n          var increaseDecreaseScrollAmountKeyCodes = [16, 17]; //shift, ctrl\r\n\r\n          var trackTimeout;\r\n          var mouseDownScroll;\r\n          var mouseDownOffset;\r\n          var mouseDownInvertedScale;\r\n\r\n          function getPointerPosition(event) {\r\n            return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\r\n          }\r\n\r\n          function getPreparedScrollbarsOption(name) {\r\n            return _currentPreparedOptions.scrollbars[name];\r\n          }\r\n\r\n          function increaseTrackScrollAmount() {\r\n            scrollDurationFactor = 0.5;\r\n          }\r\n\r\n          function decreaseTrackScrollAmount() {\r\n            scrollDurationFactor = 1;\r\n          }\r\n\r\n          function stopClickEventPropagation(event) {\r\n            COMPATIBILITY.stpP(event);\r\n          }\r\n\r\n          function documentKeyDown(event) {\r\n            if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) increaseTrackScrollAmount();\r\n          }\r\n\r\n          function documentKeyUp(event) {\r\n            if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) decreaseTrackScrollAmount();\r\n          }\r\n\r\n          function onMouseTouchDownContinue(event) {\r\n            var originalEvent = event.originalEvent || event;\r\n            var isTouchEvent = originalEvent.touches !== undefined$1;\r\n            return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || isTouchEvent && !getPreparedScrollbarsOption('touchSupport') ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\r\n          }\r\n\r\n          function documentDragMove(event) {\r\n            if (onMouseTouchDownContinue(event)) {\r\n              var trackLength = scrollbarVarsInfo._trackLength;\r\n              var handleLength = scrollbarVarsInfo._handleLength;\r\n              var scrollRange = scrollbarVarsInfo._maxScroll;\r\n              var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\r\n              var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\r\n              var scrollDelta = scrollRange * scrollDeltaPercent;\r\n              scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\r\n              if (_isRTL && isHorizontal && !_rtlScrollBehavior.i) scrollDelta *= -1;\r\n\r\n              _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\r\n\r\n              if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\r\n              if (!_supportPassiveEvents) COMPATIBILITY.prvD(event);\r\n            } else documentMouseTouchUp(event);\r\n          }\r\n\r\n          function documentMouseTouchUp(event) {\r\n            event = event || event.originalEvent;\r\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart], true);\r\n            COMPATIBILITY.rAF()(function () {\r\n              setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, {\r\n                _capture: true\r\n              });\r\n            });\r\n            if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, true);\r\n            _scrollbarsHandlesDefineScrollPos = false;\r\n            removeClass(_bodyElement, _classNameDragging);\r\n            removeClass(scrollbarVars._handle, strActive);\r\n            removeClass(scrollbarVars._track, strActive);\r\n            removeClass(scrollbarVars._scrollbar, strActive);\r\n            mouseDownScroll = undefined$1;\r\n            mouseDownOffset = undefined$1;\r\n            mouseDownInvertedScale = 1;\r\n            decreaseTrackScrollAmount();\r\n\r\n            if (trackTimeout !== undefined$1) {\r\n              _base.scrollStop();\r\n\r\n              clearTimeout(trackTimeout);\r\n              trackTimeout = undefined$1;\r\n            }\r\n\r\n            if (event) {\r\n              var rect = _hostElementNative[LEXICON.bCR]();\r\n\r\n              var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom; //if mouse is outside host element\r\n\r\n              if (!mouseInsideHost) hostOnMouseLeave();\r\n              if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\r\n            }\r\n          }\r\n\r\n          function onHandleMouseTouchDown(event) {\r\n            if (onMouseTouchDownContinue(event)) onHandleMouseTouchDownAction(event);\r\n          }\r\n\r\n          function onHandleMouseTouchDownAction(event) {\r\n            mouseDownScroll = _viewportElement[scroll]();\r\n            mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\r\n            if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL) mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\r\n            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\r\n            mouseDownOffset = getPointerPosition(event);\r\n            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\r\n            addClass(_bodyElement, _classNameDragging);\r\n            addClass(scrollbarVars._handle, strActive);\r\n            addClass(scrollbarVars._scrollbar, strActive);\r\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentOnSelectStart]);\r\n            COMPATIBILITY.rAF()(function () {\r\n              setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, {\r\n                _capture: true\r\n              });\r\n            });\r\n            if (_msieVersion || !_documentMixed) COMPATIBILITY.prvD(event);\r\n            COMPATIBILITY.stpP(event);\r\n          }\r\n\r\n          function onTrackMouseTouchDown(event) {\r\n            if (onMouseTouchDownContinue(event)) {\r\n              var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);\r\n              var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);\r\n              var scrollBaseDuration = 270 * handleToViewportRatio;\r\n              var scrollFirstIterationDelay = 400 * handleToViewportRatio;\r\n\r\n              var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\r\n\r\n              var ctrlKey = event.ctrlKey;\r\n              var instantScroll = event.shiftKey;\r\n              var instantScrollTransition = instantScroll && ctrlKey;\r\n              var isFirstIteration = true;\r\n              var easing = 'linear';\r\n              var decreaseScroll;\r\n              var finishedCondition;\r\n\r\n              var scrollActionFinsished = function scrollActionFinsished(transition) {\r\n                if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, transition);\r\n              };\r\n\r\n              var scrollActionInstantFinished = function scrollActionInstantFinished() {\r\n                scrollActionFinsished();\r\n                onHandleMouseTouchDownAction(event);\r\n              };\r\n\r\n              var scrollAction = function scrollAction() {\r\n                if (!_destroyed) {\r\n                  var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\r\n                  var handleOffset = scrollbarVarsInfo._handleOffset;\r\n                  var trackLength = scrollbarVarsInfo._trackLength;\r\n                  var handleLength = scrollbarVarsInfo._handleLength;\r\n                  var scrollRange = scrollbarVarsInfo._maxScroll;\r\n                  var currScroll = scrollbarVarsInfo._currentScroll;\r\n                  var scrollDuration = scrollBaseDuration * scrollDurationFactor;\r\n                  var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;\r\n                  var instantScrollPosition = scrollRange * ((mouseOffset - handleLength / 2) / (trackLength - handleLength)); // 100% * positionPercent\r\n\r\n                  var rtlIsNormal = _isRTL && isHorizontal && (!_rtlScrollBehavior.i && !_rtlScrollBehavior.n || _normalizeRTLCache);\r\n                  var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\r\n                  var scrollObj = {};\r\n                  var animationObj = {\r\n                    easing: easing,\r\n                    step: function step(now) {\r\n                      if (_scrollbarsHandlesDefineScrollPos) {\r\n                        _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\r\n\r\n\r\n                        refreshScrollbarHandleOffset(isHorizontal, now);\r\n                      }\r\n                    }\r\n                  };\r\n                  instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\r\n                  instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition; //_base.scrollStop();\r\n\r\n                  if (instantScroll) {\r\n                    _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\r\n\r\n\r\n                    if (instantScrollTransition) {\r\n                      //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\r\n                      //and the animation stops at the correct point\r\n                      instantScrollPosition = _viewportElement[scroll](); //scroll back to the position before instant scrolling so animation can be performed\r\n\r\n                      _viewportElement[scroll](currScroll);\r\n\r\n                      instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition;\r\n                      instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\r\n                      scrollObj[xy] = instantScrollPosition;\r\n\r\n                      _base.scroll(scrollObj, extendDeep(animationObj, {\r\n                        duration: 130,\r\n                        complete: scrollActionInstantFinished\r\n                      }));\r\n                    } else scrollActionInstantFinished();\r\n                  } else {\r\n                    decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\r\n                    finishedCondition = rtlIsNormal ? decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset : decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset;\r\n\r\n                    if (finishedCondition) {\r\n                      clearTimeout(trackTimeout);\r\n\r\n                      _base.scrollStop();\r\n\r\n                      trackTimeout = undefined$1;\r\n                      scrollActionFinsished(true);\r\n                    } else {\r\n                      trackTimeout = setTimeout(scrollAction, timeoutDelay);\r\n                      scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\r\n\r\n                      _base.scroll(scrollObj, extendDeep(animationObj, {\r\n                        duration: scrollDuration\r\n                      }));\r\n                    }\r\n\r\n                    isFirstIteration = false;\r\n                  }\r\n                }\r\n              };\r\n\r\n              if (ctrlKey) increaseTrackScrollAmount();\r\n              mouseDownInvertedScale = getHostElementInvertedScale()[xy];\r\n              mouseDownOffset = COMPATIBILITY.page(event)[xy];\r\n              _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\r\n              addClass(_bodyElement, _classNameDragging);\r\n              addClass(scrollbarVars._track, strActive);\r\n              addClass(scrollbarVars._scrollbar, strActive);\r\n              setupResponsiveEventListener(_documentElement, [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]);\r\n              scrollAction();\r\n              COMPATIBILITY.prvD(event);\r\n              COMPATIBILITY.stpP(event);\r\n            }\r\n          }\r\n\r\n          function onTrackMouseTouchEnter(event) {\r\n            //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\r\n            _scrollbarsHandleHovered = true;\r\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\r\n          }\r\n\r\n          function onTrackMouseTouchLeave(event) {\r\n            _scrollbarsHandleHovered = false;\r\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\r\n          }\r\n\r\n          function onScrollbarMouseTouchDown(event) {\r\n            COMPATIBILITY.stpP(event);\r\n          }\r\n\r\n          addDestroyEventListener(scrollbarVars._handle, _strMouseTouchDownEvent, onHandleMouseTouchDown);\r\n          addDestroyEventListener(scrollbarVars._track, [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave], [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\r\n          addDestroyEventListener(scrollbarVars._scrollbar, _strMouseTouchDownEvent, onScrollbarMouseTouchDown);\r\n\r\n          if (_supportTransition) {\r\n            addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function (event) {\r\n              if (event.target !== scrollbarVars._scrollbar[0]) return;\r\n              refreshScrollbarHandleLength(isHorizontal);\r\n              refreshScrollbarHandleOffset(isHorizontal);\r\n            });\r\n          }\r\n        }\r\n        /**\r\n         * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\r\n         * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\r\n         * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\r\n         * @param canScroll True if the scrollbar is scrollable, false otherwise.\r\n         */\r\n\r\n\r\n        function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\r\n          var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\r\n          var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\r\n          addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);\r\n          addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);\r\n        }\r\n        /**\r\n         * Autoshows / autohides both scrollbars with.\r\n         * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\r\n         * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\r\n         */\r\n\r\n\r\n        function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\r\n          clearTimeout(_scrollbarsAutoHideTimeoutId);\r\n\r\n          if (shallBeVisible) {\r\n            //if(_hasOverflowCache.x && _hideOverflowCache.xs)\r\n            removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden); //if(_hasOverflowCache.y && _hideOverflowCache.ys)\r\n\r\n            removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\r\n          } else {\r\n            var anyActive;\r\n            var strActive = 'active';\r\n\r\n            var hide = function hide() {\r\n              if (!_scrollbarsHandleHovered && !_destroyed) {\r\n                anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\r\n                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\r\n                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\r\n              }\r\n            };\r\n\r\n            if (_scrollbarsAutoHideDelay > 0 && delayfree !== true) _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);else hide();\r\n          }\r\n        }\r\n        /**\r\n         * Refreshes the handle length of the given scrollbar.\r\n         * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n         */\r\n\r\n\r\n        function refreshScrollbarHandleLength(isHorizontal) {\r\n          var handleCSS = {};\r\n          var scrollbarVars = getScrollbarVars(isHorizontal);\r\n          var scrollbarVarsInfo = scrollbarVars._info;\r\n          var digit = 1000000; //get and apply intended handle length\r\n\r\n          var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);\r\n          handleCSS[scrollbarVars._width_height] = MATH.floor(handleRatio * 100 * digit) / digit + '%'; //the last * digit / digit is for flooring to the 4th digit\r\n\r\n          if (!nativeOverlayScrollbarsAreActive()) scrollbarVars._handle.css(handleCSS); //measure the handle length to respect min & max length\r\n\r\n          scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\r\n          scrollbarVarsInfo._handleLengthRatio = handleRatio;\r\n        }\r\n        /**\r\n         * Refreshes the handle offset of the given scrollbar.\r\n         * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n         * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\r\n         */\r\n\r\n\r\n        function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\r\n          var transition = type(scrollOrTransition) == TYPES.b;\r\n          var transitionDuration = 250;\r\n          var isRTLisHorizontal = _isRTL && isHorizontal;\r\n          var scrollbarVars = getScrollbarVars(isHorizontal);\r\n          var scrollbarVarsInfo = scrollbarVars._info;\r\n          var strTranslateBrace = 'translate(';\r\n\r\n          var strTransform = VENDORS._cssProperty('transform');\r\n\r\n          var strTransition = VENDORS._cssProperty('transition');\r\n\r\n          var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\r\n          var currentScroll = scrollOrTransition === undefined$1 || transition ? nativeScroll : scrollOrTransition; //measure the handle length to respect min & max length\r\n\r\n          var handleLength = scrollbarVarsInfo._handleLength;\r\n          var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\r\n          var handleTrackDiff = trackLength - handleLength;\r\n          var handleCSS = {};\r\n          var transformOffset;\r\n          var translateValue; //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\r\n          // because its a bit behind during the small delay when content size updates\r\n          //(delay = mutationObserverContentLag, if its 0 then this var could be used)\r\n\r\n          var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\r\n\r\n          var getScrollRatio = function getScrollRatio(base) {\r\n            return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\r\n          };\r\n\r\n          var getHandleOffset = function getHandleOffset(scrollRatio) {\r\n            var offset = handleTrackDiff * scrollRatio;\r\n            offset = isNaN(offset) ? 0 : offset;\r\n            offset = isRTLisHorizontal && !_rtlScrollBehavior.i ? trackLength - handleLength - offset : offset;\r\n            offset = MATH.max(0, offset);\r\n            return offset;\r\n          };\r\n\r\n          var scrollRatio = getScrollRatio(nativeScroll);\r\n          var unsnappedScrollRatio = getScrollRatio(currentScroll);\r\n          var handleOffset = getHandleOffset(unsnappedScrollRatio);\r\n          var snappedHandleOffset = getHandleOffset(scrollRatio);\r\n          scrollbarVarsInfo._maxScroll = maxScroll;\r\n          scrollbarVarsInfo._currentScroll = nativeScroll;\r\n          scrollbarVarsInfo._currentScrollRatio = scrollRatio;\r\n\r\n          if (_supportTransform) {\r\n            transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\r\n            //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\r\n\r\n            translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\r\n            handleCSS[strTransform] = translateValue; //apply or clear up transition\r\n\r\n            if (_supportTransition) handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' + (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\r\n          } else handleCSS[scrollbarVars._left_top] = handleOffset; //only apply css if offset has changed and overflow exists.\r\n\r\n\r\n          if (!nativeOverlayScrollbarsAreActive()) {\r\n            scrollbarVars._handle.css(handleCSS); //clear up transition\r\n\r\n\r\n            if (_supportTransform && _supportTransition && transition) {\r\n              scrollbarVars._handle.one(_strTransitionEndEvent, function () {\r\n                if (!_destroyed) scrollbarVars._handle.css(strTransition, _strEmpty);\r\n              });\r\n            }\r\n          }\r\n\r\n          scrollbarVarsInfo._handleOffset = handleOffset;\r\n          scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\r\n          scrollbarVarsInfo._trackLength = trackLength;\r\n        }\r\n        /**\r\n         * Refreshes the interactivity of the given scrollbar element.\r\n         * @param isTrack True if the track element is the target, false if the handle element is the target.\r\n         * @param value True for interactivity false for no interactivity.\r\n         */\r\n\r\n\r\n        function refreshScrollbarsInteractive(isTrack, value) {\r\n          var action = value ? 'removeClass' : 'addClass';\r\n          var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\r\n          var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\r\n          var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\r\n          element1[action](className);\r\n          element2[action](className);\r\n        }\r\n        /**\r\n         * Returns a object which is used for fast access for specific variables.\r\n         * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\r\n         * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\r\n         */\r\n\r\n\r\n        function getScrollbarVars(isHorizontal) {\r\n          return {\r\n            _width_height: isHorizontal ? _strWidth : _strHeight,\r\n            _Width_Height: isHorizontal ? 'Width' : 'Height',\r\n            _left_top: isHorizontal ? _strLeft : _strTop,\r\n            _Left_Top: isHorizontal ? 'Left' : 'Top',\r\n            _x_y: isHorizontal ? _strX : _strY,\r\n            _X_Y: isHorizontal ? 'X' : 'Y',\r\n            _w_h: isHorizontal ? 'w' : 'h',\r\n            _l_t: isHorizontal ? 'l' : 't',\r\n            _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\r\n            _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\r\n            _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\r\n            _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\r\n          };\r\n        } //==== Scrollbar Corner ====//\r\n\r\n        /**\r\n         * Builds or destroys the scrollbar corner DOM element.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\r\n\r\n\r\n        function setupScrollbarCornerDOM(destroy) {\r\n          _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);\r\n\r\n          if (!destroy) {\r\n            if (!_domExists) {\r\n              _hostElement.append(_scrollbarCornerElement);\r\n            }\r\n          } else {\r\n            if (_domExists && _initialized) {\r\n              removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n            } else {\r\n              remove(_scrollbarCornerElement);\r\n            }\r\n          }\r\n        }\r\n        /**\r\n         * Initializes all scrollbar corner interactivity events.\r\n         */\r\n\r\n\r\n        function setupScrollbarCornerEvents() {\r\n          var insideIFrame = _windowElementNative.top !== _windowElementNative;\r\n          var mouseDownPosition = {};\r\n          var mouseDownSize = {};\r\n          var mouseDownInvertedScale = {};\r\n          var reconnectMutationObserver;\r\n\r\n          function documentDragMove(event) {\r\n            if (onMouseTouchDownContinue(event)) {\r\n              var pageOffset = getCoordinates(event);\r\n              var hostElementCSS = {};\r\n              if (_resizeHorizontal || _resizeBoth) hostElementCSS[_strWidth] = mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x;\r\n              if (_resizeVertical || _resizeBoth) hostElementCSS[_strHeight] = mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y;\r\n\r\n              _hostElement.css(hostElementCSS);\r\n\r\n              COMPATIBILITY.stpP(event);\r\n            } else {\r\n              documentMouseTouchUp(event);\r\n            }\r\n          }\r\n\r\n          function documentMouseTouchUp(event) {\r\n            var eventIsTrusted = event !== undefined$1;\r\n            setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp], true);\r\n            removeClass(_bodyElement, _classNameDragging);\r\n            if (_scrollbarCornerElement.releaseCapture) _scrollbarCornerElement.releaseCapture();\r\n\r\n            if (eventIsTrusted) {\r\n              if (reconnectMutationObserver) connectMutationObservers();\r\n\r\n              _base.update(_strAuto);\r\n            }\r\n\r\n            reconnectMutationObserver = false;\r\n          }\r\n\r\n          function onMouseTouchDownContinue(event) {\r\n            var originalEvent = event.originalEvent || event;\r\n            var isTouchEvent = originalEvent.touches !== undefined$1;\r\n            return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\r\n          }\r\n\r\n          function getCoordinates(event) {\r\n            return _msieVersion && insideIFrame ? {\r\n              x: event.screenX,\r\n              y: event.screenY\r\n            } : COMPATIBILITY.page(event);\r\n          }\r\n\r\n          addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function (event) {\r\n            if (onMouseTouchDownContinue(event) && !_resizeNone) {\r\n              if (_mutationObserversConnected) {\r\n                reconnectMutationObserver = true;\r\n                disconnectMutationObservers();\r\n              }\r\n\r\n              mouseDownPosition = getCoordinates(event);\r\n              mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\r\n              mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\r\n              mouseDownInvertedScale = getHostElementInvertedScale();\r\n              setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp]);\r\n              addClass(_bodyElement, _classNameDragging);\r\n              if (_scrollbarCornerElement.setCapture) _scrollbarCornerElement.setCapture();\r\n              COMPATIBILITY.prvD(event);\r\n              COMPATIBILITY.stpP(event);\r\n            }\r\n          });\r\n        } //==== Utils ====//\r\n\r\n        /**\r\n         * Calls the callback with the given name. The Context of this callback is always _base (this).\r\n         * @param name The name of the target which shall be called.\r\n         * @param args The args with which the callback shall be called.\r\n         * @param dependent Boolean which decides whether the callback shall be fired, undefined is like a \"true\" value.\r\n         */\r\n\r\n\r\n        function dispatchCallback(name, args, dependent) {\r\n          if (dependent === false) return;\r\n\r\n          if (_initialized) {\r\n            var callback = _currentPreparedOptions.callbacks[name];\r\n            var extensionOnName = name;\r\n            var ext;\r\n            if (extensionOnName.substr(0, 2) === 'on') extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\r\n            if (type(callback) == TYPES.f) callback.call(_base, args);\r\n            each(_extensions, function () {\r\n              ext = this;\r\n              if (type(ext.on) == TYPES.f) ext.on(extensionOnName, args);\r\n            });\r\n          } else if (!_destroyed) _callbacksInitQeueue.push({\r\n            n: name,\r\n            a: args\r\n          });\r\n        }\r\n        /**\r\n         * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\r\n         * @param targetCSSObject The css object to which the values shall be applied.\r\n         * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n         * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\r\n         * If this argument is undefined the value '' (empty string) will be applied to all properties.\r\n         */\r\n\r\n\r\n        function setTopRightBottomLeft(targetCSSObject, prefix, values) {\r\n          prefix = prefix || _strEmpty;\r\n          values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\r\n          targetCSSObject[prefix + _strTop] = values[0];\r\n          targetCSSObject[prefix + _strRight] = values[1];\r\n          targetCSSObject[prefix + _strBottom] = values[2];\r\n          targetCSSObject[prefix + _strLeft] = values[3];\r\n        }\r\n        /**\r\n         * Gets the \"top, right, bottom, left\" CSS properties of the CSS property with the given prefix from the host element.\r\n         * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n         * @param suffix The suffix of the \"top, right, bottom, left\" css properties. (example: 'border-' is a valid prefix with '-width' is a valid suffix)\r\n         * @param zeroX True if the x axis shall be 0.\r\n         * @param zeroY True if the y axis shall be 0.\r\n         * @returns {{}} The object which contains the numbers of the read CSS properties.\r\n         */\r\n\r\n\r\n        function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {\r\n          suffix = suffix || _strEmpty;\r\n          prefix = prefix || _strEmpty;\r\n          return {\r\n            t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),\r\n            r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),\r\n            b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),\r\n            l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))\r\n          };\r\n        }\r\n        /**\r\n         * Returns the computed CSS transition string from the given element.\r\n         * @param element The element from which the transition string shall be returned.\r\n         * @returns {string} The CSS transition string from the given element.\r\n         */\r\n\r\n\r\n        function getCSSTransitionString(element) {\r\n          var transitionStr = VENDORS._cssProperty('transition');\r\n\r\n          var assembledValue = element.css(transitionStr);\r\n          if (assembledValue) return assembledValue;\r\n          var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\r\n          var regExpMain = new RegExp(regExpString);\r\n          var regExpValidate = new RegExp('^(' + regExpString + ')+$');\r\n          var properties = 'property duration timing-function delay'.split(' ');\r\n          var result = [];\r\n          var strResult;\r\n          var valueArray;\r\n          var i = 0;\r\n          var j;\r\n\r\n          var splitCssStyleByComma = function splitCssStyleByComma(str) {\r\n            strResult = [];\r\n            if (!str.match(regExpValidate)) return str;\r\n\r\n            while (str.match(regExpMain)) {\r\n              strResult.push(RegExp.$1);\r\n              str = str.replace(regExpMain, _strEmpty);\r\n            }\r\n\r\n            return strResult;\r\n          };\r\n\r\n          for (; i < properties[LEXICON.l]; i++) {\r\n            valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\r\n\r\n            for (j = 0; j < valueArray[LEXICON.l]; j++) {\r\n              result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\r\n            }\r\n          }\r\n\r\n          return result.join(', ');\r\n        }\r\n        /**\r\n         * Generates a Regular Expression which matches with a string which starts with 'os-host'.\r\n         * @param {boolean} withCurrClassNameOption The Regular Expression also matches if the string is the current ClassName option (multiple values splitted by space possible).\r\n         * @param {boolean} withOldClassNameOption The Regular Expression also matches if the string is the old ClassName option (multiple values splitted by space possible).\r\n         */\r\n\r\n\r\n        function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {\r\n          var i;\r\n          var split;\r\n          var appendix;\r\n\r\n          var appendClasses = function appendClasses(classes, condition) {\r\n            appendix = '';\r\n\r\n            if (condition && _typeof(classes) == TYPES.s) {\r\n              split = classes.split(_strSpace);\r\n\r\n              for (i = 0; i < split[LEXICON.l]; i++) {\r\n                appendix += '|' + split[i] + '$';\r\n              } // split[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') for escaping regex characters\r\n\r\n            }\r\n\r\n            return appendix;\r\n          };\r\n\r\n          return new RegExp('(^' + _classNameHostElement + '([-_].+|)$)' + appendClasses(_classNameCache, withCurrClassNameOption) + appendClasses(_oldClassName, withOldClassNameOption), 'g');\r\n        }\r\n        /**\r\n         * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\r\n         * @returns {{x: number, y: number}} The scale of the host-element.\r\n         */\r\n\r\n\r\n        function getHostElementInvertedScale() {\r\n          var rect = _paddingElementNative[LEXICON.bCR]();\r\n\r\n          return {\r\n            x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\r\n            y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\r\n          };\r\n        }\r\n        /**\r\n         * Checks whether the given object is a HTMLElement.\r\n         * @param o The object which shall be checked.\r\n         * @returns {boolean} True the given object is a HTMLElement, false otherwise.\r\n         */\r\n\r\n\r\n        function isHTMLElement(o) {\r\n          var strOwnerDocument = 'ownerDocument';\r\n          var strHTMLElement = 'HTMLElement';\r\n          var wnd = o && o[strOwnerDocument] ? o[strOwnerDocument].parentWindow || window : window;\r\n          return _typeof(wnd[strHTMLElement]) == TYPES.o ? o instanceof wnd[strHTMLElement] : //DOM2\r\n          o && _typeof(o) == TYPES.o && o !== null && o.nodeType === 1 && _typeof(o.nodeName) == TYPES.s;\r\n        }\r\n        /**\r\n         * Compares 2 arrays and returns the differences between them as a array.\r\n         * @param a1 The first array which shall be compared.\r\n         * @param a2 The second array which shall be compared.\r\n         * @returns {Array} The differences between the two arrays.\r\n         */\r\n\r\n\r\n        function getArrayDifferences(a1, a2) {\r\n          var a = [];\r\n          var diff = [];\r\n          var i;\r\n          var k;\r\n\r\n          for (i = 0; i < a1.length; i++) {\r\n            a[a1[i]] = true;\r\n          }\r\n\r\n          for (i = 0; i < a2.length; i++) {\r\n            if (a[a2[i]]) delete a[a2[i]];else a[a2[i]] = true;\r\n          }\r\n\r\n          for (k in a) {\r\n            diff.push(k);\r\n          }\r\n\r\n          return diff;\r\n        }\r\n        /**\r\n         * Returns Zero or the number to which the value can be parsed.\r\n         * @param value The value which shall be parsed.\r\n         * @param toFloat Indicates whether the number shall be parsed to a float.\r\n         */\r\n\r\n\r\n        function parseToZeroOrNumber(value, toFloat) {\r\n          var num = toFloat ? parseFloat(value) : parseInt(value, 10);\r\n          return isNaN(num) ? 0 : num;\r\n        }\r\n        /**\r\n         * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\r\n         * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\r\n         */\r\n\r\n\r\n        function getTextareaInfo() {\r\n          //read needed values\r\n          var textareaCursorPosition = _targetElementNative.selectionStart;\r\n          if (textareaCursorPosition === undefined$1) return;\r\n\r\n          var textareaValue = _targetElement.val();\r\n\r\n          var textareaLength = textareaValue[LEXICON.l];\r\n          var textareaRowSplit = textareaValue.split('\\n');\r\n          var textareaLastRow = textareaRowSplit[LEXICON.l];\r\n          var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\r\n          var widestRow = 0;\r\n          var textareaLastCol = 0;\r\n          var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\r\n          var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\r\n          var rowCols;\r\n          var i; //get widest Row and the last column of the textarea\r\n\r\n          for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\r\n            rowCols = textareaRowSplit[i][LEXICON.l];\r\n\r\n            if (rowCols > textareaLastCol) {\r\n              widestRow = i + 1;\r\n              textareaLastCol = rowCols;\r\n            }\r\n          }\r\n\r\n          return {\r\n            _cursorRow: cursorRow,\r\n            //cursorRow\r\n            _cursorColumn: cursorCol,\r\n            //cursorCol\r\n            _rows: textareaLastRow,\r\n            //rows\r\n            _columns: textareaLastCol,\r\n            //cols\r\n            _widestRow: widestRow,\r\n            //wRow\r\n            _cursorPosition: textareaCursorPosition,\r\n            //pos\r\n            _cursorMax: textareaLength //max\r\n\r\n          };\r\n        }\r\n        /**\r\n         * Determines whether native overlay scrollbars are active.\r\n         * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\r\n         */\r\n\r\n\r\n        function nativeOverlayScrollbarsAreActive() {\r\n          return _ignoreOverlayScrollbarHidingCache && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y;\r\n        }\r\n        /**\r\n         * Gets the element which is used to measure the content size.\r\n         * @returns {*} TextareaCover if target element is textarea else the ContentElement.\r\n         */\r\n\r\n\r\n        function getContentMeasureElement() {\r\n          return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\r\n        }\r\n        /**\r\n         * Generates a string which represents a HTML div with the given classes or attributes.\r\n         * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\r\n         * @param content The content of the div as string.\r\n         * @returns {string} The concated string which represents a HTML div and its content.\r\n         */\r\n\r\n\r\n        function generateDiv(classesOrAttrs, content) {\r\n          return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ? 'class=\"' + classesOrAttrs + '\"' : function () {\r\n            var key;\r\n            var attrs = _strEmpty;\r\n\r\n            if (FRAMEWORK.isPlainObject(classesOrAttrs)) {\r\n              for (key in classesOrAttrs) {\r\n                attrs += (key === 'c' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\r\n              }\r\n            }\r\n\r\n            return attrs;\r\n          }() : _strEmpty) + '>' + (content || _strEmpty) + '</div>';\r\n        }\r\n        /**\r\n         * Selects or generates a div with the given class attribute.\r\n         * @param className The class names (divided by spaces) of the div which shall be selected or generated.\r\n         * @param selectParentOrOnlyChildren The parent element from which of the element shall be selected. (if undefined or boolean its hostElement)\r\n         * If its a boolean it decides whether only the children of the host element shall be selected.\r\n         * @returns {*} The generated or selected element.\r\n         */\r\n\r\n\r\n        function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {\r\n          var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;\r\n          var selectParent = onlyChildren ? _hostElement : selectParentOrOnlyChildren || _hostElement;\r\n          return _domExists && !selectParent[LEXICON.l] ? null : _domExists ? selectParent[onlyChildren ? 'children' : 'find'](_strDot + className.replace(/\\s/g, _strDot)).eq(0) : FRAMEWORK(generateDiv(className));\r\n        }\r\n        /**\r\n         * Gets the value of the given property from the given object.\r\n         * @param obj The object from which the property value shall be got.\r\n         * @param path The property of which the value shall be got.\r\n         * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\r\n         */\r\n\r\n\r\n        function getObjectPropVal(obj, path) {\r\n          var splits = path.split(_strDot);\r\n          var i = 0;\r\n          var val;\r\n\r\n          for (; i < splits.length; i++) {\r\n            if (!obj[LEXICON.hOP](splits[i])) return;\r\n            val = obj[splits[i]];\r\n            if (i < splits.length && type(val) == TYPES.o) obj = val;\r\n          }\r\n\r\n          return val;\r\n        }\r\n        /**\r\n         * Sets the value of the given property from the given object.\r\n         * @param obj The object from which the property value shall be set.\r\n         * @param path The property of which the value shall be set.\r\n         * @param val The value of the property which shall be set.\r\n         */\r\n\r\n\r\n        function setObjectPropVal(obj, path, val) {\r\n          var splits = path.split(_strDot);\r\n          var splitsLength = splits.length;\r\n          var i = 0;\r\n          var extendObj = {};\r\n          var extendObjRoot = extendObj;\r\n\r\n          for (; i < splitsLength; i++) {\r\n            extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;\r\n          }\r\n\r\n          FRAMEWORK.extend(obj, extendObjRoot, true);\r\n        }\r\n        /**\t\r\n         * Runs a action for each selector inside the updateOnLoad option.\t\r\n         * @param {Function} action The action for each updateOnLoad selector, the arguments the function takes is the index and the value (the selector).\t\r\n         */\r\n\r\n\r\n        function eachUpdateOnLoad(action) {\r\n          var updateOnLoad = _currentPreparedOptions.updateOnLoad;\r\n          updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;\r\n\r\n          if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {\r\n            each(updateOnLoad, action);\r\n          }\r\n        } //==== Utils Cache ====//\r\n\r\n        /**\r\n         * Compares two values or objects and returns true if they aren't equal.\r\n         * @param current The first value or object which shall be compared.\r\n         * @param cache The second value or object which shall be compared.\r\n         * @param force If true the returned value is always true.\r\n         * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\r\n         */\r\n\r\n\r\n        function checkCache(current, cache, force) {\r\n          if (force) return force;\r\n\r\n          if (type(current) == TYPES.o && type(cache) == TYPES.o) {\r\n            for (var prop in current) {\r\n              if (prop !== 'c') {\r\n                if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\r\n                  if (checkCache(current[prop], cache[prop])) return true;\r\n                } else {\r\n                  return true;\r\n                }\r\n              }\r\n            }\r\n          } else {\r\n            return current !== cache;\r\n          }\r\n\r\n          return false;\r\n        } //==== Shortcuts ====//\r\n\r\n        /**\r\n         * jQuery extend method shortcut with a appended \"true\" as first argument.\r\n         */\r\n\r\n\r\n        function extendDeep() {\r\n          return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));\r\n        }\r\n        /**\r\n         * jQuery addClass method shortcut.\r\n         */\r\n\r\n\r\n        function addClass(el, classes) {\r\n          return _frameworkProto.addClass.call(el, classes);\r\n        }\r\n        /**\r\n         * jQuery removeClass method shortcut.\r\n         */\r\n\r\n\r\n        function removeClass(el, classes) {\r\n          return _frameworkProto.removeClass.call(el, classes);\r\n        }\r\n        /**\r\n         * Adds or removes the given classes dependent on the boolean value. True for add, false for remove.\r\n         */\r\n\r\n\r\n        function addRemoveClass(el, classes, doAdd) {\r\n          return doAdd ? addClass(el, classes) : removeClass(el, classes);\r\n        }\r\n        /**\r\n         * jQuery remove method shortcut.\r\n         */\r\n\r\n\r\n        function remove(el) {\r\n          return _frameworkProto.remove.call(el);\r\n        }\r\n        /**\r\n         * Finds the first child element with the given selector of the given element.\r\n         * @param el The root element from which the selector shall be valid.\r\n         * @param selector The selector of the searched element.\r\n         * @returns {*} The first element which is a child of the given element and matches the givens selector.\r\n         */\r\n\r\n\r\n        function findFirst(el, selector) {\r\n          return _frameworkProto.find.call(el, selector).eq(0);\r\n        } //==== API ====//\r\n\r\n        /**\r\n         * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\r\n         * This behavior can be reset by calling the update method.\r\n         */\r\n\r\n\r\n        _base.sleep = function () {\r\n          _sleeping = true;\r\n        };\r\n        /**\r\n         * Updates the plugin and DOM to the current options.\r\n         * This method should only be called if a update is 100% required.\r\n         * @param force True if every property shall be updated and the cache shall be ignored.\r\n         * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\r\n         * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\r\n         * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\r\n         * if \"zoom\" then a update takes place where it's assumed that content and host size changed\r\n         * @returns {boolean|undefined} \r\n         * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\r\n         * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\r\n         * undefined otherwise.\r\n         */\r\n\r\n\r\n        _base.update = function (force) {\r\n          if (_destroyed) return;\r\n          var attrsChanged;\r\n          var contentSizeC;\r\n          var isString = type(force) == TYPES.s;\r\n          var doUpdateAuto;\r\n          var mutHost;\r\n          var mutContent;\r\n\r\n          if (isString) {\r\n            if (force === _strAuto) {\r\n              attrsChanged = meaningfulAttrsChanged();\r\n              contentSizeC = updateAutoContentSizeChanged();\r\n              doUpdateAuto = attrsChanged || contentSizeC;\r\n\r\n              if (doUpdateAuto) {\r\n                update({\r\n                  _contentSizeChanged: contentSizeC,\r\n                  _changedOptions: _initialized ? undefined$1 : _currentPreparedOptions\r\n                });\r\n              }\r\n            } else if (force === _strSync) {\r\n              if (_mutationObserversConnected) {\r\n                mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\r\n                mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\r\n              } else {\r\n                mutHost = _base.update(_strAuto);\r\n              }\r\n            } else if (force === 'zoom') {\r\n              update({\r\n                _hostSizeChanged: true,\r\n                _contentSizeChanged: true\r\n              });\r\n            }\r\n          } else {\r\n            force = _sleeping || force;\r\n            _sleeping = false;\r\n            if (!_base.update(_strSync) || force) update({\r\n              _force: force\r\n            });\r\n          }\r\n\r\n          updateElementsOnLoad();\r\n          return doUpdateAuto || mutHost || mutContent;\r\n        };\r\n        /**\r\n         Gets or sets the current options. The update method will be called automatically if new options were set.\r\n         * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\r\n         * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\r\n         * @returns {*}\r\n         */\r\n\r\n\r\n        _base.options = function (newOptions, value) {\r\n          var option = {};\r\n          var changedOps; //return current options if newOptions are undefined or empty\r\n\r\n          if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\r\n            if (type(newOptions) == TYPES.s) {\r\n              if (arguments.length > 1) {\r\n                setObjectPropVal(option, newOptions, value);\r\n                changedOps = setOptions(option);\r\n              } else return getObjectPropVal(_currentOptions, newOptions);\r\n            } else return _currentOptions;\r\n          } else {\r\n            changedOps = setOptions(newOptions);\r\n          }\r\n\r\n          if (!FRAMEWORK.isEmptyObject(changedOps)) {\r\n            update({\r\n              _changedOptions: changedOps\r\n            });\r\n          }\r\n        };\r\n        /**\r\n         * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\r\n         */\r\n\r\n\r\n        _base.destroy = function () {\r\n          if (_destroyed) return; //remove this instance from auto update loop\r\n\r\n          autoUpdateLoop.remove(_base); //disconnect all mutation observers\r\n\r\n          disconnectMutationObservers(); //remove all resize observers\r\n\r\n          setupResizeObserver(_sizeObserverElement);\r\n          setupResizeObserver(_sizeAutoObserverElement); //remove all extensions\r\n\r\n          for (var extName in _extensions) {\r\n            _base.removeExt(extName);\r\n          } //remove all 'destroy' events\r\n\r\n\r\n          while (_destroyEvents[LEXICON.l] > 0) {\r\n            _destroyEvents.pop()();\r\n          } //remove all events from host element\r\n\r\n\r\n          setupHostMouseTouchEvents(true); //remove all helper / detection elements\r\n\r\n          if (_contentGlueElement) remove(_contentGlueElement);\r\n          if (_contentArrangeElement) remove(_contentArrangeElement);\r\n          if (_sizeAutoObserverAdded) remove(_sizeAutoObserverElement); //remove all generated DOM\r\n\r\n          setupScrollbarsDOM(true);\r\n          setupScrollbarCornerDOM(true);\r\n          setupStructureDOM(true); //remove all generated image load events\r\n\r\n          for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++) {\r\n            FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);\r\n          }\r\n\r\n          _updateOnLoadElms = undefined$1;\r\n          _destroyed = true;\r\n          _sleeping = true; //remove this instance from the instances list\r\n\r\n          INSTANCES(pluginTargetElement, 0);\r\n          dispatchCallback('onDestroyed'); //remove all properties and methods\r\n          //for (var property in _base)\r\n          //    delete _base[property];\r\n          //_base = undefined;\r\n        };\r\n        /**\r\n         * Scrolls to a given position or element.\r\n         * @param coordinates\r\n         * 1. Can be \"coordinates\" which looks like:\r\n         *    { x : ?, y : ? } OR          Object with x and y properties\r\n         *    { left : ?, top : ? } OR     Object with left and top properties\r\n         *    { l : ?, t : ? } OR          Object with l and t properties\r\n         *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\r\n         *    ?                            A single value which stays for both axis\r\n         *    A value can be a number, a string or a calculation.\r\n         *\r\n         *    Operators:\r\n         *    [NONE]  The current scroll will be overwritten by the value.\r\n         *    '+='    The value will be added to the current scroll offset\r\n         *    '-='    The value will be subtracted from the current scroll offset\r\n         *    '*='    The current scroll wil be multiplicated by the value.\r\n         *    '/='    The current scroll wil be divided by the value.\r\n         *\r\n         *    Units:\r\n         *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\r\n         *    'px'    Same as none\r\n         *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\r\n         *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\r\n         *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\r\n         *\r\n         *    example final values:\r\n         *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\r\n         *\r\n         * 2. Can be a HTML or jQuery element:\r\n         *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\r\n         *\r\n         * 3. Can be a object with a HTML or jQuery element with additional settings:\r\n         *    {\r\n         *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\r\n         *      scroll : [string, array, object],               Default value is 'always'.\r\n         *      block : [string, array, object],                Default value is 'begin'.\r\n         *      margin : [number, boolean, array, object]       Default value is false.\r\n         *    }\r\n         *\r\n         *    Possible scroll settings are:\r\n         *    'always'      Scrolls always.\r\n         *    'ifneeded'    Scrolls only if the element isnt fully in view.\r\n         *    'never'       Scrolls never.\r\n         *\r\n         *    Possible block settings are:\r\n         *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\r\n         *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\r\n         *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\r\n         *    'nearest' The element will be docked to the nearest edge(s).\r\n         *\r\n         *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\r\n         *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\r\n         *    [NUMBER]                                          The margin will be used for all edges.\r\n         *\r\n         * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\r\n         * @param easing The animation easing.\r\n         * @param complete The animation complete callback.\r\n         * @returns {{\r\n         *   position: {x: number, y: number},\r\n         *   ratio: {x: number, y: number},\r\n         *   max: {x: number, y: number},\r\n         *   handleOffset: {x: number, y: number},\r\n         *   handleLength: {x: number, y: number},\r\n         *   handleLengthRatio: {x: number, y: number}, t\r\n         *   rackLength: {x: number, y: number},\r\n         *   isRTL: boolean,\r\n         *   isRTLNormalized: boolean\r\n         *  }}\r\n         */\r\n\r\n\r\n        _base.scroll = function (coordinates, duration, easing, complete) {\r\n          if (arguments.length === 0 || coordinates === undefined$1) {\r\n            var infoX = _scrollHorizontalInfo;\r\n            var infoY = _scrollVerticalInfo;\r\n            var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\r\n            var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\r\n            var scrollX = infoX._currentScroll;\r\n            var scrollXRatio = infoX._currentScrollRatio;\r\n            var maxScrollX = infoX._maxScroll;\r\n            scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\r\n            scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\r\n            scrollX *= normalizeNegate ? -1 : 1;\r\n            maxScrollX *= normalizeNegate ? -1 : 1;\r\n            return {\r\n              position: {\r\n                x: scrollX,\r\n                y: infoY._currentScroll\r\n              },\r\n              ratio: {\r\n                x: scrollXRatio,\r\n                y: infoY._currentScrollRatio\r\n              },\r\n              max: {\r\n                x: maxScrollX,\r\n                y: infoY._maxScroll\r\n              },\r\n              handleOffset: {\r\n                x: infoX._handleOffset,\r\n                y: infoY._handleOffset\r\n              },\r\n              handleLength: {\r\n                x: infoX._handleLength,\r\n                y: infoY._handleLength\r\n              },\r\n              handleLengthRatio: {\r\n                x: infoX._handleLengthRatio,\r\n                y: infoY._handleLengthRatio\r\n              },\r\n              trackLength: {\r\n                x: infoX._trackLength,\r\n                y: infoY._trackLength\r\n              },\r\n              snappedHandleOffset: {\r\n                x: infoX._snappedHandleOffset,\r\n                y: infoY._snappedHandleOffset\r\n              },\r\n              isRTL: _isRTL,\r\n              isRTLNormalized: _normalizeRTLCache\r\n            };\r\n          }\r\n\r\n          _base.update(_strSync);\r\n\r\n          var normalizeRTL = _normalizeRTLCache;\r\n          var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\r\n          var coordinatesYAxisProps = [_strY, _strTop, 't'];\r\n          var coordinatesOperators = ['+=', '-=', '*=', '/='];\r\n          var durationIsObject = type(duration) == TYPES.o;\r\n          var completeCallback = durationIsObject ? duration.complete : complete;\r\n          var i;\r\n          var finalScroll = {};\r\n          var specialEasing = {};\r\n          var doScrollLeft;\r\n          var doScrollTop;\r\n          var animationOptions;\r\n          var strEnd = 'end';\r\n          var strBegin = 'begin';\r\n          var strCenter = 'center';\r\n          var strNearest = 'nearest';\r\n          var strAlways = 'always';\r\n          var strNever = 'never';\r\n          var strIfNeeded = 'ifneeded';\r\n          var strLength = LEXICON.l;\r\n          var settingsAxis;\r\n          var settingsScroll;\r\n          var settingsBlock;\r\n          var settingsMargin;\r\n          var finalElement;\r\n          var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\r\n          var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\r\n          var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\r\n          var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\r\n          var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\r\n          var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\r\n          var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\r\n\r\n          var updateScrollbarInfos = function updateScrollbarInfos() {\r\n            if (doScrollLeft) refreshScrollbarHandleOffset(true);\r\n            if (doScrollTop) refreshScrollbarHandleOffset(false);\r\n          };\r\n\r\n          var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined$1 : function () {\r\n            updateScrollbarInfos();\r\n            completeCallback();\r\n          };\r\n\r\n          function checkSettingsStringValue(currValue, allowedValues) {\r\n            for (i = 0; i < allowedValues[strLength]; i++) {\r\n              if (currValue === allowedValues[i]) return true;\r\n            }\r\n\r\n            return false;\r\n          }\r\n\r\n          function getRawScroll(isX, coordinates) {\r\n            var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\r\n            coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [coordinates, coordinates] : coordinates;\r\n            if (COMPATIBILITY.isA(coordinates)) return isX ? coordinates[0] : coordinates[1];else if (type(coordinates) == TYPES.o) {\r\n              //decides RTL normalization \"hack\" with .n\r\n              //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \r\n              for (i = 0; i < coordinateProps[strLength]; i++) {\r\n                if (coordinateProps[i] in coordinates) return coordinates[coordinateProps[i]];\r\n              }\r\n            }\r\n          }\r\n\r\n          function getFinalScroll(isX, rawScroll) {\r\n            var isString = type(rawScroll) == TYPES.s;\r\n            var operator;\r\n            var amount;\r\n            var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\r\n            var currScroll = scrollInfo._currentScroll;\r\n            var maxScroll = scrollInfo._maxScroll;\r\n            var mult = ' * ';\r\n            var finalValue;\r\n            var isRTLisX = _isRTL && isX;\r\n            var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\r\n            var strReplace = 'replace';\r\n            var evalFunc = eval;\r\n            var possibleOperator;\r\n\r\n            if (isString) {\r\n              //check operator\r\n              if (rawScroll[strLength] > 2) {\r\n                possibleOperator = rawScroll.substr(0, 2);\r\n                if (inArray(possibleOperator, coordinatesOperators) > -1) operator = possibleOperator;\r\n              } //calculate units and shortcuts\r\n\r\n\r\n              rawScroll = operator ? rawScroll.substr(2) : rawScroll;\r\n              rawScroll = rawScroll[strReplace](/min/g, 0) //'min' = 0%\r\n              [strReplace](/</g, 0) //'<'   = 0%\r\n              [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'max' = 100%\r\n              [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'>'   = 100%\r\n              [strReplace](/px/g, _strEmpty)[strReplace](/%/g, mult + maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0)[strReplace](/vw/g, mult + _viewportSize.w)[strReplace](/vh/g, mult + _viewportSize.h);\r\n              amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\r\n            } else {\r\n              amount = rawScroll;\r\n            }\r\n\r\n            if (amount !== undefined$1 && !isNaN(amount) && type(amount) == TYPES.n) {\r\n              var normalizeIsRTLisX = normalizeRTL && isRTLisX;\r\n              var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\r\n              var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\r\n              var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\r\n              operatorCurrScroll = invert ? maxScroll - operatorCurrScroll : operatorCurrScroll;\r\n\r\n              switch (operator) {\r\n                case '+=':\r\n                  finalValue = operatorCurrScroll + amount;\r\n                  break;\r\n\r\n                case '-=':\r\n                  finalValue = operatorCurrScroll - amount;\r\n                  break;\r\n\r\n                case '*=':\r\n                  finalValue = operatorCurrScroll * amount;\r\n                  break;\r\n\r\n                case '/=':\r\n                  finalValue = operatorCurrScroll / amount;\r\n                  break;\r\n\r\n                default:\r\n                  finalValue = amount;\r\n                  break;\r\n              }\r\n\r\n              finalValue = invert ? maxScroll - finalValue : finalValue;\r\n              finalValue *= negate ? -1 : 1;\r\n              finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\r\n            }\r\n\r\n            return finalValue === currScroll ? undefined$1 : finalValue;\r\n          }\r\n\r\n          function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {\r\n            var resultDefault = [defaultValue, defaultValue];\r\n            var valueType = type(value);\r\n            var valueArrLength;\r\n            var valueArrItem; //value can be [ string, or array of two strings ]\r\n\r\n            if (valueType == valueInternalType) {\r\n              value = [value, value];\r\n            } else if (valueType == TYPES.a) {\r\n              valueArrLength = value[strLength];\r\n              if (valueArrLength > 2 || valueArrLength < 1) value = resultDefault;else {\r\n                if (valueArrLength === 1) value[1] = defaultValue;\r\n\r\n                for (i = 0; i < valueArrLength; i++) {\r\n                  valueArrItem = value[i];\r\n\r\n                  if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\r\n                    value = resultDefault;\r\n                    break;\r\n                  }\r\n                }\r\n              }\r\n            } else if (valueType == TYPES.o) value = [value[_strX] || defaultValue, value[_strY] || defaultValue];else value = resultDefault;\r\n\r\n            return {\r\n              x: value[0],\r\n              y: value[1]\r\n            };\r\n          }\r\n\r\n          function generateMargin(marginTopRightBottomLeftArray) {\r\n            var result = [];\r\n            var currValue;\r\n            var currValueType;\r\n            var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];\r\n\r\n            for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\r\n              if (i === valueDirections[strLength]) break;\r\n              currValue = marginTopRightBottomLeftArray[i];\r\n              currValueType = type(currValue);\r\n              if (currValueType == TYPES.b) result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);else result.push(currValueType == TYPES.n ? currValue : 0);\r\n            }\r\n\r\n            return result;\r\n          }\r\n\r\n          if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\r\n            //get settings\r\n            var margin = coordinatesIsElementObj ? coordinates.margin : 0;\r\n            var axis = coordinatesIsElementObj ? coordinates.axis : 0;\r\n            var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\r\n            var block = coordinatesIsElementObj ? coordinates.block : 0;\r\n            var marginDefault = [0, 0, 0, 0];\r\n            var marginType = type(margin);\r\n            var marginLength;\r\n            finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\r\n\r\n            if (finalElement[strLength] > 0) {\r\n              //margin can be [ boolean, number, array of 2, array of 4, object ]\r\n              if (marginType == TYPES.n || marginType == TYPES.b) margin = generateMargin([margin, margin, margin, margin]);else if (marginType == TYPES.a) {\r\n                marginLength = margin[strLength];\r\n                if (marginLength === 2) margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);else if (marginLength >= 4) margin = generateMargin(margin);else margin = marginDefault;\r\n              } else if (marginType == TYPES.o) margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);else margin = marginDefault; //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\r\n\r\n              settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\r\n              settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\r\n              settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\r\n              settingsMargin = margin;\r\n              var viewportScroll = {\r\n                l: _scrollHorizontalInfo._currentScroll,\r\n                t: _scrollVerticalInfo._currentScroll\r\n              }; // use padding element instead of viewport element because padding element has never padding, margin or position applied.\r\n\r\n              var viewportOffset = _paddingElement.offset(); //get coordinates\r\n\r\n\r\n              var elementOffset = finalElement.offset();\r\n              var doNotScroll = {\r\n                x: settingsScroll.x == strNever || settingsAxis == _strY,\r\n                y: settingsScroll.y == strNever || settingsAxis == _strX\r\n              };\r\n              elementOffset[_strTop] -= settingsMargin[0];\r\n              elementOffset[_strLeft] -= settingsMargin[3];\r\n              var elementScrollCoordinates = {\r\n                x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\r\n                y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\r\n              };\r\n\r\n              if (_isRTL) {\r\n                if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\r\n                if (_rtlScrollBehavior.n && normalizeRTL) elementScrollCoordinates.x *= -1;\r\n                if (_rtlScrollBehavior.i && normalizeRTL) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\r\n              } //measuring is required\r\n\r\n\r\n              if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\r\n                var measuringElm = finalElement[0];\r\n                var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {\r\n                  width: measuringElm[LEXICON.oW],\r\n                  height: measuringElm[LEXICON.oH]\r\n                };\r\n                var elementSize = {\r\n                  w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\r\n                  h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\r\n                };\r\n\r\n                var finalizeBlock = function finalizeBlock(isX) {\r\n                  var vars = getScrollbarVars(isX);\r\n                  var wh = vars._w_h;\r\n                  var lt = vars._left_top;\r\n                  var xy = vars._x_y;\r\n                  var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\r\n                  var blockIsCenter = settingsBlock[xy] == strCenter;\r\n                  var blockIsNearest = settingsBlock[xy] == strNearest;\r\n                  var scrollNever = settingsScroll[xy] == strNever;\r\n                  var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\r\n                  var vpSize = _viewportSize[wh];\r\n                  var vpOffset = viewportOffset[lt];\r\n                  var elSize = elementSize[wh];\r\n                  var elOffset = elementOffset[lt];\r\n                  var divide = blockIsCenter ? 2 : 1;\r\n                  var elementCenterOffset = elOffset + elSize / 2;\r\n                  var viewportCenterOffset = vpOffset + vpSize / 2;\r\n                  var isInView = elSize <= vpSize && elOffset >= vpOffset && elOffset + elSize <= vpOffset + vpSize;\r\n                  if (scrollNever) doNotScroll[xy] = true;else if (!doNotScroll[xy]) {\r\n                    if (blockIsNearest || scrollIfNeeded) {\r\n                      doNotScroll[xy] = scrollIfNeeded ? isInView : false;\r\n                      blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\r\n                    }\r\n\r\n                    elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? (vpSize / divide - elSize / divide) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\r\n                  }\r\n                };\r\n\r\n                finalizeBlock(true);\r\n                finalizeBlock(false);\r\n              }\r\n\r\n              if (doNotScroll.y) delete elementScrollCoordinates.y;\r\n              if (doNotScroll.x) delete elementScrollCoordinates.x;\r\n              coordinates = elementScrollCoordinates;\r\n            }\r\n          }\r\n\r\n          finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\r\n          finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\r\n          doScrollLeft = finalScroll[_strScrollLeft] !== undefined$1;\r\n          doScrollTop = finalScroll[_strScrollTop] !== undefined$1;\r\n\r\n          if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\r\n            if (durationIsObject) {\r\n              duration.complete = proxyCompleteCallback;\r\n\r\n              _viewportElement.animate(finalScroll, duration);\r\n            } else {\r\n              animationOptions = {\r\n                duration: duration,\r\n                complete: proxyCompleteCallback\r\n              };\r\n\r\n              if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {\r\n                specialEasing[_strScrollLeft] = easing[0] || easing.x;\r\n                specialEasing[_strScrollTop] = easing[1] || easing.y;\r\n                animationOptions.specialEasing = specialEasing;\r\n              } else {\r\n                animationOptions.easing = easing;\r\n              }\r\n\r\n              _viewportElement.animate(finalScroll, animationOptions);\r\n            }\r\n          } else {\r\n            if (doScrollLeft) _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\r\n            if (doScrollTop) _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\r\n            updateScrollbarInfos();\r\n          }\r\n        };\r\n        /**\r\n         * Stops all scroll animations.\r\n         * @returns {*} The current OverlayScrollbars instance (for chaining).\r\n         */\r\n\r\n\r\n        _base.scrollStop = function (param1, param2, param3) {\r\n          _viewportElement.stop(param1, param2, param3);\r\n\r\n          return _base;\r\n        };\r\n        /**\r\n         * Returns all relevant elements.\r\n         * @param elementName The name of the element which shall be returned.\r\n         * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\r\n         */\r\n\r\n\r\n        _base.getElements = function (elementName) {\r\n          var obj = {\r\n            target: _targetElementNative,\r\n            host: _hostElementNative,\r\n            padding: _paddingElementNative,\r\n            viewport: _viewportElementNative,\r\n            content: _contentElementNative,\r\n            scrollbarHorizontal: {\r\n              scrollbar: _scrollbarHorizontalElement[0],\r\n              track: _scrollbarHorizontalTrackElement[0],\r\n              handle: _scrollbarHorizontalHandleElement[0]\r\n            },\r\n            scrollbarVertical: {\r\n              scrollbar: _scrollbarVerticalElement[0],\r\n              track: _scrollbarVerticalTrackElement[0],\r\n              handle: _scrollbarVerticalHandleElement[0]\r\n            },\r\n            scrollbarCorner: _scrollbarCornerElement[0]\r\n          };\r\n          return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\r\n        };\r\n        /**\r\n         * Returns a object which describes the current state of this instance.\r\n         * @param stateProperty A specific property from the state object which shall be returned.\r\n         * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\r\n         */\r\n\r\n\r\n        _base.getState = function (stateProperty) {\r\n          function prepare(obj) {\r\n            if (!FRAMEWORK.isPlainObject(obj)) return obj;\r\n            var extended = extendDeep({}, obj);\r\n\r\n            var changePropertyName = function changePropertyName(from, to) {\r\n              if (extended[LEXICON.hOP](from)) {\r\n                extended[to] = extended[from];\r\n                delete extended[from];\r\n              }\r\n            };\r\n\r\n            changePropertyName('w', _strWidth); //change w to width\r\n\r\n            changePropertyName('h', _strHeight); //change h to height\r\n\r\n            delete extended.c; //delete c (the 'changed' prop)\r\n\r\n            return extended;\r\n          }\r\n\r\n          var obj = {\r\n            destroyed: !!prepare(_destroyed),\r\n            sleeping: !!prepare(_sleeping),\r\n            autoUpdate: prepare(!_mutationObserversConnected),\r\n            widthAuto: prepare(_widthAutoCache),\r\n            heightAuto: prepare(_heightAutoCache),\r\n            padding: prepare(_cssPaddingCache),\r\n            overflowAmount: prepare(_overflowAmountCache),\r\n            hideOverflow: prepare(_hideOverflowCache),\r\n            hasOverflow: prepare(_hasOverflowCache),\r\n            contentScrollSize: prepare(_contentScrollSizeCache),\r\n            viewportSize: prepare(_viewportSize),\r\n            hostSize: prepare(_hostSizeCache),\r\n            documentMixed: prepare(_documentMixed)\r\n          };\r\n          return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\r\n        };\r\n        /**\r\n         * Gets all or specific extension instance.\r\n         * @param extName The name of the extension from which the instance shall be got.\r\n         * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\r\n         */\r\n\r\n\r\n        _base.ext = function (extName) {\r\n          var result;\r\n\r\n          var privateMethods = _extensionsPrivateMethods.split(' ');\r\n\r\n          var i = 0;\r\n\r\n          if (type(extName) == TYPES.s) {\r\n            if (_extensions[LEXICON.hOP](extName)) {\r\n              result = extendDeep({}, _extensions[extName]);\r\n\r\n              for (; i < privateMethods.length; i++) {\r\n                delete result[privateMethods[i]];\r\n              }\r\n            }\r\n          } else {\r\n            result = {};\r\n\r\n            for (i in _extensions) {\r\n              result[i] = extendDeep({}, _base.ext(i));\r\n            }\r\n          }\r\n\r\n          return result;\r\n        };\r\n        /**\r\n         * Adds a extension to this instance.\r\n         * @param extName The name of the extension which shall be added.\r\n         * @param extensionOptions The extension options which shall be used.\r\n         * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\r\n         */\r\n\r\n\r\n        _base.addExt = function (extName, extensionOptions) {\r\n          var registeredExtensionObj = _plugin.extension(extName);\r\n\r\n          var instance;\r\n          var instanceAdded;\r\n          var instanceContract;\r\n          var contractResult;\r\n          var contractFulfilled = true;\r\n\r\n          if (registeredExtensionObj) {\r\n            if (!_extensions[LEXICON.hOP](extName)) {\r\n              instance = registeredExtensionObj.extensionFactory.call(_base, extendDeep({}, registeredExtensionObj.defaultOptions), FRAMEWORK, COMPATIBILITY);\r\n\r\n              if (instance) {\r\n                instanceContract = instance.contract;\r\n\r\n                if (type(instanceContract) == TYPES.f) {\r\n                  contractResult = instanceContract(window);\r\n                  contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\r\n                }\r\n\r\n                if (contractFulfilled) {\r\n                  _extensions[extName] = instance;\r\n                  instanceAdded = instance.added;\r\n                  if (type(instanceAdded) == TYPES.f) instanceAdded(extensionOptions);\r\n                  return _base.ext(extName);\r\n                }\r\n              }\r\n            } else return _base.ext(extName);\r\n          } else console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\r\n        };\r\n        /**\r\n         * Removes a extension from this instance.\r\n         * @param extName The name of the extension which shall be removed.\r\n         * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\r\n         */\r\n\r\n\r\n        _base.removeExt = function (extName) {\r\n          var instance = _extensions[extName];\r\n          var instanceRemoved;\r\n\r\n          if (instance) {\r\n            delete _extensions[extName];\r\n            instanceRemoved = instance.removed;\r\n            if (type(instanceRemoved) == TYPES.f) instanceRemoved();\r\n            return true;\r\n          }\r\n\r\n          return false;\r\n        };\r\n        /**\r\n         * Constructs the plugin.\r\n         * @param targetElement The element to which the plugin shall be applied.\r\n         * @param options The initial options of the plugin.\r\n         * @param extensions The extension(s) which shall be added right after the initialization.\r\n         * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\r\n         */\r\n\r\n\r\n        function construct(targetElement, options, extensions) {\r\n          _defaultOptions = globals.defaultOptions;\r\n          _nativeScrollbarStyling = globals.nativeScrollbarStyling;\r\n          _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\r\n          _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\r\n          _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\r\n          _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior); //parse & set options but don't update\r\n\r\n          setOptions(extendDeep({}, _defaultOptions, options));\r\n          _cssCalc = globals.cssCalc;\r\n          _msieVersion = globals.msie;\r\n          _autoUpdateRecommended = globals.autoUpdateRecommended;\r\n          _supportTransition = globals.supportTransition;\r\n          _supportTransform = globals.supportTransform;\r\n          _supportPassiveEvents = globals.supportPassiveEvents;\r\n          _supportResizeObserver = globals.supportResizeObserver;\r\n          _supportMutationObserver = globals.supportMutationObserver;\r\n          _documentElement = FRAMEWORK(targetElement.ownerDocument);\r\n          _documentElementNative = _documentElement[0];\r\n          _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\r\n          _windowElementNative = _windowElement[0];\r\n          _htmlElement = findFirst(_documentElement, 'html');\r\n          _bodyElement = findFirst(_htmlElement, 'body');\r\n          _targetElement = FRAMEWORK(targetElement);\r\n          _targetElementNative = _targetElement[0];\r\n          _isTextarea = _targetElement.is('textarea');\r\n          _isBody = _targetElement.is('body');\r\n          _documentMixed = _documentElementNative !== document;\r\n          /* On a div Element The if checks only whether:\r\n           * - the targetElement has the class \"os-host\"\r\n           * - the targetElement has a a child with the class \"os-padding\"\r\n           * \r\n           * If that's the case, its assumed the DOM has already the following structure:\r\n           * (The \".os-host\" element is the targetElement)\r\n           *\r\n           *  <div class=\"os-host\">\r\n           *      <div class=\"os-resize-observer-host\"></div>\r\n           *      <div class=\"os-padding\">\r\n           *          <div class=\"os-viewport\">\r\n           *              <div class=\"os-content\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar-corner\"></div>\r\n           *  </div>\r\n           *\r\n           * =====================================================================================\r\n           * \r\n           * On a Textarea Element The if checks only whether:\r\n           * - the targetElement has the class \"os-textarea\" \r\n           * - the targetElement is inside a element with the class \"os-content\" \r\n           * \r\n           * If that's the case, its assumed the DOM has already the following structure:\r\n           * (The \".os-textarea\" (textarea) element is the targetElement)\r\n           *\r\n           *  <div class=\"os-host-textarea\">\r\n           *      <div class=\"os-resize-observer-host\"></div>\r\n           *      <div class=\"os-padding os-text-inherit\">\r\n           *          <div class=\"os-viewport os-text-inherit\">\r\n           *              <div class=\"os-content os-text-inherit\">\r\n           *                  <div class=\"os-textarea-cover\"></div>\r\n           *                  <textarea class=\"os-textarea os-text-inherit\"></textarea>\r\n           *              </div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar-corner\"></div>\r\n           *  </div>\r\n           */\r\n\r\n          _domExists = _isTextarea ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement) : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];\r\n          var initBodyScroll;\r\n\r\n          var _bodyMouseTouchDownListener; //check if the plugin hasn't to be initialized\r\n\r\n\r\n          if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\r\n            dispatchCallback('onInitializationWithdrawn');\r\n\r\n            if (_domExists) {\r\n              setupStructureDOM(true);\r\n              setupScrollbarsDOM(true);\r\n              setupScrollbarCornerDOM(true);\r\n            }\r\n\r\n            _destroyed = true;\r\n            _sleeping = true;\r\n            return _base;\r\n          }\r\n\r\n          if (_isBody) {\r\n            initBodyScroll = {};\r\n            initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\r\n            initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\r\n\r\n            _bodyMouseTouchDownListener = function bodyMouseTouchDownListener() {\r\n              _viewportElement.removeAttr(LEXICON.ti);\r\n\r\n              setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, true, true);\r\n            };\r\n          } //build OverlayScrollbars DOM\r\n\r\n\r\n          setupStructureDOM();\r\n          setupScrollbarsDOM();\r\n          setupScrollbarCornerDOM(); //create OverlayScrollbars events\r\n\r\n          setupStructureEvents();\r\n          setupScrollbarEvents(true);\r\n          setupScrollbarEvents(false);\r\n          setupScrollbarCornerEvents(); //create mutation observers\r\n\r\n          createMutationObservers(); //build resize observer for the host element\r\n\r\n          setupResizeObserver(_sizeObserverElement, hostOnResized);\r\n\r\n          if (_isBody) {\r\n            //apply the body scroll to handle it right in the update method\r\n            _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t); //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\r\n\r\n\r\n            if (document.activeElement == targetElement && _viewportElementNative.focus) {\r\n              //set a tabindex to make the viewportElement focusable\r\n              _viewportElement.attr(LEXICON.ti, '-1');\r\n\r\n              _viewportElementNative.focus();\r\n              /* the tabindex has to be removed due to;\r\n               * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\r\n               * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n               */\r\n\r\n\r\n              setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, false, true);\r\n            }\r\n          } //update for the first time & initialize cache\r\n\r\n\r\n          _base.update(_strAuto); //the plugin is initialized now!\r\n\r\n\r\n          _initialized = true;\r\n          dispatchCallback('onInitialized'); //call all callbacks which would fire before the initialized was complete\r\n\r\n          each(_callbacksInitQeueue, function (index, value) {\r\n            dispatchCallback(value.n, value.a);\r\n          });\r\n          _callbacksInitQeueue = []; //add extensions\r\n\r\n          if (type(extensions) == TYPES.s) extensions = [extensions];\r\n          if (COMPATIBILITY.isA(extensions)) each(extensions, function (index, value) {\r\n            _base.addExt(value);\r\n          });else if (FRAMEWORK.isPlainObject(extensions)) each(extensions, function (key, value) {\r\n            _base.addExt(key, value);\r\n          }); //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\r\n\r\n          setTimeout(function () {\r\n            if (_supportTransition && !_destroyed) addClass(_hostElement, _classNameHostTransition);\r\n          }, 333);\r\n          return _base;\r\n        }\r\n\r\n        if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {\r\n          INSTANCES(pluginTargetElement, _base);\r\n        }\r\n\r\n        return _base;\r\n      }\r\n      /**\r\n       * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\r\n       * @param pluginTargetElements The elements to which the Plugin shall be initialized.\r\n       * @param options The custom options with which the plugin shall be initialized.\r\n       * @param extensions The extension(s) which shall be added right after initialization.\r\n       * @returns {*}\r\n       */\r\n\r\n\r\n      _plugin = window[PLUGINNAME] = function (pluginTargetElements, options, extensions) {\r\n        if (arguments[LEXICON.l] === 0) return this;\r\n        var arr = [];\r\n        var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\r\n        var inst;\r\n        var result; //pluginTargetElements is null or undefined\r\n\r\n        if (!pluginTargetElements) return optsIsPlainObj || !options ? result : arr;\r\n        /*\r\n           pluginTargetElements will be converted to:\r\n           1. A jQueryElement Array\r\n           2. A HTMLElement Array\r\n           3. A Array with a single HTML Element\r\n           so pluginTargetElements is always a array.\r\n        */\r\n\r\n        pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined$1 ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];\r\n        initOverlayScrollbarsStatics();\r\n\r\n        if (pluginTargetElements[LEXICON.l] > 0) {\r\n          if (optsIsPlainObj) {\r\n            FRAMEWORK.each(pluginTargetElements, function (i, v) {\r\n              inst = v;\r\n              if (inst !== undefined$1) arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\r\n            });\r\n          } else {\r\n            FRAMEWORK.each(pluginTargetElements, function (i, v) {\r\n              inst = INSTANCES(v);\r\n              if (options === '!' && _plugin.valid(inst) || COMPATIBILITY.type(options) == TYPES.f && options(v, inst)) arr.push(inst);else if (options === undefined$1) arr.push(inst);\r\n            });\r\n          }\r\n\r\n          result = arr[LEXICON.l] === 1 ? arr[0] : arr;\r\n        }\r\n\r\n        return result;\r\n      };\r\n      /**\r\n       * Returns a object which contains global information about the plugin and each instance of it.\r\n       * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\r\n       */\r\n\r\n\r\n      _plugin.globals = function () {\r\n        initOverlayScrollbarsStatics();\r\n        var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);\r\n        delete globals['msie'];\r\n        return globals;\r\n      };\r\n      /**\r\n       * Gets or Sets the default options for each new plugin initialization.\r\n       * @param newDefaultOptions The object with which the default options shall be extended.\r\n       */\r\n\r\n\r\n      _plugin.defaultOptions = function (newDefaultOptions) {\r\n        initOverlayScrollbarsStatics();\r\n        var currDefaultOptions = _pluginsGlobals.defaultOptions;\r\n        if (newDefaultOptions === undefined$1) return FRAMEWORK.extend(true, {}, currDefaultOptions); //set the new default options\r\n\r\n        _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\r\n      };\r\n      /**\r\n       * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\r\n       * @param osInstance The potential OverlayScrollbars instance which shall be checked.\r\n       * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\r\n       */\r\n\r\n\r\n      _plugin.valid = function (osInstance) {\r\n        return osInstance instanceof _plugin && !osInstance.getState().destroyed;\r\n      };\r\n      /**\r\n       * Registers, Unregisters or returns a extension.\r\n       * Register: Pass the name and the extension. (defaultOptions is optional)\r\n       * Unregister: Pass the name and anything except a function as extension parameter.\r\n       * Get extension: Pass the name of the extension which shall be got.\r\n       * Get all extensions: Pass no arguments.\r\n       * @param extensionName The name of the extension which shall be registered, unregistered or returned.\r\n       * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\r\n       * @param defaultOptions The default options which shall be used for the registered extension.\r\n       */\r\n\r\n\r\n      _plugin.extension = function (extensionName, extension, defaultOptions) {\r\n        var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\r\n        var argLen = arguments[LEXICON.l];\r\n        var i = 0;\r\n\r\n        if (argLen < 1 || !extNameTypeString) {\r\n          //return a copy of all extension objects\r\n          return FRAMEWORK.extend(true, {\r\n            length: _pluginsExtensions[LEXICON.l]\r\n          }, _pluginsExtensions);\r\n        } else if (extNameTypeString) {\r\n          if (COMPATIBILITY.type(extension) == TYPES.f) {\r\n            //register extension\r\n            _pluginsExtensions.push({\r\n              name: extensionName,\r\n              extensionFactory: extension,\r\n              defaultOptions: defaultOptions\r\n            });\r\n          } else {\r\n            for (; i < _pluginsExtensions[LEXICON.l]; i++) {\r\n              if (_pluginsExtensions[i].name === extensionName) {\r\n                if (argLen > 1) _pluginsExtensions.splice(i, 1); //remove extension\r\n                else return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]); //return extension with the given name\r\n              }\r\n            }\r\n          }\r\n        }\r\n      };\r\n\r\n      return _plugin;\r\n    }();\r\n\r\n    if (JQUERY && JQUERY.fn) {\r\n      /**\r\n       * The jQuery initialization interface.\r\n       * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\r\n       * @param extensions The extension(s) which shall be added right after initialization.\r\n       * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\r\n       */\r\n      JQUERY.fn.overlayScrollbars = function (options, extensions) {\r\n        var _elements = this;\r\n\r\n        if (JQUERY.isPlainObject(options)) {\r\n          JQUERY.each(_elements, function () {\r\n            PLUGIN(this, options, extensions);\r\n          });\r\n          return _elements;\r\n        } else return PLUGIN(_elements, options);\r\n      };\r\n    }\r\n\r\n    return PLUGIN;\r\n  });\r\n})(OverlayScrollbars$1);\r\n\r\nvar OverlayScrollbars = OverlayScrollbars$1.exports;\r\n/**\r\n * Using overlayscrollbars-react component results use the esm modules\r\n * which doesn't go through babel leading to IE 11 uncompatibility\r\n * A PR is submitted that may fix this:\r\n * https://github.com/KingSora/OverlayScrollbars/pull/218\r\n * */\r\n\r\nvar OverlayScrollbarsComponent = function OverlayScrollbarsComponent(_a) {\r\n  var _a$options = _a.options,\r\n      options = _a$options === void 0 ? {} : _a$options,\r\n      extensions = _a.extensions,\r\n      className = _a.className,\r\n      children = _a.children,\r\n      rest = __rest(_a, [\"options\", \"extensions\", \"className\", \"children\"]);\r\n\r\n  var osTargetRef = useRef();\r\n  var osInstance = useRef();\r\n  useEffect(function () {\r\n    osInstance.current = OverlayScrollbars(osTargetRef.current, options, extensions);\r\n    mergeHostClassNames(osInstance.current, className);\r\n    return function () {\r\n      if (OverlayScrollbars.valid(osInstance.current)) {\r\n        osInstance.current.destroy();\r\n        osInstance.current = null;\r\n      }\r\n    };\r\n  }, []);\r\n  useEffect(function () {\r\n    if (OverlayScrollbars.valid(osInstance.current)) {\r\n      osInstance.current.options(options);\r\n    }\r\n  }, [options]);\r\n  useEffect(function () {\r\n    if (OverlayScrollbars.valid(osInstance.current)) {\r\n      mergeHostClassNames(osInstance.current, className);\r\n    }\r\n  }, [className]);\r\n  return React__default.createElement(\"div\", Object.assign({\r\n    className: \"os-host\"\r\n  }, rest, {\r\n    ref: osTargetRef\r\n  }), React__default.createElement(\"div\", {\r\n    className: \"os-resize-observer-host\"\r\n  }), React__default.createElement(\"div\", {\r\n    className: \"os-padding\"\r\n  }, React__default.createElement(\"div\", {\r\n    className: \"os-viewport\"\r\n  }, React__default.createElement(\"div\", {\r\n    className: \"os-content\"\r\n  }, children))), React__default.createElement(\"div\", {\r\n    className: \"os-scrollbar os-scrollbar-horizontal \"\r\n  }, React__default.createElement(\"div\", {\r\n    className: \"os-scrollbar-track\"\r\n  }, React__default.createElement(\"div\", {\r\n    className: \"os-scrollbar-handle\"\r\n  }))), React__default.createElement(\"div\", {\r\n    className: \"os-scrollbar os-scrollbar-vertical\"\r\n  }, React__default.createElement(\"div\", {\r\n    className: \"os-scrollbar-track\"\r\n  }, React__default.createElement(\"div\", {\r\n    className: \"os-scrollbar-handle\"\r\n  }))), React__default.createElement(\"div\", {\r\n    className: \"os-scrollbar-corner\"\r\n  }));\r\n};\r\n\r\nfunction mergeHostClassNames(osInstance, className) {\r\n  if (OverlayScrollbars.valid(osInstance)) {\r\n    var _osInstance$getElemen = osInstance.getElements(),\r\n        host = _osInstance$getElemen.host;\r\n\r\n    var regex = new RegExp(\"(^os-host([-_].+|)$)|\".concat(osInstance.options().className.replace(/\\s/g, '$|'), \"$\"), 'g');\r\n    var osClassNames = host.className.split(' ').filter(function (name) {\r\n      return name.match(regex);\r\n    }).join(' ');\r\n    host.className = \"\".concat(osClassNames, \" \").concat(className || '');\r\n  }\r\n}\r\n\r\nexport { OverlayScrollbarsComponent, OverlayScrollbarsComponent as default };\r\n"],
  "mappings": "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",
  "names": ["obj", "window", "fNOP", "fBound", "length", "oneHandler", "children", "parent", "contents", "convert", "recursive", "checkObjectProps", "template", "validatedOptions", "validatedOptionsPrepared", "msie", "onResize", "loop", "remove", "callback", "reset", "onResized", "onScroll", "directionChanged", "_mutationObserverHostCallback", "_mutationObserverContentCallback", "action", "index", "checkPropertyName", "checkCacheAutoForce", "getHostSize", "getViewportSize", "setContentGlueElementCSSfunction", "setOverflowVariables", "setContentElementCSS", "setViewportCSS", "refreshScrollbarsVisibility", "i", "applyAdoptedAttrs", "selectOrGenerateScrollbarDOM", "scrollActionFinsished", "scrollActionInstantFinished", "scrollAction", "hide", "getScrollRatio", "getHandleOffset", "scrollRatio", "splitCssStyleByComma", "appendClasses", "updateScrollbarInfos", "coordinates", "finalizeBlock", "changePropertyName", "options", "extensions", "OverlayScrollbarsComponent", "React__default"]
}
