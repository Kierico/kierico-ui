{
  "version": 3,
  "sources": ["../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/jsdocParser.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/types.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/utils/defaultValue.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/utils/string.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/utils/docgenInfo.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/utils.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/flow/createType.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/flow/createDefaultValue.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/flow/createPropDef.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/typeScript/createType.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/typeScript/createDefaultValue.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/typeScript/createPropDef.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/typescript/convert.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/flow/convert.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/proptypes/convert.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/utils.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/index.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/createPropDef.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/extractDocgenProps.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/enhanceArgTypes.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/shared.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/hasDocsOrControls.js"],
  "sourcesContent": ["import \"core-js/modules/es.array.includes.js\";\r\nimport \"core-js/modules/es.string.includes.js\";\r\nimport \"core-js/modules/es.symbol.js\";\r\nimport \"core-js/modules/es.symbol.description.js\";\r\nimport \"core-js/modules/es.function.name.js\";\r\nimport \"core-js/modules/es.regexp.exec.js\";\r\nimport \"core-js/modules/es.string.replace.js\";\r\nimport \"core-js/modules/es.array.map.js\";\r\nimport \"core-js/modules/es.array.concat.js\";\r\nimport \"core-js/modules/es.array.join.js\";\r\nimport doctrine from 'doctrine';\r\n\r\nfunction containsJsDoc(value) {\r\n  return value != null && value.includes('@');\r\n}\r\n\r\nfunction parse(content, tags) {\r\n  var ast;\r\n\r\n  try {\r\n    ast = doctrine.parse(content, {\r\n      tags: tags,\r\n      sloppy: true\r\n    });\r\n  } catch (e) {\r\n    // eslint-disable-next-line no-console\r\n    console.error(e);\r\n    throw new Error('Cannot parse JSDoc tags.');\r\n  }\r\n\r\n  return ast;\r\n}\r\n\r\nvar DEFAULT_OPTIONS = {\r\n  tags: ['param', 'arg', 'argument', 'returns', 'ignore']\r\n};\r\nexport var parseJsDoc = function parseJsDoc(value) {\r\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTIONS;\r\n\r\n  if (!containsJsDoc(value)) {\r\n    return {\r\n      includesJsDoc: false,\r\n      ignore: false\r\n    };\r\n  }\r\n\r\n  var jsDocAst = parse(value, options.tags);\r\n  var extractedTags = extractJsDocTags(jsDocAst);\r\n\r\n  if (extractedTags.ignore) {\r\n    // There is no point in doing other stuff since this prop will not be rendered.\r\n    return {\r\n      includesJsDoc: true,\r\n      ignore: true\r\n    };\r\n  }\r\n\r\n  return {\r\n    includesJsDoc: true,\r\n    ignore: false,\r\n    // Always use the parsed description to ensure JSDoc is removed from the description.\r\n    description: jsDocAst.description,\r\n    extractedTags: extractedTags\r\n  };\r\n};\r\n\r\nfunction extractJsDocTags(ast) {\r\n  var extractedTags = {\r\n    params: null,\r\n    returns: null,\r\n    ignore: false\r\n  };\r\n\r\n  for (var i = 0; i < ast.tags.length; i += 1) {\r\n    var tag = ast.tags[i];\r\n\r\n    if (tag.title === 'ignore') {\r\n      extractedTags.ignore = true; // Once we reach an @ignore tag, there is no point in parsing the other tags since we will not render the prop.\r\n\r\n      break;\r\n    } else {\r\n      switch (tag.title) {\r\n        // arg & argument are aliases for param.\r\n        case 'param':\r\n        case 'arg':\r\n        case 'argument':\r\n          {\r\n            var paramTag = extractParam(tag);\r\n\r\n            if (paramTag != null) {\r\n              if (extractedTags.params == null) {\r\n                extractedTags.params = [];\r\n              }\r\n\r\n              extractedTags.params.push(paramTag);\r\n            }\r\n\r\n            break;\r\n          }\r\n\r\n        case 'returns':\r\n          {\r\n            var returnsTag = extractReturns(tag);\r\n\r\n            if (returnsTag != null) {\r\n              extractedTags.returns = returnsTag;\r\n            }\r\n\r\n            break;\r\n          }\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return extractedTags;\r\n}\r\n\r\nfunction extractParam(tag) {\r\n  var paramName = tag.name; // When the @param doesn't have a name but have a type and a description, \"null-null\" is returned.\r\n\r\n  if (paramName != null && paramName !== 'null-null') {\r\n    return {\r\n      name: tag.name,\r\n      type: tag.type,\r\n      description: tag.description,\r\n      getPrettyName: function getPrettyName() {\r\n        if (paramName.includes('null')) {\r\n          // There is a few cases in which the returned param name contains \"null\".\r\n          // - @param {SyntheticEvent} event- Original SyntheticEvent\r\n          // - @param {SyntheticEvent} event.\\n@returns {string}\r\n          return paramName.replace('-null', '').replace('.null', '');\r\n        }\r\n\r\n        return tag.name;\r\n      },\r\n      getTypeName: function getTypeName() {\r\n        return tag.type != null ? extractTypeName(tag.type) : null;\r\n      }\r\n    };\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction extractReturns(tag) {\r\n  if (tag.type != null) {\r\n    return {\r\n      type: tag.type,\r\n      description: tag.description,\r\n      getTypeName: function getTypeName() {\r\n        return extractTypeName(tag.type);\r\n      }\r\n    };\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction extractTypeName(type) {\r\n  if (type.type === 'NameExpression') {\r\n    return type.name;\r\n  }\r\n\r\n  if (type.type === 'RecordType') {\r\n    var recordFields = type.fields.map(function (field) {\r\n      if (field.value != null) {\r\n        var valueTypeName = extractTypeName(field.value);\r\n        return \"\".concat(field.key, \": \").concat(valueTypeName);\r\n      }\r\n\r\n      return field.key;\r\n    });\r\n    return \"({\".concat(recordFields.join(', '), \"})\");\r\n  }\r\n\r\n  if (type.type === 'UnionType') {\r\n    var unionElements = type.elements.map(extractTypeName);\r\n    return \"(\".concat(unionElements.join('|'), \")\");\r\n  } // Only support untyped array: []. Might add more support later if required.\r\n\r\n\r\n  if (type.type === 'ArrayType') {\r\n    return '[]';\r\n  }\r\n\r\n  if (type.type === 'TypeApplication') {\r\n    if (type.expression != null) {\r\n      if (type.expression.name === 'Array') {\r\n        var arrayType = extractTypeName(type.applications[0]);\r\n        return \"\".concat(arrayType, \"[]\");\r\n      }\r\n    }\r\n  }\r\n\r\n  if (type.type === 'NullableType' || type.type === 'NonNullableType' || type.type === 'OptionalType') {\r\n    return extractTypeName(type.expression);\r\n  }\r\n\r\n  if (type.type === 'AllLiteral') {\r\n    return 'any';\r\n  }\r\n\r\n  return null;\r\n}", "// eslint-disable-next-line @typescript-eslint/no-empty-interface\r\n// export type DocgenType = DocgenPropType | DocgenFlowType | DocgenTypeScriptType;\r\nexport var TypeSystem;\r\n\r\n(function (TypeSystem) {\r\n  TypeSystem[\"JAVASCRIPT\"] = \"JavaScript\";\r\n  TypeSystem[\"FLOW\"] = \"Flow\";\r\n  TypeSystem[\"TYPESCRIPT\"] = \"TypeScript\";\r\n  TypeSystem[\"UNKNOWN\"] = \"Unknown\";\r\n})(TypeSystem || (TypeSystem = {}));", "import \"core-js/modules/es.object.to-string.js\";\r\nvar BLACKLIST = ['null', 'undefined'];\r\nexport function isDefaultValueBlacklisted(value) {\r\n  return BLACKLIST.some(function (x) {\r\n    return x === value;\r\n  });\r\n}", "export var str = function str(obj) {\r\n  if (!obj) {\r\n    return '';\r\n  }\r\n\r\n  if (typeof obj === 'string') {\r\n    return obj;\r\n  }\r\n\r\n  throw new Error(\"Description: expected string, got: \".concat(JSON.stringify(obj)));\r\n};", "import \"core-js/modules/es.object.keys.js\";\r\nimport \"core-js/modules/es.symbol.js\";\r\nimport \"core-js/modules/es.symbol.description.js\";\r\n\r\n/* eslint-disable no-underscore-dangle */\r\nimport { str } from './string';\r\nexport function hasDocgen(component) {\r\n  return !!component.__docgenInfo;\r\n}\r\nexport function isValidDocgenSection(docgenSection) {\r\n  return docgenSection != null && Object.keys(docgenSection).length > 0;\r\n}\r\nexport function getDocgenSection(component, section) {\r\n  return hasDocgen(component) ? component.__docgenInfo[section] : null;\r\n}\r\nexport function getDocgenDescription(component) {\r\n  return hasDocgen(component) && str(component.__docgenInfo.description);\r\n}", "import \"core-js/modules/es.regexp.exec.js\";\r\nimport \"core-js/modules/es.string.replace.js\";\r\nexport var MAX_TYPE_SUMMARY_LENGTH = 90;\r\nexport var MAX_DEFAULT_VALUE_SUMMARY_LENGTH = 50;\r\nexport function isTooLongForTypeSummary(value) {\r\n  return value.length > MAX_TYPE_SUMMARY_LENGTH;\r\n}\r\nexport function isTooLongForDefaultValueSummary(value) {\r\n  return value.length > MAX_DEFAULT_VALUE_SUMMARY_LENGTH;\r\n}\r\nexport function createSummaryValue(summary, detail) {\r\n  if (summary === detail) {\r\n    return {\r\n      summary: summary\r\n    };\r\n  }\r\n\r\n  return {\r\n    summary: summary,\r\n    detail: detail\r\n  };\r\n}\r\nexport var normalizeNewlines = function normalizeNewlines(string) {\r\n  return string.replace(/\\\\r\\\\n/g, '\\\\n');\r\n};", "import \"core-js/modules/es.function.name.js\";\r\nimport \"core-js/modules/es.array.join.js\";\r\nimport \"core-js/modules/es.array.map.js\";\r\nimport \"core-js/modules/es.regexp.exec.js\";\r\nimport \"core-js/modules/es.string.replace.js\";\r\nimport { createSummaryValue, isTooLongForTypeSummary } from '../../utils';\r\nvar FlowTypesType;\r\n\r\n(function (FlowTypesType) {\r\n  FlowTypesType[\"UNION\"] = \"union\";\r\n  FlowTypesType[\"SIGNATURE\"] = \"signature\";\r\n})(FlowTypesType || (FlowTypesType = {}));\r\n\r\nfunction generateUnionElement(_ref) {\r\n  var name = _ref.name,\r\n      value = _ref.value,\r\n      elements = _ref.elements,\r\n      raw = _ref.raw;\r\n\r\n  if (value != null) {\r\n    return value;\r\n  }\r\n\r\n  if (elements != null) {\r\n    return elements.map(generateUnionElement).join(' | ');\r\n  }\r\n\r\n  if (raw != null) {\r\n    return raw;\r\n  }\r\n\r\n  return name;\r\n}\r\n\r\nfunction generateUnion(_ref2) {\r\n  var name = _ref2.name,\r\n      raw = _ref2.raw,\r\n      elements = _ref2.elements;\r\n\r\n  if (elements != null) {\r\n    return createSummaryValue(elements.map(generateUnionElement).join(' | '));\r\n  }\r\n\r\n  if (raw != null) {\r\n    // Flow Unions can be defined with or without a leading `|` character, so try to remove it.\r\n    return createSummaryValue(raw.replace(/^\\|\\s*/, ''));\r\n  }\r\n\r\n  return createSummaryValue(name);\r\n}\r\n\r\nfunction generateFuncSignature(_ref3) {\r\n  var type = _ref3.type,\r\n      raw = _ref3.raw;\r\n\r\n  if (raw != null) {\r\n    return createSummaryValue(raw);\r\n  }\r\n\r\n  return createSummaryValue(type);\r\n}\r\n\r\nfunction generateObjectSignature(_ref4) {\r\n  var type = _ref4.type,\r\n      raw = _ref4.raw;\r\n\r\n  if (raw != null) {\r\n    return !isTooLongForTypeSummary(raw) ? createSummaryValue(raw) : createSummaryValue(type, raw);\r\n  }\r\n\r\n  return createSummaryValue(type);\r\n}\r\n\r\nfunction generateSignature(flowType) {\r\n  var type = flowType.type;\r\n  return type === 'object' ? generateObjectSignature(flowType) : generateFuncSignature(flowType);\r\n}\r\n\r\nfunction generateDefault(_ref5) {\r\n  var name = _ref5.name,\r\n      raw = _ref5.raw;\r\n\r\n  if (raw != null) {\r\n    return !isTooLongForTypeSummary(raw) ? createSummaryValue(raw) : createSummaryValue(name, raw);\r\n  }\r\n\r\n  return createSummaryValue(name);\r\n}\r\n\r\nexport function createType(type) {\r\n  // A type could be null if a defaultProp has been provided without a type definition.\r\n  if (type == null) {\r\n    return null;\r\n  }\r\n\r\n  switch (type.name) {\r\n    case FlowTypesType.UNION:\r\n      return generateUnion(type);\r\n\r\n    case FlowTypesType.SIGNATURE:\r\n      return generateSignature(type);\r\n\r\n    default:\r\n      return generateDefault(type);\r\n  }\r\n}", "import \"core-js/modules/es.function.name.js\";\r\nimport { createSummaryValue, isTooLongForDefaultValueSummary } from '../../utils';\r\nimport { isDefaultValueBlacklisted } from '../utils/defaultValue';\r\nexport function createDefaultValue(defaultValue, type) {\r\n  if (defaultValue != null) {\r\n    var value = defaultValue.value;\r\n\r\n    if (!isDefaultValueBlacklisted(value)) {\r\n      return !isTooLongForDefaultValueSummary(value) ? createSummaryValue(value) : createSummaryValue(type.name, value);\r\n    }\r\n  }\r\n\r\n  return null;\r\n}", "import \"core-js/modules/es.symbol.js\";\r\nimport \"core-js/modules/es.symbol.description.js\";\r\nimport { createType } from './createType';\r\nimport { createDefaultValue } from './createDefaultValue';\r\nexport var createFlowPropDef = function createFlowPropDef(propName, docgenInfo) {\r\n  var flowType = docgenInfo.flowType,\r\n      description = docgenInfo.description,\r\n      required = docgenInfo.required,\r\n      defaultValue = docgenInfo.defaultValue;\r\n  return {\r\n    name: propName,\r\n    type: createType(flowType),\r\n    required: required,\r\n    description: description,\r\n    defaultValue: createDefaultValue(defaultValue, flowType)\r\n  };\r\n};", "import \"core-js/modules/es.regexp.exec.js\";\r\nimport \"core-js/modules/es.string.replace.js\";\r\nimport \"core-js/modules/es.function.name.js\";\r\nimport { createSummaryValue } from '../../utils';\r\nexport function createType(_ref) {\r\n  var tsType = _ref.tsType,\r\n      required = _ref.required;\r\n\r\n  // A type could be null if a defaultProp has been provided without a type definition.\r\n  if (tsType == null) {\r\n    return null;\r\n  }\r\n\r\n  if (!required) {\r\n    return createSummaryValue(tsType.name.replace(' | undefined', ''));\r\n  }\r\n\r\n  return createSummaryValue(tsType.name);\r\n}", "import { createSummaryValue } from '../../utils';\r\nimport { isDefaultValueBlacklisted } from '../utils/defaultValue';\r\nexport function createDefaultValue(_ref) {\r\n  var defaultValue = _ref.defaultValue;\r\n\r\n  if (defaultValue != null) {\r\n    var value = defaultValue.value;\r\n\r\n    if (!isDefaultValueBlacklisted(value)) {\r\n      return createSummaryValue(value);\r\n    }\r\n  }\r\n\r\n  return null;\r\n}", "import \"core-js/modules/es.symbol.js\";\r\nimport \"core-js/modules/es.symbol.description.js\";\r\nimport { createType } from './createType';\r\nimport { createDefaultValue } from './createDefaultValue';\r\nexport var createTsPropDef = function createTsPropDef(propName, docgenInfo) {\r\n  var description = docgenInfo.description,\r\n      required = docgenInfo.required;\r\n  return {\r\n    name: propName,\r\n    type: createType(docgenInfo),\r\n    required: required,\r\n    description: description,\r\n    defaultValue: createDefaultValue(docgenInfo)\r\n  };\r\n};", "import \"core-js/modules/es.object.to-string.js\";\r\nimport \"core-js/modules/web.dom-collections.for-each.js\";\r\nimport \"core-js/modules/es.function.name.js\";\r\nimport \"core-js/modules/es.object.assign.js\";\r\nimport \"core-js/modules/es.array.map.js\";\r\n\r\n/* eslint-disable no-case-declarations */\r\nvar convertSig = function convertSig(type) {\r\n  switch (type.type) {\r\n    case 'function':\r\n      return {\r\n        name: 'function'\r\n      };\r\n\r\n    case 'object':\r\n      var values = {};\r\n      type.signature.properties.forEach(function (prop) {\r\n        values[prop.key] = convert(prop.value);\r\n      });\r\n      return {\r\n        name: 'object',\r\n        value: values\r\n      };\r\n\r\n    default:\r\n      throw new Error(\"Unknown: \".concat(type));\r\n  }\r\n};\r\n\r\nexport var convert = function convert(type) {\r\n  var name = type.name,\r\n      raw = type.raw;\r\n  var base = {};\r\n  if (typeof raw !== 'undefined') base.raw = raw;\r\n\r\n  switch (type.name) {\r\n    case 'string':\r\n    case 'number':\r\n    case 'symbol':\r\n    case 'boolean':\r\n      {\r\n        return Object.assign({}, base, {\r\n          name: name\r\n        });\r\n      }\r\n\r\n    case 'Array':\r\n      {\r\n        return Object.assign({}, base, {\r\n          name: 'array',\r\n          value: type.elements.map(convert)\r\n        });\r\n      }\r\n\r\n    case 'signature':\r\n      return Object.assign({}, base, convertSig(type));\r\n\r\n    case 'union':\r\n    case 'intersection':\r\n      return Object.assign({}, base, {\r\n        name: name,\r\n        value: type.elements.map(convert)\r\n      });\r\n\r\n    default:\r\n      return Object.assign({}, base, {\r\n        name: 'other',\r\n        value: name\r\n      });\r\n  }\r\n};", "import \"core-js/modules/es.function.name.js\";\r\nimport \"core-js/modules/es.regexp.exec.js\";\r\nimport \"core-js/modules/es.string.replace.js\";\r\nimport \"core-js/modules/es.object.to-string.js\";\r\nimport \"core-js/modules/web.dom-collections.for-each.js\";\r\nimport \"core-js/modules/es.object.assign.js\";\r\nimport \"core-js/modules/es.array.map.js\";\r\n\r\n/* eslint-disable no-case-declarations */\r\nvar isLiteral = function isLiteral(type) {\r\n  return type.name === 'literal';\r\n};\r\n\r\nvar toEnumOption = function toEnumOption(element) {\r\n  return element.value.replace(/['|\"]/g, '');\r\n};\r\n\r\nvar convertSig = function convertSig(type) {\r\n  switch (type.type) {\r\n    case 'function':\r\n      return {\r\n        name: 'function'\r\n      };\r\n\r\n    case 'object':\r\n      var values = {};\r\n      type.signature.properties.forEach(function (prop) {\r\n        values[prop.key] = convert(prop.value);\r\n      });\r\n      return {\r\n        name: 'object',\r\n        value: values\r\n      };\r\n\r\n    default:\r\n      throw new Error(\"Unknown: \".concat(type));\r\n  }\r\n};\r\n\r\nexport var convert = function convert(type) {\r\n  var name = type.name,\r\n      raw = type.raw;\r\n  var base = {};\r\n  if (typeof raw !== 'undefined') base.raw = raw;\r\n\r\n  switch (type.name) {\r\n    case 'literal':\r\n      return Object.assign({}, base, {\r\n        name: 'other',\r\n        value: type.value\r\n      });\r\n\r\n    case 'string':\r\n    case 'number':\r\n    case 'symbol':\r\n    case 'boolean':\r\n      {\r\n        return Object.assign({}, base, {\r\n          name: name\r\n        });\r\n      }\r\n\r\n    case 'Array':\r\n      {\r\n        return Object.assign({}, base, {\r\n          name: 'array',\r\n          value: type.elements.map(convert)\r\n        });\r\n      }\r\n\r\n    case 'signature':\r\n      return Object.assign({}, base, convertSig(type));\r\n\r\n    case 'union':\r\n      if (type.elements.every(isLiteral)) {\r\n        return Object.assign({}, base, {\r\n          name: 'enum',\r\n          value: type.elements.map(toEnumOption)\r\n        });\r\n      }\r\n\r\n      return Object.assign({}, base, {\r\n        name: name,\r\n        value: type.elements.map(convert)\r\n      });\r\n\r\n    case 'intersection':\r\n      return Object.assign({}, base, {\r\n        name: name,\r\n        value: type.elements.map(convert)\r\n      });\r\n\r\n    default:\r\n      return Object.assign({}, base, {\r\n        name: 'other',\r\n        value: name\r\n      });\r\n  }\r\n};", "import \"core-js/modules/es.function.name.js\";\r\nimport \"core-js/modules/es.array.map.js\";\r\nimport \"core-js/modules/es.number.is-nan.js\";\r\nimport \"core-js/modules/es.number.constructor.js\";\r\nimport \"core-js/modules/es.object.assign.js\";\r\nimport \"core-js/modules/es.regexp.exec.js\";\r\nimport \"core-js/modules/es.string.split.js\";\r\nimport \"core-js/modules/es.array.concat.js\";\r\n\r\n/* eslint-disable no-case-declarations */\r\nimport mapValues from 'lodash/mapValues';\r\nimport { includesQuotes, trimQuotes } from '../utils';\r\nvar SIGNATURE_REGEXP = /^\\(.*\\) => /;\r\nexport var convert = function convert(type) {\r\n  var name = type.name,\r\n      raw = type.raw,\r\n      computed = type.computed,\r\n      value = type.value;\r\n  var base = {};\r\n  if (typeof raw !== 'undefined') base.raw = raw;\r\n\r\n  switch (name) {\r\n    case 'enum':\r\n      {\r\n        var _values = computed ? value : value.map(function (v) {\r\n          var trimmedValue = trimQuotes(v.value);\r\n          return includesQuotes(v.value) || Number.isNaN(Number(trimmedValue)) ? trimmedValue : Number(trimmedValue);\r\n        });\r\n\r\n        return Object.assign({}, base, {\r\n          name: name,\r\n          value: _values\r\n        });\r\n      }\r\n\r\n    case 'string':\r\n    case 'number':\r\n    case 'symbol':\r\n      return Object.assign({}, base, {\r\n        name: name\r\n      });\r\n\r\n    case 'func':\r\n      return Object.assign({}, base, {\r\n        name: 'function'\r\n      });\r\n\r\n    case 'bool':\r\n    case 'boolean':\r\n      return Object.assign({}, base, {\r\n        name: 'boolean'\r\n      });\r\n\r\n    case 'arrayOf':\r\n    case 'array':\r\n      return Object.assign({}, base, {\r\n        name: 'array',\r\n        value: value && convert(value)\r\n      });\r\n\r\n    case 'object':\r\n      return Object.assign({}, base, {\r\n        name: name\r\n      });\r\n\r\n    case 'objectOf':\r\n      return Object.assign({}, base, {\r\n        name: name,\r\n        value: convert(value)\r\n      });\r\n\r\n    case 'shape':\r\n    case 'exact':\r\n      var values = mapValues(value, function (field) {\r\n        return convert(field);\r\n      });\r\n      return Object.assign({}, base, {\r\n        name: 'object',\r\n        value: values\r\n      });\r\n\r\n    case 'union':\r\n      return Object.assign({}, base, {\r\n        name: 'union',\r\n        value: value.map(function (v) {\r\n          return convert(v);\r\n        })\r\n      });\r\n\r\n    case 'instanceOf':\r\n    case 'element':\r\n    case 'elementType':\r\n    default:\r\n      {\r\n        if ((name === null || name === void 0 ? void 0 : name.indexOf('|')) > 0) {\r\n          // react-docgen-typescript-plugin doesn't always produce enum-like unions\r\n          // (like if a user has turned off shouldExtractValuesFromUnion) so here we\r\n          // try to recover and construct one.\r\n          try {\r\n            var literalValues = name.split('|').map(function (v) {\r\n              return JSON.parse(v);\r\n            });\r\n            return Object.assign({}, base, {\r\n              name: 'enum',\r\n              value: literalValues\r\n            });\r\n          } catch (err) {// fall through\r\n          }\r\n        }\r\n\r\n        var otherVal = value ? \"\".concat(name, \"(\").concat(value, \")\") : name;\r\n        var otherName = SIGNATURE_REGEXP.test(name) ? 'function' : 'other';\r\n        return Object.assign({}, base, {\r\n          name: otherName,\r\n          value: otherVal\r\n        });\r\n      }\r\n  }\r\n};", "import \"core-js/modules/es.regexp.exec.js\";\r\nimport \"core-js/modules/es.string.replace.js\";\r\nvar QUOTE_REGEX = /^['\"]|['\"]$/g;\r\nexport var trimQuotes = function trimQuotes(str) {\r\n  return str.replace(QUOTE_REGEX, '');\r\n};\r\nexport var includesQuotes = function includesQuotes(str) {\r\n  return QUOTE_REGEX.test(str);\r\n};", "import { convert as tsConvert } from './typescript';\r\nimport { convert as flowConvert } from './flow';\r\nimport { convert as propTypesConvert } from './proptypes';\r\nexport var convert = function convert(docgenInfo) {\r\n  var type = docgenInfo.type,\r\n      tsType = docgenInfo.tsType,\r\n      flowType = docgenInfo.flowType;\r\n  if (type != null) return propTypesConvert(type);\r\n  if (tsType != null) return tsConvert(tsType);\r\n  if (flowType != null) return flowConvert(flowType);\r\n  return null;\r\n};", "import \"core-js/modules/es.function.name.js\";\r\nimport \"core-js/modules/es.object.to-string.js\";\r\nimport \"core-js/modules/es.symbol.js\";\r\nimport \"core-js/modules/es.symbol.description.js\";\r\nimport \"core-js/modules/es.array.map.js\";\r\nimport { TypeSystem } from './types';\r\nimport { createSummaryValue } from '../utils';\r\nimport { createFlowPropDef } from './flow/createPropDef';\r\nimport { isDefaultValueBlacklisted } from './utils/defaultValue';\r\nimport { createTsPropDef } from './typeScript/createPropDef';\r\nimport { convert } from '../convert';\r\n\r\nfunction createType(type) {\r\n  // A type could be null if a defaultProp has been provided without a type definition.\r\n  return type != null ? createSummaryValue(type.name) : null;\r\n} // A heuristic to tell if a defaultValue comes from RDT\r\n\r\n\r\nfunction isReactDocgenTypescript(defaultValue) {\r\n  var computed = defaultValue.computed,\r\n      func = defaultValue.func;\r\n  return typeof computed === 'undefined' && typeof func === 'undefined';\r\n}\r\n\r\nfunction isStringValued(type) {\r\n  if (!type) {\r\n    return false;\r\n  }\r\n\r\n  if (type.name === 'string') {\r\n    return true;\r\n  }\r\n\r\n  if (type.name === 'enum') {\r\n    return Array.isArray(type.value) && type.value.every(function (_ref) {\r\n      var tv = _ref.value;\r\n      return typeof tv === 'string' && tv[0] === '\"' && tv[tv.length - 1] === '\"';\r\n    });\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction createDefaultValue(defaultValue, type) {\r\n  if (defaultValue != null) {\r\n    var value = defaultValue.value;\r\n\r\n    if (!isDefaultValueBlacklisted(value)) {\r\n      // Work around a bug in `react-docgen-typescript-loader`, which returns 'string' for a string\r\n      // default, instead of \"'string'\" -- which is incorrect\r\n      if (isReactDocgenTypescript(defaultValue) && isStringValued(type)) {\r\n        return createSummaryValue(JSON.stringify(value));\r\n      }\r\n\r\n      return createSummaryValue(value);\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction createBasicPropDef(name, type, docgenInfo) {\r\n  var description = docgenInfo.description,\r\n      required = docgenInfo.required,\r\n      defaultValue = docgenInfo.defaultValue;\r\n  return {\r\n    name: name,\r\n    type: createType(type),\r\n    required: required,\r\n    description: description,\r\n    defaultValue: createDefaultValue(defaultValue, type)\r\n  };\r\n}\r\n\r\nfunction applyJsDocResult(propDef, jsDocParsingResult) {\r\n  if (jsDocParsingResult.includesJsDoc) {\r\n    var description = jsDocParsingResult.description,\r\n        extractedTags = jsDocParsingResult.extractedTags;\r\n\r\n    if (description != null) {\r\n      // eslint-disable-next-line no-param-reassign\r\n      propDef.description = jsDocParsingResult.description;\r\n    }\r\n\r\n    var hasParams = extractedTags.params != null;\r\n    var hasReturns = extractedTags.returns != null && extractedTags.returns.type != null;\r\n\r\n    if (hasParams || hasReturns) {\r\n      // eslint-disable-next-line no-param-reassign\r\n      propDef.jsDocTags = {\r\n        params: hasParams && extractedTags.params.map(function (x) {\r\n          return {\r\n            name: x.getPrettyName(),\r\n            description: x.description\r\n          };\r\n        }),\r\n        returns: hasReturns && {\r\n          description: extractedTags.returns.description\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  return propDef;\r\n}\r\n\r\nexport var javaScriptFactory = function javaScriptFactory(propName, docgenInfo, jsDocParsingResult) {\r\n  var propDef = createBasicPropDef(propName, docgenInfo.type, docgenInfo);\r\n  propDef.sbType = convert(docgenInfo);\r\n  return applyJsDocResult(propDef, jsDocParsingResult);\r\n};\r\nexport var tsFactory = function tsFactory(propName, docgenInfo, jsDocParsingResult) {\r\n  var propDef = createTsPropDef(propName, docgenInfo);\r\n  propDef.sbType = convert(docgenInfo);\r\n  return applyJsDocResult(propDef, jsDocParsingResult);\r\n};\r\nexport var flowFactory = function flowFactory(propName, docgenInfo, jsDocParsingResult) {\r\n  var propDef = createFlowPropDef(propName, docgenInfo);\r\n  propDef.sbType = convert(docgenInfo);\r\n  return applyJsDocResult(propDef, jsDocParsingResult);\r\n};\r\nexport var unknownFactory = function unknownFactory(propName, docgenInfo, jsDocParsingResult) {\r\n  var propDef = createBasicPropDef(propName, {\r\n    name: 'unknown'\r\n  }, docgenInfo);\r\n  return applyJsDocResult(propDef, jsDocParsingResult);\r\n};\r\nexport var getPropDefFactory = function getPropDefFactory(typeSystem) {\r\n  switch (typeSystem) {\r\n    case TypeSystem.JAVASCRIPT:\r\n      return javaScriptFactory;\r\n\r\n    case TypeSystem.TYPESCRIPT:\r\n      return tsFactory;\r\n\r\n    case TypeSystem.FLOW:\r\n      return flowFactory;\r\n\r\n    default:\r\n      return unknownFactory;\r\n  }\r\n};", "import \"core-js/modules/es.array.map.js\";\r\nimport \"core-js/modules/es.object.assign.js\";\r\nimport \"core-js/modules/es.function.name.js\";\r\nimport \"core-js/modules/es.object.keys.js\";\r\nimport \"core-js/modules/es.array.filter.js\";\r\nimport \"core-js/modules/es.object.to-string.js\";\r\nimport \"core-js/modules/es.symbol.js\";\r\nimport \"core-js/modules/es.symbol.description.js\";\r\nimport { parseJsDoc } from '../jsdocParser';\r\nimport { TypeSystem } from './types';\r\nimport { getDocgenSection, isValidDocgenSection, getDocgenDescription } from './utils';\r\nimport { getPropDefFactory } from './createPropDef';\r\n\r\nvar getTypeSystem = function getTypeSystem(docgenInfo) {\r\n  if (docgenInfo.type != null) {\r\n    return TypeSystem.JAVASCRIPT;\r\n  }\r\n\r\n  if (docgenInfo.flowType != null) {\r\n    return TypeSystem.FLOW;\r\n  }\r\n\r\n  if (docgenInfo.tsType != null) {\r\n    return TypeSystem.TYPESCRIPT;\r\n  }\r\n\r\n  return TypeSystem.UNKNOWN;\r\n};\r\n\r\nexport var extractComponentSectionArray = function extractComponentSectionArray(docgenSection) {\r\n  var typeSystem = getTypeSystem(docgenSection[0]);\r\n  var createPropDef = getPropDefFactory(typeSystem);\r\n  return docgenSection.map(function (item) {\r\n    var _item$type;\r\n\r\n    var sanitizedItem = item;\r\n\r\n    if ((_item$type = item.type) !== null && _item$type !== void 0 && _item$type.elements) {\r\n      sanitizedItem = Object.assign({}, item, {\r\n        type: Object.assign({}, item.type, {\r\n          value: item.type.elements\r\n        })\r\n      });\r\n    }\r\n\r\n    return extractProp(sanitizedItem.name, sanitizedItem, typeSystem, createPropDef);\r\n  });\r\n};\r\nexport var extractComponentSectionObject = function extractComponentSectionObject(docgenSection) {\r\n  var docgenPropsKeys = Object.keys(docgenSection);\r\n  var typeSystem = getTypeSystem(docgenSection[docgenPropsKeys[0]]);\r\n  var createPropDef = getPropDefFactory(typeSystem);\r\n  return docgenPropsKeys.map(function (propName) {\r\n    var docgenInfo = docgenSection[propName];\r\n    return docgenInfo != null ? extractProp(propName, docgenInfo, typeSystem, createPropDef) : null;\r\n  }).filter(Boolean);\r\n};\r\nexport var extractComponentProps = function extractComponentProps(component, section) {\r\n  var docgenSection = getDocgenSection(component, section);\r\n\r\n  if (!isValidDocgenSection(docgenSection)) {\r\n    return [];\r\n  } // vue-docgen-api has diverged from react-docgen and returns an array\r\n\r\n\r\n  return Array.isArray(docgenSection) ? extractComponentSectionArray(docgenSection) : extractComponentSectionObject(docgenSection);\r\n};\r\n\r\nfunction extractProp(propName, docgenInfo, typeSystem, createPropDef) {\r\n  var jsDocParsingResult = parseJsDoc(docgenInfo.description);\r\n  var isIgnored = jsDocParsingResult.includesJsDoc && jsDocParsingResult.ignore;\r\n\r\n  if (!isIgnored) {\r\n    var propDef = createPropDef(propName, docgenInfo, jsDocParsingResult);\r\n    return {\r\n      propDef: propDef,\r\n      jsDocTags: jsDocParsingResult.extractedTags,\r\n      docgenInfo: docgenInfo,\r\n      typeSystem: typeSystem\r\n    };\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport function extractComponentDescription(component) {\r\n  return component != null && getDocgenDescription(component);\r\n}", "import { combineParameters } from '@storybook/store';\r\nexport var enhanceArgTypes = function enhanceArgTypes(context) {\r\n  var component = context.component,\r\n      userArgTypes = context.argTypes,\r\n      _context$parameters$d = context.parameters.docs,\r\n      docs = _context$parameters$d === void 0 ? {} : _context$parameters$d;\r\n  var extractArgTypes = docs.extractArgTypes;\r\n  var extractedArgTypes = extractArgTypes && component ? extractArgTypes(component) : {};\r\n  var withExtractedTypes = extractedArgTypes ? combineParameters(extractedArgTypes, userArgTypes) : userArgTypes;\r\n  return withExtractedTypes;\r\n};", "export var ADDON_ID = 'storybook/docs';\r\nexport var PANEL_ID = \"\".concat(ADDON_ID, \"/panel\");\r\nexport var PARAM_KEY = \"docs\";\r\nexport var SNIPPET_RENDERED = \"\".concat(ADDON_ID, \"/snippet-rendered\");\r\nexport var SourceType;\r\n\r\n(function (SourceType) {\r\n  SourceType[\"AUTO\"] = \"auto\";\r\n  SourceType[\"CODE\"] = \"code\";\r\n  SourceType[\"DYNAMIC\"] = \"dynamic\";\r\n})(SourceType || (SourceType = {}));", "import \"core-js/modules/es.object.to-string.js\";\r\nimport \"core-js/modules/es.regexp.exec.js\";\r\nimport \"core-js/modules/es.function.name.js\";\r\n// `addons/x` is for the monorepo, `addon-x` is for normal usage\r\nvar packageRe = /(addons\\/|addon-)(docs|controls)/;\r\nexport var hasDocsOrControls = function hasDocsOrControls(options) {\r\n  var _options$presetsList;\r\n\r\n  return (_options$presetsList = options.presetsList) === null || _options$presetsList === void 0 ? void 0 : _options$presetsList.some(function (preset) {\r\n    return packageRe.test(preset.name);\r\n  });\r\n};"],
  "mappings": "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",
  "names": ["doctrine", "parseJsDoc", "TypeSystem", "str", "import_es_regexp_exec", "import_es_regexp_exec", "FlowTypesType", "createFlowPropDef", "import_es_regexp_exec", "createType", "createDefaultValue", "createTsPropDef", "createType", "createDefaultValue", "convertSig", "convert", "import_es_regexp_exec", "isLiteral", "toEnumOption", "convertSig", "convert", "import_es_regexp_exec", "import_es_regexp_exec", "trimQuotes", "str", "includesQuotes", "convert", "mapValues", "convert", "createType", "createDefaultValue", "javaScriptFactory", "convert", "tsFactory", "flowFactory", "unknownFactory", "getPropDefFactory", "getTypeSystem", "extractComponentSectionArray", "extractComponentSectionObject", "extractComponentProps", "enhanceArgTypes", "SourceType", "import_es_regexp_exec"]
}
